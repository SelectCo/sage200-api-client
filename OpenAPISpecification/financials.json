{
  "openapi": "3.0.1",
  "info": {
    "title": "Sage 200 v1 Extra Financials",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.columbus.sage.com/uk/sage200extra/accounts/v1/"
    }
  ],
  "tags": [
    {
      "name": "Account Status Types",
      "description": ""
    },
    {
      "name": "Aged Balances Ageing Types",
      "description": ""
    },
    {
      "name": "Allocation Status Types",
      "description": ""
    },
    {
      "name": "Contact Number Types",
      "description": ""
    },
    {
      "name": "Country Codes",
      "description": ""
    },
    {
      "name": "Credit Bureaus",
      "description": ""
    },
    {
      "name": "Credit Positions",
      "description": ""
    },
    {
      "name": "Currencies",
      "description": ""
    },
    {
      "name": "Currency Exchange Rates",
      "description": ""
    },
    {
      "name": "Currency Iso Codes",
      "description": ""
    },
    {
      "name": "Currency Transaction Types",
      "description": ""
    },
    {
      "name": "Document Layouts",
      "description": ""
    },
    {
      "name": "Document Types",
      "description": ""
    },
    {
      "name": "Exchange Rate Amendability Types",
      "description": ""
    },
    {
      "name": "Exchange Rate Types",
      "description": ""
    },
    {
      "name": "Financial Report Layout Types",
      "description": ""
    },
    {
      "name": "Financial Report Layout Views",
      "description": ""
    },
    {
      "name": "Financial Report Row Layout Debit Or Credit Types",
      "description": ""
    },
    {
      "name": "Financial Report Row Layout Position Types",
      "description": ""
    },
    {
      "name": "Financial Report Row Line Types",
      "description": ""
    },
    {
      "name": "Financial Year Period Views",
      "description": ""
    },
    {
      "name": "Tax Account Entry Types",
      "description": ""
    },
    {
      "name": "Tax Codes",
      "description": ""
    },
    {
      "name": "Trader Account Types",
      "description": ""
    },
    {
      "name": "Trader Contact Roles",
      "description": ""
    },
    {
      "name": "Trader Location Types",
      "description": ""
    },
    {
      "name": "Trader Payment Terms",
      "description": ""
    },
    {
      "name": "Trader Transaction Types",
      "description": ""
    },
    {
      "name": "Trading Revaluation Allocation Entry Types",
      "description": ""
    }
  ],
  "paths": {
    "/currencies": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Currencies Collection",
        "description": "Sage 200 works in multiple currencies and each company can configure up to 99 currencies to use. All currencies can be configured to use a single exchange rate, a period exchange rates or, both. One currency must be configured as the base currency and this cannot be changed once transactions have been entered.<P>If a currency is configured as amendable, the exchange rate can be modified when entering transactions.</P>",
        "operationId": "GetCurrencies",
        "responses": {
          "200": {
            "description": "The list of currencies has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/currency"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Currencies Collection",
      "x-sage-changelog": [
        {
          "date": "05/02/2016",
          "title": "Extended operation",
          "description": "This operation now includes the fields 'is_base_currency' and 'is_euro_currency', which indicate whether or not a currency is the base currency or Euro currency respectively."
        },
        {
          "date": "16/09/2020",
          "title": "Enhanced endpoint fields",
          "description": "This operation now includes the fields 'use_for_new_accounts', 'exchange_rate_type', 'exchange_rate_amendability_type' and 'date_time_created'."
        }
      ]
    },
    "/currencies/{Id}": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Single Currency Resource",
        "description": "Sage 200 works in multiple currencies and each company can configure up to 99 currencies to use. All currencies can be configured to use a single exchange rate, a period exchange rates or, both. One currency must be configured as the base currency and this cannot be changed once transactions have been entered.<P>If a currency is configured as amendable, the exchange rate can be modified when entering transactions.</P>",
        "operationId": "GetCurrency",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the currency.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of currency successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/currency"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Single Currency Resource"
    },
    "/exchange_rate_types": {
      "get": {
        "tags": [
          "Exchange Rate Types"
        ],
        "summary": "Exchange Rate Types",
        "description": "Exchange rates may change on a daily basis so, a company will configure exchange rates according to their best method for updating. Exchange rates can be configured as 'Single' or 'Period', according to the company preference.<P>The API endpoint returns details of the exchange rate types that can be used.</P>",
        "operationId": "GetExchangeRateTypes",
        "responses": {
          "200": {
            "description": "The details of the exchange rate types have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/exchange_rate_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Exchange Rate Types"
    },
    "/exchange_rate_amendability_types": {
      "get": {
        "tags": [
          "Exchange Rate Amendability Types"
        ],
        "summary": "Exchange Rate Amendability Types",
        "description": "Exchange rate amendability types are used to allow control when and where a currency can be changed within the application. Currencies can be configured as 'Not Amendable', 'Amendable - Cash Postings Only', 'Amendable - All' or 'Fixed to Euro'.<P>The API endpoint returns details of the exchange rate amendability types that can be used.</P>",
        "operationId": "GetExchangeRateAmendabilityTypes",
        "responses": {
          "200": {
            "description": "The details of the exchange rate amendability types have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/exchange_rate_amendability_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Exchange rate amendability types",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/currency_exchange_rates": {
      "post": {
        "tags": [
          "Currency Exchange Rates"
        ],
        "summary": "Currency Exchange Rates",
        "description": "Returns the currency exchange rates that have been specified within the application.",
        "operationId": "PostCurrencyExchangeRates",
        "requestBody": {
          "description": "The request for currency exchange rates.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/currency_exchange_rate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The currency exchange rate was successfully returned. Response body will include the currency exchange rate details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/currency_exchange_rate"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "CurrencyExchangeRatesRequest"
      },
      "x-sage-pathtitle": "Currency exchange rates",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        },
        {
          "date": "26/07/2021",
          "title": "Enhanced endpoint field",
          "description": "This operation now includes the field 'currency_transaction_type'."
        }
      ]
    },
    "/currency_transaction_types": {
      "get": {
        "tags": [
          "Currency Transaction Types"
        ],
        "summary": "Currency Transaction Types",
        "description": "Currency transaction types are used to determine processing to acquire the exchange rate. Currency transaction type can be 'CurrencyTransactionCash' or 'CurrencyTransactionNonCash'.<P>The API endpoint returns details of the currency transaction types that can be used.</P>",
        "operationId": "GetCurrencyTransactionTypes",
        "responses": {
          "200": {
            "description": "The details of the currency transaction types have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/currency_transaction_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Currency Transaction Types",
      "x-sage-changelog": [
        {
          "date": "26/07/2021",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/account_status_types": {
      "get": {
        "tags": [
          "Account Status Types"
        ],
        "summary": "Account Status Types",
        "description": "The account status is used to determine whether a customer, supplier, nominal or bank account is hidden or shown (Sage 200 Standard and versions of Professional released after July 2017). Account status can be configured as 'Active' or 'Hidden'.<P>The API endpoint returns details of the account status types that can be used.</P>",
        "operationId": "GetAccountStatusTypes",
        "responses": {
          "200": {
            "description": "The list of account status types has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/account_status_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Account Status Types"
    },
    "/allocation_status_types": {
      "get": {
        "tags": [
          "Allocation Status Types"
        ],
        "summary": "Allocation Status Types",
        "description": "The allocation status is used to determine whether a transaction is allocated in full, in part, or not at all.",
        "operationId": "GetAllocationStatusTypes",
        "responses": {
          "200": {
            "description": "The list of allocation status types has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/allocation_status_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Allocation Status Types",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/trader_account_types": {
      "get": {
        "tags": [
          "Trader Account Types"
        ],
        "summary": "Trader Account Types",
        "description": "The trader account type is used to decide how transactions are stored on individual accounts.",
        "operationId": "GetTraderAccountTypes",
        "responses": {
          "200": {
            "description": "The list of account status types has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trader_account_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Trader Account Types"
    },
    "/document_types": {
      "get": {
        "tags": [
          "Document Types"
        ],
        "summary": "Document Types",
        "description": "These are the type of document used within the application. Document types can be 'Sales Order', 'Sales Invoice', 'Purchase Order', 'Purchase Invoice', 'Customer Statement', 'Sales Credit Notes', 'Customer Debtors Letters', 'Sales Despatch Notes', 'Sales Quotations', 'Purchase Credit Notes', 'Purchase Remittance', 'Purchase Return', 'Sales Proforma', 'Draft Bill', 'Billing Invoice', 'Billing Credit Note', or 'Sales Order Acknowledgement'.",
        "operationId": "GetDocumentTypes",
        "responses": {
          "200": {
            "description": "The details of the document types have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/document_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Document types",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/document_types/{Id}": {
      "get": {
        "tags": [
          "Document Types"
        ],
        "summary": "Document Types",
        "description": "These are the type of document used within the application. Document types can be 'Sales Order', 'Sales Invoice', 'Purchase Order', 'Purchase Invoice', 'Customer Statement', 'Sales Credit Notes', 'Customer Debtors Letters', 'Sales Despatch Notes', 'Sales Quotations', 'Purchase CreditNotes', 'Purchase Remittance', 'Purchase Return', 'Sales Proforma', 'Draft Bill', 'Billing Invoice', 'Billing Credit Note', or 'Sales Order Acknowledgement'.",
        "operationId": "GetDocumentType",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the document type.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The details of the document type has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document_type"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Document types"
    },
    "/document_layouts": {
      "get": {
        "tags": [
          "Document Layouts"
        ],
        "summary": "Document Layouts",
        "description": "Document layout are the layouts that are available within the application, which are associated with the document types.",
        "operationId": "GetDocumentLayouts",
        "responses": {
          "200": {
            "description": "Details of the document layout have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/document_layout"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Document layouts",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/document_layouts/{Id}": {
      "get": {
        "tags": [
          "Document Layouts"
        ],
        "summary": "Document Layout",
        "description": "Document layout are the layouts that are available within the application, which are associated with the document types.",
        "operationId": "GetDocumentLayout",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the document layout.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the document layout have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document_layout"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Document layout"
    },
    "/country_codes": {
      "get": {
        "tags": [
          "Country Codes"
        ],
        "summary": "Country Codes",
        "description": "All countries each have a specific code to identify accounts that belong to that country.",
        "operationId": "GetCountryCodes",
        "responses": {
          "200": {
            "description": "The list of country codes has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/country_code"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Country codes",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "Enhanced endpoint fields",
          "description": "This operation now includes the fields 'tax_mask' and 'date_time_created'."
        }
      ]
    },
    "/country_codes/{Id}": {
      "get": {
        "tags": [
          "Country Codes"
        ],
        "summary": "Country Code",
        "description": "All countries each have a specific code to identify accounts that belong to that country.",
        "operationId": "GetCountryCode",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the country code.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of country code successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/country_code"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Country code"
    },
    "/tax_codes": {
      "get": {
        "tags": [
          "Tax Codes"
        ],
        "summary": "Tax Codes",
        "description": "Tax codes are normally used for UK business VAT Rates. They are accessed by Sage 200 modules in order to; <ul><li>Analyse the rates to Nominal Ledger accounts.</li><li>Analyse the rates to the VAT Return.</li><li>Read percentages for calculations in transactions.</li></ul>The API endpoint returns details of the tax codes that can be used.",
        "operationId": "GetTaxCodes",
        "responses": {
          "200": {
            "description": "The list of tax codes has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tax_code"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Tax codes",
      "x-sage-changelog": [
        {
          "date": "21/08/2019",
          "title": "Extended operation",
          "description": "Tax Codes have been extended to include the name and description of the terms."
        },
        {
          "date": "16/09/2020",
          "title": "Extended operation",
          "description": "This endpoint was enhanced with a GET by Id operation."
        },
        {
          "date": "16/09/2020",
          "title": "Enhanced endpoint fields",
          "description": "This operation now includes the fields 'is_notional_acquisition_tax' and 'date_time_created'."
        }
      ]
    },
    "/tax_codes/{Id}": {
      "get": {
        "tags": [
          "Tax Codes"
        ],
        "summary": "Tax Code",
        "description": "Tax codes are normally used for UK business VAT Rates. They are accessed by Sage 200 modules in order to; <ul><li>Analyse the rates to Nominal Ledger accounts.</li><li>Analyse the rates to the VAT Return.</li><li>Read percentages for calculations in transactions.</li></ul>The API endpoint returns details of the tax codes that can be used.",
        "operationId": "GetTaxCode",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the tax code.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The details of the tax code has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax_code"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Tax code"
    },
    "/currency_iso_codes": {
      "get": {
        "tags": [
          "Currency Iso Codes"
        ],
        "summary": "Currency ISO Codes",
        "description": "All currencies have a designated ISO (International Standards Organisation) code that uniquely identifies that currency.",
        "operationId": "GetCurrencyISOCodes",
        "responses": {
          "200": {
            "description": "The list of currency ISO codes has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/currency_iso_code"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Currency ISO codes",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "Enhanced endpoint field",
          "description": "This operation now includes the field 'date_time_created'."
        }
      ]
    },
    "/currency_iso_codes/{Id}": {
      "get": {
        "tags": [
          "Currency Iso Codes"
        ],
        "summary": "Currency ISO Code",
        "description": "All currencies have a designated ISO (International Standards Organisation) code that uniquely identifies that currency.",
        "operationId": "GetCurrencyISOCode",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the currency ISO code.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of currency ISO code successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/currency_iso_code"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Currency ISO code"
    },
    "/contact_number_types": {
      "get": {
        "tags": [
          "Contact Number Types"
        ],
        "summary": "Contact Number Types",
        "description": "For every customer and supplier, users can store multiple contacts. Each contact can be associated with multiple telephone numbers, mobile numbers, fax numbers, etc. When reading/writing these values, the contact number type is specified.<br /><br />Use this API endpoint to return the definition of a particular contact number type.",
        "operationId": "GetContactNumberTypes",
        "responses": {
          "200": {
            "description": "The list of contact number types has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/contact_number_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Contact number types"
    },
    "/financial_year_period_views": {
      "get": {
        "tags": [
          "Financial Year Period Views"
        ],
        "summary": "Financial Year Period Views",
        "description": "This resource returns the details of all accounting periods for all financial years held for the company. A company always has five future financial years and can have unlimited previous years, depending on how long the company has been operating. The default sort (orderby) field are by 'financial_year_start_date' and 'period_number' ascending.",
        "operationId": "GetFinancialYearPeriodViews",
        "responses": {
          "200": {
            "description": "The details of the accounting periods have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/financial_year_period_view"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Financial year period views",
      "x-sage-changelog": [
        {
          "date": "16/04/2019",
          "title": "Extended operation",
          "description": "The default sort (orderby) field are by 'financial_year_start_date' and 'period_number' ascending."
        }
      ]
    },
    "/tax_account_entry_types": {
      "get": {
        "tags": [
          "Tax Account Entry Types"
        ],
        "summary": "Tax Account Entry Location Types",
        "description": "This list of available types is predefined by the system.</P><P>The API endpoint returns details of tax account entry types that can be used.",
        "operationId": "GetTaxAccountEntryLocationTypes",
        "responses": {
          "200": {
            "description": "The details of the tax account entry types have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tax_account_entry_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Tax account entry location types",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/trading_revaluation_allocation_entry_types": {
      "get": {
        "tags": [
          "Trading Revaluation Allocation Entry Types"
        ],
        "summary": "Tax Account Entry Location Types",
        "description": "This list of available types is predefined by the system.</P><P>The API endpoint returns details of trading revaluation allocation entry types that can be used.",
        "operationId": "GetTradingRevaluationAllocationEntryTypes",
        "responses": {
          "200": {
            "description": "The details of the trading revaluation allocation entry types have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trading_revaluation_allocation_entry_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Tax account entry location types",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/financial_report_row_line_types": {
      "get": {
        "tags": [
          "Financial Report Row Line Types"
        ],
        "summary": "Financial Report Row Line Types",
        "description": "Financial statement layouts are designed to provide a clear representation of your accounts. Each row in a financial layout has an associated 'type'. This list of available types is predefined by the system.</P><P>The API endpoint returns details of financial report row line types that can be used.",
        "operationId": "GetFinancialReportRowLineTypes",
        "responses": {
          "200": {
            "description": "The details of the financial report row line types have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/financial_report_row_line_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Financial report row line types"
    },
    "/financial_report_row_layout_position_types": {
      "get": {
        "tags": [
          "Financial Report Row Layout Position Types"
        ],
        "summary": "Financial Report Row Layout Position Types",
        "description": "Financial statement layouts are designed to provide a clear representation of your accounts. Each row in a financial layout has an associated layout position 'type'. This list of available types is predefined by the system.</P><P>The API endpoint returns details of financial report row layout position types that can be used.",
        "operationId": "GetFinancialReportRowLayoutPositionTypes",
        "responses": {
          "200": {
            "description": "The details of the financial report row layout position types have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/financial_report_row_layout_position_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Financial report row layout position types"
    },
    "/financial_report_row_layout_debit_or_credit_types": {
      "get": {
        "tags": [
          "Financial Report Row Layout Debit Or Credit Types"
        ],
        "summary": "Financial Report Row Layout Debit Or Credit Types",
        "description": "Financial statement layouts are designed to provide a clear representation of your accounts. Each row in a financial layout can have an associated debit or credit 'type'. This list of available types is predefined by the system.</P><P>The API endpoint returns details of financial report row layout debit or credit types that can be used.",
        "operationId": "GetFinancialReportRowLayoutDebitOrCreditTypes",
        "responses": {
          "200": {
            "description": "The details of the financial report row layout debit or credit types have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/financial_report_row_layout_debit_or_credit_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Financial report row layout debit or credit types"
    },
    "/financial_report_layout_types": {
      "get": {
        "tags": [
          "Financial Report Layout Types"
        ],
        "summary": "Financial Report Layout Types",
        "description": "This list of available types is predefined by the system.</P><P>The API endpoint returns details of financial report layout types that can be used.",
        "operationId": "GetFinancialReportLayoutTypes",
        "responses": {
          "200": {
            "description": "The details of the financial report layout types have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/financial_report_layout_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Financial report layout types"
    },
    "/financial_report_layout_views": {
      "get": {
        "tags": [
          "Financial Report Layout Views"
        ],
        "summary": "Financial Report Layout Views",
        "description": "Financial statement layouts are designed to provide a clear representation of your accounts. This resource returns the details of all financial report layouts. The default sort (orderby) field are by 'financial_report_layout_id' and 'financial_report_row_report_row' ascending.",
        "operationId": "GetFinancialReportLayoutViews",
        "responses": {
          "200": {
            "description": "The details of the report layouts have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/financial_report_layout_view"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Financial report layout views"
    },
    "/trader_location_types": {
      "get": {
        "tags": [
          "Trader Location Types"
        ],
        "summary": "Trader Location Types",
        "description": "All customer/supplier addresses have an associated 'type' which defines the business function that the address provides (e.g. Main address, invoice address, etc).<br /><br />Use this API endpoint to return the details of the Trader Location Types that can be used.",
        "operationId": "GetTraderLocationTypes",
        "responses": {
          "200": {
            "description": "The details of the trader location types have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trader_location_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Trader location types"
    },
    "/trader_transaction_types": {
      "get": {
        "tags": [
          "Trader Transaction Types"
        ],
        "summary": "Trader Transaction Types",
        "description": "Every transaction within Sage 200 has an associated type which defines what function that transaction performs (e.g. Invoice, Purchase Receipt, Credit Note, etc). These transaction types are pre-defined by the system, cannot be changed, and are common across all instances of Sage 200.<br /><br />Use this API endpoint to return the details of the Trader Transaction Types that can be used.",
        "operationId": "GetTraderTransactionTypes",
        "responses": {
          "200": {
            "description": "The details of the trader transaction types have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trader_transaction_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Trader transaction types"
    },
    "/trader_contact_roles": {
      "get": {
        "tags": [
          "Trader Contact Roles"
        ],
        "summary": "Trader Contact Roles",
        "description": "Get trader contact roles.",
        "operationId": "GetTraderContactRoles",
        "responses": {
          "200": {
            "description": "The list of trader contact roles has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trader_contact_role"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Trader contact roles",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/trader_contact_roles/{Id}": {
      "get": {
        "tags": [
          "Trader Contact Roles"
        ],
        "summary": "Trader Contact Role",
        "description": "Get Trader Contact Role.",
        "operationId": "GetTraderContactRole",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the trader contact role.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The details of a trader contact role have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trader_contact_role"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Trader contact role"
    },
    "/credit_bureaus": {
      "get": {
        "tags": [
          "Credit Bureaus"
        ],
        "summary": "Credit Bureaus",
        "description": "Credit bureaus are third party companies used to assess credit risk.",
        "operationId": "GetCreditBureaus",
        "responses": {
          "200": {
            "description": "The list of credit bureaus has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/credit_bureau"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Credit bureaus",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/credit_bureaus/{Id}": {
      "get": {
        "tags": [
          "Credit Bureaus"
        ],
        "summary": "Credit Bureau",
        "description": "Credit bureaus are third party companies used to assess credit risk.",
        "operationId": "GetCreditBureau",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the credit bureau.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of credit bureau successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credit_bureau"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Credit bureau"
    },
    "/credit_positions": {
      "get": {
        "tags": [
          "Credit Positions"
        ],
        "summary": "Credit Positions",
        "description": "Credit positions are used for customer and supplier credit statuses.",
        "operationId": "GetCreditPositions",
        "responses": {
          "200": {
            "description": "The list of credit positions has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/credit_position"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Credit positions",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/credit_positions/{Id}": {
      "get": {
        "tags": [
          "Credit Positions"
        ],
        "summary": "Credit Position",
        "description": "Credit positions are used for customer and supplier credit statuses.",
        "operationId": "GetCreditPosition",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the credit position.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of position successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credit_position"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Credit position"
    },
    "/trader_payment_terms": {
      "get": {
        "tags": [
          "Trader Payment Terms"
        ],
        "summary": "Trader Payment Terms",
        "description": "Gets the list of Customer and Supplier trading terms which can be used. For example, \"Paid from document date\", or \"Paid from end of month\".",
        "operationId": "GetTraderPaymentTerms",
        "responses": {
          "200": {
            "description": "The list of trader payment terms has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trader_payment_terms"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Trader payment terms",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/aged_balances_ageing_types": {
      "get": {
        "tags": [
          "Aged Balances Ageing Types"
        ],
        "summary": "Aged Balances Ageing Types",
        "description": "The ageing type for aged transactions. Ageing type can be 'TransactionDate', 'DueDate', or 'CalendarMonth'.<P>The API endpoint returns details of the ageing types that can be used.</P>",
        "operationId": "GetAgedBalancesAgeingTypes",
        "responses": {
          "200": {
            "description": "The details of the aged balances ageing types have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/aged_balances_ageing_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Aged balances ageing types",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "currency": {
        "required": [
          "name",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Currency record Id.",
            "format": "int64",
            "readOnly": true
          },
          "symbol": {
            "maxLength": 4,
            "type": "string",
            "description": "Currency symbol.",
            "readOnly": true
          },
          "name": {
            "maxLength": 30,
            "type": "string",
            "description": "Currency name.",
            "readOnly": true
          },
          "core_currency_rate": {
            "type": "number",
            "description": "Currency rate in use against base.",
            "format": "decimal 6dp",
            "readOnly": true
          },
          "euro_currency_rate": {
            "type": "number",
            "description": "Euro rate.",
            "format": "decimal 6dp",
            "readOnly": true
          },
          "is_base_currency": {
            "type": "boolean",
            "description": "Flag to indicate if the currency is the base currency.",
            "readOnly": true
          },
          "is_euro_currency": {
            "type": "boolean",
            "description": "Flag to indicate if the currency is Euro.",
            "readOnly": true
          },
          "use_for_new_accounts": {
            "type": "boolean",
            "description": "Flag to indicate if the currency is used for new or amending customers or suppliers.",
            "readOnly": true
          },
          "exchange_rate_type": {
            "maxLength": 20,
            "type": "string",
            "description": "The type of exchange rate used on the currency.",
            "readOnly": true,
            "default": "ExchangeRateSingle"
          },
          "exchange_rate_amendability_type": {
            "maxLength": 50,
            "type": "string",
            "description": "The type of exchange rate amendability used on the currency.",
            "readOnly": true
          },
          "currency_iso_code_id": {
            "type": "integer",
            "description": "ISO Currency Code Record Id.",
            "format": "int64",
            "readOnly": true
          },
          "currency_iso_code": {
            "type": "object",
            "properties": {},
            "description": "The currency ISO code record for the currency.",
            "readOnly": true
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Sage 200 works in multiple currencies and each company can configure up to 99 currencies to use., and   all can be configured to use a single exchange rate, period exchange rates, or both. One currency must be configured as the base currency and this cannot be changed once transactions have been entered.<P>If a currency is configured as amendable, the exchange rate can be modified when entering transactions.</P>"
      },
      "exchange_rate_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Enum record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum description.",
            "readOnly": true
          },
          "value": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum value.",
            "readOnly": true
          }
        },
        "description": "Exchange rates may change on a daily basis so, a company will configure exchange rates according to their best method for updating. Exchange rates can be configured as 'Single' or 'Period', according to the company preference.<P>The API endpoint returns details of the exchange rate types that can be used.</P>"
      },
      "exchange_rate_amendability_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Enum record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 50,
            "type": "string",
            "description": "Enum description.",
            "readOnly": true
          },
          "value": {
            "maxLength": 50,
            "type": "string",
            "description": "Enum value.",
            "readOnly": true
          }
        },
        "description": "Exchange rate amendability types are used to allow control when and where a currency can be changed within the application. Currencies can be configured as 'Not Amendable', 'Amendable - Cash Postings Only', 'Amendable - All' or 'Fixed to Euro'.<P>The API endpoint returns details of the exchange rate amendability types that can be used.</P>"
      },
      "currency_exchange_rate": {
        "required": [
          "currency_from_id",
          "currency_to_id"
        ],
        "type": "object",
        "properties": {
          "currency_from_id": {
            "type": "integer",
            "description": "Currency record Id to convert from.",
            "format": "int64",
            "readOnly": true
          },
          "currency_from_rate": {
            "type": "number",
            "description": "The currency from exchange rate.",
            "format": "decimal 6dp",
            "readOnly": true
          },
          "currency_from_value": {
            "type": "number",
            "description": "The currency from value.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "currency_from_is_amendable": {
            "type": "boolean",
            "description": "Indicates whether the currency from is amendable.",
            "readOnly": true
          },
          "currency_from_no_periods": {
            "type": "boolean",
            "description": "Indicates whether the currency from exchange rate has no periods defined.",
            "readOnly": true
          },
          "currency_from_is_expired": {
            "type": "boolean",
            "description": "Indicates whether the currency from exchange rate has expired.",
            "readOnly": true
          },
          "currency_to_id": {
            "type": "integer",
            "description": "Currency record Id to convert to.",
            "format": "int64",
            "readOnly": true
          },
          "currency_to_rate": {
            "type": "number",
            "description": "The currency to exchange rate.",
            "format": "decimal 6dp",
            "readOnly": true
          },
          "currency_to_value": {
            "type": "number",
            "description": "The currency to value.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "currency_to_is_amendable": {
            "type": "boolean",
            "description": "Indicates whether the currency to is amendable.",
            "readOnly": true
          },
          "currency_to_no_periods": {
            "type": "boolean",
            "description": "Indicates whether the currency to exchange rate has no periods defined.",
            "readOnly": true
          },
          "currency_to_is_expired": {
            "type": "boolean",
            "description": "Indicates whether the currency to exchange rate has expired.",
            "readOnly": true
          },
          "exchange_rate_type": {
            "maxLength": 20,
            "type": "string",
            "description": "The exchange rate type used to acquire the currency exchange rate."
          },
          "currency_transaction_type": {
            "maxLength": 20,
            "type": "string",
            "description": "The currency transaction type used to acquire the currency exchange rate."
          },
          "transaction_date": {
            "type": "string",
            "description": "The date of the transaction used to acquire the currency exchange rate.",
            "format": "date-time"
          },
          "exchange_rate": {
            "type": "number",
            "description": "The exchange rate between currency from and currency to.",
            "format": "decimal 6dp",
            "readOnly": true
          },
          "currency_from": {
            "type": "object",
            "properties": {},
            "description": "The currency from.",
            "readOnly": true
          },
          "currency_to": {
            "type": "object",
            "properties": {},
            "description": "The currency to.",
            "readOnly": true
          },
          "currency_base": {
            "type": "object",
            "properties": {},
            "description": "The base currency.",
            "readOnly": true
          },
          "currency_euro": {
            "type": "object",
            "properties": {},
            "description": "The euro currency.",
            "readOnly": true
          }
        },
        "description": "The currency exchange rates that have been specified within the application."
      },
      "currency_transaction_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Enum record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 50,
            "type": "string",
            "description": "Enum description.",
            "readOnly": true
          },
          "value": {
            "maxLength": 50,
            "type": "string",
            "description": "Enum value.",
            "readOnly": true
          }
        },
        "description": "Currency transaction types are used to determine processing to acquire the exchange rate. Currency transaction type can be 'CurrencyTransactionCash' or 'CurrencyTransactionNonCash'.<P>The API endpoint returns details of the currency transaction types that can be used.</P>"
      },
      "account_status_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Enum record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 30,
            "type": "string",
            "description": "Enum description."
          },
          "value": {
            "maxLength": 30,
            "type": "string",
            "description": "Enum value."
          }
        },
        "description": "The account status is used to determine whether a customer, supplier, nominal or bank account is hidden or shown (Sage 200 Standard and versions of Professional released after July 2017). For bank and nominal accounts, status types were added to versions after February 2018. Account status can be configured as 'Active' or 'Hidden'.<P>The API endpoint returns details of the account status types that can be used.</P>"
      },
      "allocation_status_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Enum record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 50,
            "type": "string",
            "description": "Enum description."
          },
          "value": {
            "maxLength": 50,
            "type": "string",
            "description": "Enum value."
          }
        },
        "description": "The allocation status is used to determine whether a transaction is allocated in full, in part, or not at all."
      },
      "trader_account_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Enum record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 30,
            "type": "string",
            "description": "Enum description."
          },
          "value": {
            "maxLength": 30,
            "type": "string",
            "description": "Enum value."
          }
        },
        "description": "The trader account type is used to decide how transactions are stored on individual accounts. You can use all three account types in any mix. Use the account types to balance your need for a detailed breakdown of transactions with your need to save disk space. (Sage 200 Professional only, Sage 200 Standard defaults to 'TradingAccountTypeOpenItem')",
        "x-sage-professional-only": true
      },
      "document_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Document type record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Document type description.",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "description": "Document type enum value.",
            "readOnly": true
          },
          "is_mandatory": {
            "type": "boolean",
            "description": "Whether the document type is mandatory.",
            "readOnly": true
          },
          "trader_contact_role_id": {
            "type": "integer",
            "description": "Trader contact role record Id.",
            "format": "int64",
            "readOnly": true
          },
          "used_in_module": {
            "type": "string",
            "description": "Module in which the document type is used.",
            "readOnly": true
          },
          "trader_contact_role": {
            "type": "object",
            "properties": {},
            "description": "Trader contact role.",
            "readOnly": true
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "These are the type of document used within the application. Document types can be 'Sales Order', 'Sales Invoice', 'Purchase Order', 'Purchase Invoice', 'Customer Statement', 'Sales Credit Notes', 'Customer Debtors Letters', 'Sales Despatch Notes', 'Sales Quotations', 'Purchase CreditNotes', 'Purchase Remittance', 'Purchase Return', 'Sales Proforma', 'Draft Bill', 'Billing Invoice', 'Billing Credit Note', or 'Sales Order Acknowledgement'."
      },
      "document_layout": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Document layout record Id.",
            "format": "int64",
            "readOnly": true
          },
          "sys_document_type_id": {
            "type": "integer",
            "description": "Document type record Id.",
            "format": "int64",
            "readOnly": true
          },
          "name": {
            "maxLength": 256,
            "type": "string",
            "description": "Document layout name.",
            "readOnly": true
          },
          "layout": {
            "maxLength": 50,
            "type": "string",
            "description": "Document layout layout name.",
            "readOnly": true
          },
          "is_default": {
            "type": "boolean",
            "description": "Flag to indicate if this is the default document layout.",
            "readOnly": true
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Document layout are the layouts that are available within the application, which are associated with the document types."
      },
      "country_code": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Country code record Id.",
            "format": "int64",
            "readOnly": true
          },
          "code": {
            "maxLength": 2,
            "type": "string",
            "description": "Country code.",
            "readOnly": true
          },
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "Country name.",
            "readOnly": true
          },
          "eu_member": {
            "type": "boolean",
            "description": "Flag to indicate if the country is a member of the EU.",
            "readOnly": true
          },
          "tax_mask": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Country code tax mask record Id.",
                "format": "int64",
                "readOnly": true
              },
              "name": {
                "maxLength": 255,
                "type": "string",
                "description": "Country code tax mask name."
              },
              "date_time_created": {
                "type": "string",
                "description": "The date and time this entity was created (UTC).",
                "format": "date-time",
                "readOnly": true
              },
              "date_time_updated": {
                "type": "string",
                "description": "The date and time this entity was last updated (UTC).",
                "format": "date-time",
                "readOnly": true
              }
            },
            "description": "Country code tax mask object."
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "All countries each have a specific code to identify accounts that belong to that country."
      },
      "tax_code": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Tax code record Id.",
            "format": "int64",
            "readOnly": true
          },
          "code": {
            "type": "integer",
            "description": "Tax code.",
            "format": "int16"
          },
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "Name of the tax code."
          },
          "tax_rate": {
            "type": "number",
            "description": "Tax rate.",
            "format": "decimal 2dp"
          },
          "terms": {
            "maxLength": 54,
            "type": "string",
            "description": "Name of the terms.",
            "readOnly": true
          },
          "terms_description": {
            "maxLength": 60,
            "type": "string",
            "description": "Description of the terms.",
            "readOnly": true
          },
          "is_notional_acquisition_tax": {
            "type": "boolean",
            "description": "Whether the terms indicate notional acquisition tax is applicable.",
            "readOnly": true
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Tax codes are normally used for UK business VAT Rates. They are accessed by Sage 200 modules in order to: <ul><li>- Analyse the rates to Nominal Ledger accounts.</li><li>- Analyse the rates to the VAT Return.</li><li>- Read percentages for calculations in transactions.</li></ul>The API endpoint returns details of the tax codes that can be used."
      },
      "currency_iso_code": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Currency ISO code record Id.",
            "format": "int64",
            "readOnly": true
          },
          "code": {
            "maxLength": 3,
            "type": "string",
            "description": "ISO currency code.",
            "readOnly": true
          },
          "name": {
            "maxLength": 100,
            "type": "string",
            "description": "ISO currency name.",
            "readOnly": true
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "All currencies have a designated ISO (International Standards Organisation) code that uniquely identifies that currency."
      },
      "contact_number_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Contact number type record Id.",
            "format": "int64",
            "readOnly": true
          },
          "value": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum value.",
            "readOnly": true
          },
          "description": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum description.",
            "readOnly": true
          }
        },
        "description": "For every customer and supplier, users can store multiple contacts. Each contact can be associated with multiple telephone numbers, mobile numbers, fax numbers, etc. When reading/writing these values, the contact number type is specified.<br /><br />Use this API endpoint to return the definition of a particular contact number type."
      },
      "financial_year_period_view": {
        "type": "object",
        "properties": {
          "financial_year_id": {
            "type": "integer",
            "description": "An Id specific to each financial year.",
            "format": "int64",
            "readOnly": true
          },
          "financial_year_start_date": {
            "type": "string",
            "description": "Date the financial year starts. The returned string includes the time but this will always be 00:00:00.",
            "format": "date-time",
            "readOnly": true
          },
          "financial_year_end_date": {
            "type": "string",
            "description": "Date the financial year ends. The returned string includes the time but this will always be 00:00:00.",
            "format": "date-time",
            "readOnly": true
          },
          "year_relative_to_current_year": {
            "type": "integer",
            "description": "Value to represent the year relative to the current financial year. The current financial year is 0. The first previous year is -1. The first future year is 1.",
            "format": "int32",
            "readOnly": true
          },
          "number_of_periods_in_year": {
            "type": "integer",
            "description": "The number of periods in the financial year.",
            "format": "int32",
            "readOnly": true
          },
          "accounting_period_id": {
            "type": "integer",
            "description": "An Id specific to each accounting period.",
            "format": "int64",
            "readOnly": true
          },
          "period_number": {
            "type": "integer",
            "description": "Value to show the period in relation to the associated year. For example, for a year that starts in January, January will be period 1, February period 2 etc.",
            "format": "int32",
            "readOnly": true
          },
          "period_start_date": {
            "type": "string",
            "description": "Date the period starts. The returned string includes the time but this will always be 00:00:00.",
            "format": "date-time",
            "readOnly": true
          },
          "period_end_date": {
            "type": "string",
            "description": "Date the period finished. The returned string includes the time but this will always be 00:00:00.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "This resource returns the details of all accounting periods for all financial years held for the company. A company always has five future financial years and can have unlimited previous years, depending on how long the company has been operating. The default sort (orderby) field are by 'financial_year_start_date' and 'period_number' ascending."
      },
      "financial_report_row_line_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Financial report row line type Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum description.",
            "readOnly": true
          },
          "value": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum value.",
            "readOnly": true
          }
        },
        "description": "Financial statement layouts are designed to provide a clear representation of your accounts. Each row in a financial layout has an associated 'type'. This list of available types is predefined by the system.</P><P>The API endpoint returns details of financial report row line types that can be used."
      },
      "financial_report_row_layout_position_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Financial report row layout position type Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum description.",
            "readOnly": true
          },
          "value": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum value.",
            "readOnly": true
          }
        },
        "description": "Financial statement layouts are designed to provide a clear representation of your accounts. Each row in a financial layout can have an associated layout position 'type'. This list of available types is predefined by the system.</P><P>The API endpoint returns details of financial report row layout position types that can be used."
      },
      "financial_report_row_layout_debit_or_credit_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Financial report row layout debit or credit type Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum description.",
            "readOnly": true
          },
          "value": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum value.",
            "readOnly": true
          }
        },
        "description": "Financial statement layouts are designed to provide a clear representation of your accounts. Each row in a financial layout can have an associated debit or credit 'type'. This list of available types is predefined by the system.</P><P>The API endpoint returns details of financial report row layout debit or credit types that can be used."
      },
      "financial_report_layout_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Financial report layout type Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum description.",
            "readOnly": true
          },
          "value": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum value.",
            "readOnly": true
          }
        },
        "description": "This list of available types is predefined by the system.</P><P>The API endpoint returns details of financial report layout types that can be used."
      },
      "tax_account_entry_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Enum record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 50,
            "type": "string",
            "description": "Enum description.",
            "readOnly": true
          },
          "value": {
            "maxLength": 50,
            "type": "string",
            "description": "Enum value.",
            "readOnly": true
          }
        },
        "description": "This list of available types is predefined by the system.</P><P>The API endpoint returns details of tax account entry types that can be used."
      },
      "trading_revaluation_allocation_entry_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Enum record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 50,
            "type": "string",
            "description": "Enum description.",
            "readOnly": true
          },
          "value": {
            "maxLength": 50,
            "type": "string",
            "description": "Enum value.",
            "readOnly": true
          }
        },
        "description": "This list of available types is predefined by the system.</P><P>The API endpoint returns details of trading revaluation allocation entry types that can be used."
      },
      "financial_report_layout_view": {
        "type": "object",
        "properties": {
          "financial_report_layout_id": {
            "type": "integer",
            "description": "Financial report layout record Id.",
            "format": "int64",
            "readOnly": true
          },
          "financial_report_layout_account_report_type": {
            "maxLength": 20,
            "type": "string",
            "description": "The type of the financial layout.",
            "readOnly": true
          },
          "financial_report_layout_name": {
            "maxLength": 100,
            "type": "string",
            "description": "financial report layout name.",
            "readOnly": true
          },
          "financial_report_row_id": {
            "type": "integer",
            "description": "An asscoiated financial report row Id.",
            "format": "int64",
            "readOnly": true
          },
          "financial_report_row_line_type": {
            "maxLength": 20,
            "type": "string",
            "description": "The type of the financial layout.",
            "readOnly": true
          },
          "financial_report_row_layout_position_type": {
            "maxLength": 20,
            "type": "string",
            "description": "The type of the financial report row layout position.",
            "readOnly": true
          },
          "financial_report_row_layout_debit_or_credit_type": {
            "maxLength": 20,
            "type": "string",
            "description": "The type of the financial layout.",
            "readOnly": true
          },
          "financial_report_row_report_row": {
            "type": "integer",
            "description": "Value to show the line number of the report row in the layout.",
            "format": "int32",
            "readOnly": true
          },
          "financial_report_row_title": {
            "maxLength": 60,
            "type": "string",
            "description": "The row title.",
            "readOnly": true
          },
          "financial_report_row_subtotal_group": {
            "type": "integer",
            "description": "Value to represent the sub total group.",
            "format": "int16",
            "readOnly": true
          },
          "financial_report_row_group_break_1": {
            "type": "integer",
            "description": "Value to represent the report row group break 1.",
            "format": "int32",
            "readOnly": true
          },
          "financial_report_row_group_break_2": {
            "type": "integer",
            "description": "Value to represent the report row group break 2.",
            "format": "int32",
            "readOnly": true
          },
          "financial_report_row_group_break_3": {
            "type": "integer",
            "description": "Value to represent the report row group break 3.",
            "format": "int32",
            "readOnly": true
          },
          "financial_report_row_group_break_4": {
            "type": "integer",
            "description": "Value to represent the report row group break 4.",
            "format": "int32",
            "readOnly": true
          },
          "financial_report_row_group_break_5": {
            "type": "integer",
            "description": "Value to represent the report row group break 5.",
            "format": "int32",
            "readOnly": true
          },
          "financial_report_row_group_break_6": {
            "type": "integer",
            "description": "Value to represent the report row group break 6.",
            "format": "int32",
            "readOnly": true
          },
          "financial_report_row_group_break_7": {
            "type": "integer",
            "description": "Value to represent the report row group break 7.",
            "format": "int32",
            "readOnly": true
          },
          "financial_report_row_group_break_8": {
            "type": "integer",
            "description": "Value to represent the report row group break 8.",
            "format": "int32",
            "readOnly": true
          },
          "financial_report_row_group_break_9": {
            "type": "integer",
            "description": "Value to represent the report row group break 9.",
            "format": "int32",
            "readOnly": true
          },
          "nominal_account_report_category_id": {
            "type": "integer",
            "description": "An Id specific to each nominal account report category.",
            "format": "int64",
            "readOnly": true
          },
          "nominal_account_report_category_code": {
            "maxLength": 4,
            "type": "string",
            "description": "The nominal account report category code.",
            "readOnly": true
          },
          "nominal_account_report_category_description": {
            "maxLength": 60,
            "type": "string",
            "description": "The nominal account report category description.",
            "readOnly": true
          }
        },
        "description": "Financial statement layouts are designed to provide a clear representation of your accounts. This resource returns the details of all financial statement layouts. The default sort (orderby) field are by 'financial_report_layout_id' and 'financial_report_row_report_row' ascending."
      },
      "trader_location_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Enum record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum description."
          },
          "value": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum value."
          }
        },
        "description": "All customer/supplier addresses have an associated 'type' which defines the business function that the address provides (e.g. Main address, invoice address, etc).<br /><br />Use this API endpoint to return the details of the Trader Location Types that can be used."
      },
      "trader_transaction_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Enum record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 30,
            "type": "string",
            "description": "Enum description."
          },
          "value": {
            "maxLength": 30,
            "type": "string",
            "description": "Enum value."
          }
        },
        "description": "Every transaction within Sage 200 has an associated type which defines what function that transaction performs (e.g. Invoice, Purchase Receipt, Credit Note, etc). These transaction types are pre-defined by the system, cannot be changed, and are common across all instances of Sage 200.<br /><br />Use this API endpoint to return the details of the Trader Transaction Types that can be used."
      },
      "trader_contact_role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique Id of the Sage 200 Trader Contact Role.",
            "format": "int64",
            "readOnly": true
          },
          "role": {
            "maxLength": 50,
            "type": "string",
            "description": "The role name.",
            "readOnly": true
          },
          "is_default_role": {
            "type": "boolean",
            "description": "Whether or not this is a default role.",
            "readOnly": true
          },
          "is_mandatory": {
            "type": "boolean",
            "description": "Whether or not this is a mandatory role.",
            "readOnly": true
          },
          "use_for_customer_accounts": {
            "type": "boolean",
            "description": "Whether or not this is used for customer accounts.",
            "readOnly": true
          },
          "use_for_supplier_accounts": {
            "type": "boolean",
            "description": "Whether or not this is used for supplier accounts.",
            "readOnly": true
          },
          "use_with_documents": {
            "type": "boolean",
            "description": "Whether or not this is used with documents.",
            "readOnly": true
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Customer and Supplier contacts can have one or more roles defined.<br /><br />Use this API endpoint to read from the Trader Contact Roles."
      },
      "trader_payment_terms": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Trader payment terms record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 50,
            "type": "string",
            "description": "Description of the trader payment terms.",
            "readOnly": true
          },
          "value": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum value.",
            "readOnly": true
          }
        },
        "description": "Gets the list of Customer and Supplier trading terms which can be used. For example, \"Paid from document date\", or \"Paid from end of month\"."
      },
      "credit_bureau": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Credit bureau Id.",
            "format": "int64",
            "readOnly": true
          },
          "name": {
            "maxLength": 50,
            "type": "string",
            "description": "The credit bureau name."
          },
          "website": {
            "maxLength": 255,
            "type": "string",
            "description": "The credit bureau website."
          },
          "checking_url": {
            "maxLength": 255,
            "type": "string",
            "description": "The credit bureau checking URL."
          },
          "is_default": {
            "type": "boolean",
            "description": "Indicates whether this is the default credit bureau.",
            "default": false
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Credit bureaus are third party companies used to assess credit risk."
      },
      "credit_position": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Credit position Id.",
            "format": "int64",
            "readOnly": true
          },
          "name": {
            "maxLength": 50,
            "type": "string",
            "description": "The credit position name."
          },
          "is_default": {
            "type": "boolean",
            "description": "Indicates whether this is the default credit position.",
            "default": false
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Use credit positions for customer and supplier credit statuses."
      },
      "aged_balances_ageing_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Enum record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 50,
            "type": "string",
            "description": "Enum description.",
            "readOnly": true
          },
          "value": {
            "maxLength": 50,
            "type": "string",
            "description": "Enum value.",
            "readOnly": true
          }
        },
        "description": "The ageing type for aged transactions. Ageing type can be 'TransactionDate', 'DueDate', or 'CalendarMonth'.<P>The API endpoint returns details of the ageing types that can be used.</P>"
      }
    }
  },
  "x-original-swagger-version": "2.0"
}