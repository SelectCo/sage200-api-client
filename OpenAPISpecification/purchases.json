{
  "openapi": "3.0.1",
  "info": {
    "title": "Sage 200 v1 Extra Purchases",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.columbus.sage.com/uk/sage200extra/accounts/v1/"
    }
  ],
  "tags": [
    {
      "name": "Authorisation Types",
      "description": ""
    },
    {
      "name": "Factor Houses",
      "description": ""
    },
    {
      "name": "Lookup Suppliers",
      "description": ""
    },
    {
      "name": "Payment Groups",
      "description": ""
    },
    {
      "name": "Payment Types",
      "description": ""
    },
    {
      "name": "Purchase Aged Creditor Detailed Views",
      "description": ""
    },
    {
      "name": "Purchase Aged Creditor Summary Views",
      "description": ""
    },
    {
      "name": "Purchase Authorisations",
      "description": ""
    },
    {
      "name": "Purchase Credit Notes",
      "description": ""
    },
    {
      "name": "Purchase Invoices",
      "description": ""
    },
    {
      "name": "Purchase Ledger Settings",
      "description": ""
    },
    {
      "name": "Purchase Payments",
      "description": ""
    },
    {
      "name": "Purchase Posted Transaction Memos",
      "description": ""
    },
    {
      "name": "Purchase Posted Transactions",
      "description": ""
    },
    {
      "name": "Purchase Receipts",
      "description": ""
    },
    {
      "name": "Purchase Trading Periods",
      "description": ""
    },
    {
      "name": "Purchase Transaction Enquiry Views",
      "description": ""
    },
    {
      "name": "Purchase Transaction Views",
      "description": ""
    },
    {
      "name": "Sage Payments Supplier Status Types",
      "description": ""
    },
    {
      "name": "Supplier Contact Roles",
      "description": ""
    },
    {
      "name": "Supplier Contacts",
      "description": ""
    },
    {
      "name": "Supplier Emails",
      "description": ""
    },
    {
      "name": "Supplier Faxes",
      "description": ""
    },
    {
      "name": "Supplier Memos",
      "description": ""
    },
    {
      "name": "Supplier Mobiles",
      "description": ""
    },
    {
      "name": "Supplier Period Value Views",
      "description": ""
    },
    {
      "name": "Supplier Telephones",
      "description": ""
    },
    {
      "name": "Supplier Views",
      "description": ""
    },
    {
      "name": "Supplier Websites",
      "description": ""
    },
    {
      "name": "Supplier Year Value Views",
      "description": ""
    },
    {
      "name": "Suppliers",
      "description": ""
    }
  ],
  "paths": {
    "/sage_payments_supplier_status_types": {
      "get": {
        "tags": [
          "Sage Payments Supplier Status Types"
        ],
        "summary": "Sage Payments Supplier Status Types",
        "description": "Sage Payments Supplier Status Types indicate the status of the supplier with Supplier Payments. The status types are 'Not submitted to Supplier Payments', 'Queried', 'Rejected', 'Requires Approval', 'Approved' and 'Requires Submission'.<P>The API endpoint returns details of the status of the supplier with Supplier Payments.</P>",
        "operationId": "GetSagePaymentsSupplierStatusTypes",
        "responses": {
          "200": {
            "description": "The details of the Sage Payments Supplier Status Types have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sage_payments_supplier_status_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Sage Payments Supplier Status Types",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/purchase_trading_periods": {
      "get": {
        "tags": [
          "Purchase Trading Periods"
        ],
        "summary": "Purchase Trading Periods",
        "description": "This resource returns the details of all purchase trading periods for all financial years held for the company. A company can have the trading periods set to be the same as the accounting periods or as different periods. (Sage 200 Professional only, Sage 200 Standard defaults to financial year periods).",
        "operationId": "GetPurchaseTradingPeriods",
        "responses": {
          "200": {
            "description": "The details of the trading periods have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purchase_trading_period"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Purchase trading periods",
      "x-sage-professional-only": true,
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        },
        {
          "date": "14/08/2023",
          "title": "Removed operations",
          "description": "The PUT and POST operations for the endpoint that were added in the last update have now been removed. The previous endpoints should not be used, as they were included in error and do not perform the required validation. New PUT and POST operations will be included in a future release."
        }
      ]
    },
    "/purchase_trading_periods/{Id}": {
      "get": {
        "tags": [
          "Purchase Trading Periods"
        ],
        "summary": "Purchase Trading Period",
        "description": "This resource returns the details of all purchase trading periods for all financial years held for the company. A company can have the trading periods set to be the same as the accounting periods or as different periods. (Sage 200 Professional only, Sage 200 Standard defaults to financial year periods).",
        "operationId": "GetPurchaseTradingPeriod",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the purchase trading period.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The details of the trading periods have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/purchase_trading_period"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Purchase trading period",
      "x-sage-professional-only": true
    },
    "/purchase_invoices": {
      "post": {
        "tags": [
          "Purchase Invoices"
        ],
        "summary": "Purchase Invoices",
        "description": "Invoices are used to record a purchase against a particular supplier's account.<br /><br />Posting a purchase invoice does not actually create a 'purchase invoice' entity, but a Posted Transaction of type 'TradingAccountEntryTypeInvoice', therefore it is not possible to 'get' a purchase invoice using the same API endpoint after it has been posted. Posting a purchase invoice returns a URN (Unique Reference Number) that can be used to find the corresponding posted transaction.",
        "operationId": "PostPurchaseInvoice",
        "requestBody": {
          "description": "Purchase invoice to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/purchase_invoice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The purchase invoice was created. Response body will include the urn of the transactions created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/urn"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Purchase invoice"
      },
      "x-sage-pathtitle": "Purchase invoices"
    },
    "/purchase_invoices_new": {
      "post": {
        "tags": [
          "Purchase Invoices"
        ],
        "summary": "Purchase Invoices New",
        "description": "Returns a purchase invoice with all the default values for a supplier. The API endpoint does not persist the purchase invoice.",
        "operationId": "PostPurchaseInvoicesNew",
        "requestBody": {
          "description": "A supplier request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/purchase_invoice_new_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The default invoice information was returned and included in the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/purchase_invoice"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "PurchaseInvoiceNew"
      },
      "x-sage-pathtitle": "Purchase Invoices New",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/purchase_credit_notes": {
      "post": {
        "tags": [
          "Purchase Credit Notes"
        ],
        "summary": "Purchase Credit Notes",
        "description": "Use this resource to enter credit notes directly onto a particular supplier's account. Credit notes are typically used when receiving refunds, returns, etc. and reduce the turnover for the relevant supplier's account.<br /><br />Posting a credit note does not actually create a 'credit note' entity, but a Posted Transaction of type 'TradingAccountEntryTypeCreditNote', therefore it is not possible to 'get' a credit note using the same API endpoint after it has been posted. Posting a purchase credit note returns a URN (Unique Reference Number) that can be used to find the corresponding posted transaction.",
        "operationId": "PostPurchaseCreditNote",
        "requestBody": {
          "description": "Purchase credit note to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/purchase_credit_note"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The purchase credit note was created. Response body will include the urn of the transactions created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/urn"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Purchase credit note"
      },
      "x-sage-pathtitle": "Purchase credit notes"
    },
    "/purchase_credit_notes_new": {
      "post": {
        "tags": [
          "Purchase Credit Notes"
        ],
        "summary": "Purchase Credit Notes New",
        "description": "Returns a purchase credit note with all the default values for a supplier. The API endpoint does not persist the purchase credit note.",
        "operationId": "PostPurchaseCreditNotesNew",
        "requestBody": {
          "description": "A supplier request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/purchase_credit_note_new_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The default credit note information was returned and included in the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/purchase_credit_note"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "PurchaseCreditNoteNew"
      },
      "x-sage-pathtitle": "Purchase Credit Notes New",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/purchase_posted_transactions": {
      "get": {
        "tags": [
          "Purchase Posted Transactions"
        ],
        "summary": "Purchase Posted Transactions",
        "description": "Purchase posted transactions are created when transactions, such as purchases made, refunds or credit notes, are posted against the Purchase Ledger.<br /><br />It is not possible to use this API resource to create posted transactions. To post a transaction, the necessary API resource must be invoked.<br /><br />It is possible to use this API resource to update a transaction's queried status.",
        "operationId": "GetPurchasePostedTransactions",
        "responses": {
          "200": {
            "description": "Get a collection of posted purchase transactions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purchase_posted_transaction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Purchase posted transactions",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "Extended operation",
          "description": "This endpoint was enhanced with a PUT operation."
        },
        {
          "date": "16/09/2020",
          "title": "Enhanced endpoint field",
          "description": "This operation now includes the field 'date_time_created'."
        }
      ]
    },
    "/purchase_posted_transactions/{Id}": {
      "get": {
        "tags": [
          "Purchase Posted Transactions"
        ],
        "summary": "Purchase Posted Transaction",
        "description": "Purchase posted transactions are created when transactions, such as purchases made, refunds or credit notes, are posted against the Purchase Ledger.<br /><br />It is not possible to use this API resource to create posted transactions. To post a transaction, the necessary API resource must be invoked.<br /><br />It is possible to use this API resource to update a transaction's queried status.",
        "operationId": "GetPurchasePostedTransaction",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the transaction.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a single posted purchase transaction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/purchase_posted_transaction"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Purchase Posted Transactions"
        ],
        "summary": "Purchase Posted Transaction",
        "description": "Purchase posted transactions are created when transactions, such as purchases made, refunds or credit notes, are posted against the Purchase Ledger.<br /><br />It is not possible to use this API resource to create posted transactions. To post a transaction, the necessary API resource must be invoked.<br /><br />It is possible to use this API resource to update a transaction's queried status.",
        "operationId": "PutPurchasePostedTransaction",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "The unique Id of the purchase posted transaction.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Purchase posted transaction to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/purchase_posted_transaction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The purchase posted transaction was updated. Response body will include the purchase posted transaction details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/purchase_posted_transaction"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "PurchasePostedTransaction"
      },
      "x-sage-pathtitle": "Purchase posted transaction"
    },
    "/purchase_transaction_enquiry_views": {
      "get": {
        "tags": [
          "Purchase Transaction Enquiry Views"
        ],
        "summary": "Purchase Transaction Enquiry Views",
        "description": "Purchase transaction equiry views represent transactions posted against the Purchase Ledger, such as purchases made, and any refunds or credit notes received.",
        "operationId": "GetPurchaseTransactionEnquiryViews",
        "responses": {
          "200": {
            "description": "Get a collection of purchase transaction enquiry views.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purchase_transaction_enquiry_view"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Purchase transaction enquiry views",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/purchase_transaction_enquiry_views/{Id}": {
      "get": {
        "tags": [
          "Purchase Transaction Enquiry Views"
        ],
        "summary": "Purchase Transaction Enquiry View",
        "description": "Purchase transaction equiry views represent transactions posted against the Purchase Ledger, such as purchases made, and any refunds or credit notes received.",
        "operationId": "GetPurchaseTransactionEnquiryView",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the transaction.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a single purchase transaction enquiry view.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/purchase_transaction_enquiry_view"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Purchase transaction enquiry view"
    },
    "/suppliers/{supplierId}/purchase_transaction_enquiry_views": {
      "get": {
        "tags": [
          "Purchase Transaction Enquiry Views"
        ],
        "summary": "Purchase Transaction Enquiry Views Transactions For Supplier",
        "description": "Purchase transaction equiry views represent transactions posted against the Purchase Ledger, such as purchases made, and any refunds or credit notes received.",
        "operationId": "GetPurchaseTransactionsEnquiryViewsForSupplier",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return transactions for a single supplier.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purchase_transaction_enquiry_view"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Purchase transaction enquiry views transactions for Supplier"
    },
    "/purchase_posted_transaction_memos": {
      "get": {
        "tags": [
          "Purchase Posted Transaction Memos"
        ],
        "summary": "Purchase Posted Transaction Memos",
        "description": "Memos are comments that are made about a purchase posted transaction.<br/><br/>Multiple memos can be added to each purchase posted transaction. The user that created the memo, the date it was created and last updated date and time are also recorded.<br/><br/>A user can also specify if a memo is currently 'Active' or 'Inactive'. This allows a user to keep a record of previous memos without deleting them.",
        "operationId": "GetPurchasePostedTransactionMemos",
        "responses": {
          "200": {
            "description": "The list of purchase posted transaction memos has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purchase_posted_transaction_memo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Purchase Posted Transaction Memos"
        ],
        "summary": "Purchase Posted Transaction Memos",
        "description": "Memos are comments that are made about a purchase posted transaction.<br/><br/>Multiple memos can be added to each purchase posted transaction. The user that created the memo, the date it was created and last updated date and time are also recorded.<br/><br/>A user can also specify if a memo is currently 'Active' or 'Inactive'. This allows a user to keep a record of previous memos without deleting them.",
        "operationId": "PostPurchasePostedTransactionMemo",
        "requestBody": {
          "description": "Purchase posted transaction memo to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/purchase_posted_transaction_memo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The purchase posted transaction memo was created. Response body will include the purchase posted transaction memo details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/purchase_posted_transaction_memo"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "PurchasePostedTransactionMemo"
      },
      "x-sage-pathtitle": "Purchase posted transaction memos",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/purchase_posted_transaction_memos/{Id}": {
      "get": {
        "tags": [
          "Purchase Posted Transaction Memos"
        ],
        "summary": "Purchase Posted Transaction Memo",
        "description": "Memos are comments that are made about a purchase posted transaction.<br/><br/>Multiple memos can be added to each purchase posted transaction. The user that created the memo, the date it was created and last updated date and time are also recorded.<br/><br/>A user can also specify if a memo is currently 'Active' or 'Inactive'. This allows a user to keep a record of previous memos without deleting them.",
        "operationId": "GetPurchasePostedTransactionMemo",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the purchase posted transaction memo.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of purchase posted transaction memo successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/purchase_posted_transaction_memo"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Purchase Posted Transaction Memos"
        ],
        "summary": "Purchase Posted Transaction Memo",
        "description": "Memos are comments that are made about a purchase posted transaction.<br/><br/>Multiple memos can be added to each purchase posted transaction. The user that created the memo, the date it was created and last updated date and time are also recorded.<br/><br/>A user can also specify if a memo is currently 'Active' or 'Inactive'. This allows a user to keep a record of previous memos without deleting them.",
        "operationId": "PutPurchasePostedTransactionMemo",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the purchase posted transaction memo.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Purchase posted transaction memo to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/purchase_posted_transaction_memo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The purchase posted transaction memo was updated. Response body will include the purchase posted transaction memo details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/purchase_posted_transaction_memo"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "PurchasePostedTransactionMemo"
      },
      "delete": {
        "tags": [
          "Purchase Posted Transaction Memos"
        ],
        "summary": "Purchase Posted Transaction Memo",
        "description": "Memos are comments that are made about a purchase posted transaction.<br/><br/>Multiple memos can be added to each purchase posted transaction. The user that created the memo, the date it was created and last updated date and time are also recorded.<br/><br/>A user can also specify if a memo is currently 'Active' or 'Inactive'. This allows a user to keep a record of previous memos without deleting them.",
        "operationId": "DeletePurchasePostedTransactionMemo",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the purchase posted transaction memo.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase posted transaction memo was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Purchase posted transaction memo"
    },
    "/purchase_posted_transactions/{transactionId}/purchase_posted_transaction_memos": {
      "get": {
        "tags": [
          "Purchase Posted Transaction Memos"
        ],
        "summary": "Purchase Posted Transaction Memos For Purchase Posted Transaction",
        "description": "Memos are comments that are made about a purchase posted transaction.<br/><br/>Multiple memos can be added to each purchase posted transaction. The user that created the memo, the date it was created and last updated date and time are also recorded.<br/><br/>A user can also specify if a memo is currently 'Active' or 'Inactive'. This allows a user to keep a record of previous memos without deleting them.",
        "operationId": "GetMemosForPurchasePostedTransaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "Unique Id of the purchase posted transaction.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of memos for a purchase posted transaction has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purchase_posted_transaction_memo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Purchase posted transaction memos for purchase posted transaction"
    },
    "/purchase_transaction_views": {
      "get": {
        "tags": [
          "Purchase Transaction Views"
        ],
        "summary": "Purchase Transaction Views",
        "description": "When making larger API requests for transaction information from the Purchase ledger, the Purchase Transaction Views resource can be a faster alternative to the 'Purchase Posted Transactions' resource.<br /><br />The Purchase Transaction Views resource also returns a wider breadth of information than the Purchase Posted Transactions. By using the Purchase Transaction Views resource, the quantity of API requests can be reduced, when returning the same information from multiple API resources. The default sort (orderby) field is by 'posted_supplier_transaction_id' ascending.",
        "operationId": "GetPurchaseTransactionViews",
        "responses": {
          "200": {
            "description": "The details of the purchase transaction views have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purchase_transaction_view"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Purchase transaction views",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/purchase_payments": {
      "post": {
        "tags": [
          "Purchase Payments"
        ],
        "summary": "Purchase Payments",
        "description": "Payments are used to record a supplier payment against a particular supplier's account.<br /><br />Posting a purchase payment does not actually create a 'purchase payment' entity, but a Posted Transaction of type 'TradingAccountEntryTypePurchasePaymentSalesReceipt', therefore it is not possible to 'get' a purchase payment using the same API endpoint after it has been posted. Posting a purchase payment returns a URN (Unique Reference Number) that can be used to find the corresponding posted transaction.<br /><br />Note: Before posting purchase payments via the API, at least one bank account must exist within Sage 200.",
        "operationId": "PostPurchasePayment",
        "requestBody": {
          "description": "Purchase payment to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/purchase_payment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The purchase payment was created. Response body will include the urn of the transactions created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/urn"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Purchase payment"
      },
      "x-sage-pathtitle": "Purchase Payments",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/purchase_receipts": {
      "post": {
        "tags": [
          "Purchase Receipts"
        ],
        "summary": "Purchase Receipts",
        "description": "Receipts are used to record a supplier receipt against a particular supplier's account.<br /><br />Posting a purchase receipt does not actually create a 'purchase receipt' entity, but a Posted Transaction of type 'TradingAccountEntryTypePurchaseReceiptSalesPayment', therefore it is not possible to 'get' a purchase receipt using the same API endpoint after it has been posted. Posting a purchase receipt returns a URN (Unique Reference Number) that can be used to find the corresponding posted transaction.<br /><br />Note: Before posting purchase receipts via the API, at least one bank account must exist within Sage 200.",
        "operationId": "PostPurchaseReceipt",
        "requestBody": {
          "description": "Purchase receipt to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/purchase_receipt"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The purchase receipt was created. Response body will include the urn of the transactions created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/urn"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Purchase receipt"
      },
      "x-sage-pathtitle": "Purchase Receipts",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/purchase_authorisations/{Id}": {
      "get": {
        "tags": [
          "Purchase Authorisations"
        ],
        "summary": "Purchase Authorisation",
        "description": "Invoices and Credit Notes which are above a threshold value are unauthorised. The value of unauthorised transactions is posted to the default nominal account for Unauthorised Purchases. Use authorisation to reverse the posting from the Unauthorised Purchases nominal account and post to the intended account.",
        "operationId": "GetPurchaseAuthorisation",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the transaction.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a single purchase transaction for authorisation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/purchase_authorisation"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Purchase Authorisations"
        ],
        "summary": "Purchase Authorisation",
        "description": "Invoices and Credit Notes which are above a threshold value are unauthorised. The value of unauthorised transactions is posted to the default nominal account for Unauthorised Purchases. Use authorisation to reverse the posting from the Unauthorised Purchases nominal account and post to the intended account.",
        "operationId": "PutPurchaseAuthorisation",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the transaction.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Purchase transaction to authorise.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/purchase_authorisation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The purchase transaction was authorised. Response body will include the authorised purchase transaction details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/purchase_authorisation"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "PurchaseAuthorisation"
      },
      "x-sage-pathtitle": "Purchase Authorisation",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/authorisation_types": {
      "get": {
        "tags": [
          "Authorisation Types"
        ],
        "summary": "Authorisation Types",
        "description": "The authorisation type for a purchase transaction.",
        "operationId": "GetAuthorisationTypes",
        "responses": {
          "200": {
            "description": "The list of authorisation types has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/authorisation_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Authorisation Types",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/purchase_aged_creditor_detailed_views": {
      "get": {
        "tags": [
          "Purchase Aged Creditor Detailed Views"
        ],
        "summary": "Purchase Aged Creditor Detailed Views",
        "description": "Gets Purchase aged creditor detailed views. Specifying a query parameter of '$ageingdatetype' will produce values for the specified ageing type. Acceptable values are 'transactiondate', 'duedate', and 'calendarmonth', to calculate aged credit by Transaction Date, Due Date, or by calendar months.",
        "operationId": "GetPurchaseAgedCreditorDetailedViews",
        "responses": {
          "200": {
            "description": "The purchase aged creditor detailed views have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purchase_aged_creditor_view"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Purchase aged creditor detailed views",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/purchase_aged_creditor_summary_views": {
      "get": {
        "tags": [
          "Purchase Aged Creditor Summary Views"
        ],
        "summary": "Purchase Aged Creditor Summary Views",
        "description": "Gets Purchase aged creditor summary views. Specifying a query parameter of '$ageingdatetype' will produce values for the specified ageing type. Acceptable values are 'transactiondate', 'duedate', and 'calendarmonth', to calculate aged credit by Transaction Date, Due Date, or by calendar months.",
        "operationId": "GetPurchaseAgedCreditorSummaryViews",
        "responses": {
          "200": {
            "description": "The purchase aged creditor summary views have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purchase_aged_creditor_view"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Purchase aged creditor summary views",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/suppliers": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Suppliers",
        "description": "Suppliers are one of the most important entities within Sage 200 as they are associated with many important resources within the application and underpin most of the main features (e.g. purchase orders, purchase receipts, etc).",
        "operationId": "GetSuppliers",
        "responses": {
          "200": {
            "description": "The list of suppliers has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Suppliers",
        "description": "Suppliers are one of the most important entities within Sage 200 as they are associated with many important resources within the application and underpin most of the main features (e.g. purchase orders, purchase receipts, etc).",
        "operationId": "PostSupplier",
        "requestBody": {
          "description": "Supplier to add to Sage 200 Purchase Ledger.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier was created. Response body will include the supplier details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier"
      },
      "x-sage-pathtitle": "Suppliers",
      "x-sage-changelog": [
        {
          "date": "21/01/2017",
          "title": "Extended operation",
          "description": "This operation now includes the field 'account_status_type', which represents the status of the supplier account. This can either be 'Active' or 'Hidden'."
        },
        {
          "date": "09/05/2019",
          "title": "Extended operation",
          "description": "This operation now supports analysis codes 6-20 in professional."
        },
        {
          "date": "16/09/2020",
          "title": "Enhanced endpoint fields",
          "description": "This operation now includes the fields 'status_reason', 'account_type', 'early_settlement_discount_percent', 'early_settlement_discount_days', 'payment_terms_days', 'payment_terms_basis', 'payment_group_id', 'factor_house_id', 'credit_memo_note', 'credit_bureau_id', 'credit_position_id', 'trading_terms', 'credit_reference', 'account_opened', 'last_credit_review', 'next_credit_review', 'application_date', 'date_received', 'terms_agreed', 'order_priority', 'months_to_keep_transactions', 'default_nominal_account_number', 'default_nominal_cost_centre', 'default_nominal_department', 'credit_bureau', 'credit_position', 'factor_house', 'payment_group', 'status' and 'date_time_created'."
        },
        {
          "date": "15/03/2021",
          "title": "Enhanced endpoint field",
          "description": "This operation now includes the field 'memos'."
        },
        {
          "date": "26/07/2021",
          "title": "Enhanced endpoint fields",
          "description": "This operation now includes the fields 'is_supplier_payments_enabled', 'value_of_current_orders_in_pop', 'default_nominal_code_reference', 'default_nominal_code_cost_centre' and 'default_nominal_code_department'.<br />This operation has had the fields 'default_nominal_account_number' and 'default_nominal_cost_centre' removed."
        },
        {
          "date": "20/02/2023",
          "title": "Enhanced endpoint field",
          "description": "This operation now includes the field 'alerts'."
        },
        {
          "date": "14/08/2023",
          "title": "Enhanced endpoint fields",
          "description": "This operation now includes the fields 'default_nominal_code_id', 'spare_text_1', 'spare_text_2', 'spare_text_3', 'spare_text_4', 'spare_text_5', 'spare_text_6', 'spare_text_7', 'spare_text_8', 'spare_text_9', 'spare_text_10', 'spare_number_1', 'spare_number_2', 'spare_number_3', 'spare_number_4', 'spare_number_5', 'spare_number_6', 'spare_number_7', 'spare_number_8', 'spare_number_9', 'spare_number_10', 'spare_date_1', 'spare_date_2', 'spare_date_3', 'spare_date_4', 'spare_date_5', 'spare_bool_1', 'spare_bool_2', 'spare_bool_3', 'spare_bool_4' and 'spare_bool_5'."
        }
      ]
    },
    "/suppliers/{Id}": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Supplier",
        "description": "Suppliers are one of the most important entities within Sage 200 as they are associated with many important resources within the application and underpin most of the main features (e.g. purchase orders, purchase receipts, etc).",
        "operationId": "GetSupplier",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Supplier",
        "description": "Suppliers are one of the most important entities within Sage 200 as they are associated with many important resources within the application and underpin most of the main features (e.g. purchase orders, purchase receipts, etc.).",
        "operationId": "PutSupplier",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier to update in Sage 200 Purchase Ledger.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier was updated. Response body will include the supplier details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier"
      },
      "delete": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Supplier",
        "description": "Suppliers are one of the most important entities within Sage 200 as they are associated with many important resources within the application and underpin most of the main features (e.g. purchase orders, purchase receipts, etc.).",
        "operationId": "DeleteSupplier",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier"
    },
    "/suppliers_new": {
      "post": {
        "tags": [
          "Suppliers"
        ],
        "summary": "New Supplier With Defaults",
        "description": "Returns a supplier with all the defaults that have been specified within the application. The API endpoint does not persist the supplier.",
        "operationId": "PostSuppliersNew",
        "requestBody": {
          "description": "An empty request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/suppliers_new_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier with defaults was successfully returned. Response body will include the supplier details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Empty"
      },
      "x-sage-pathtitle": "New supplier with defaults",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        },
        {
          "date": "26/07/2021",
          "title": "Enhanced endpoint fields",
          "description": "This operation now includes the fields 'value_of_current_orders_in_pop', 'default_nominal_code_reference', 'default_nominal_code_cost_centre' and 'default_nominal_code_department'.<br />This operation has had the fields 'default_nominal_account_number' and 'default_nominal_cost_centre' removed."
        },
        {
          "date": "20/02/2023",
          "title": "Enhanced endpoint field",
          "description": "This operation now includes the field 'alerts'."
        },
        {
          "date": "14/08/2023",
          "title": "Enhanced endpoint fields",
          "description": "This operation now includes the fields 'default_nominal_code_id', 'spare_text_1', 'spare_text_2', 'spare_text_3', 'spare_text_4', 'spare_text_5', 'spare_text_6', 'spare_text_7', 'spare_text_8', 'spare_text_9', 'spare_text_10', 'spare_number_1', 'spare_number_2', 'spare_number_3', 'spare_number_4', 'spare_number_5', 'spare_number_6', 'spare_number_7', 'spare_number_8', 'spare_number_9', 'spare_number_10', 'spare_date_1', 'spare_date_2', 'spare_date_3', 'spare_date_4', 'spare_date_5', 'spare_bool_1', 'spare_bool_2', 'spare_bool_3', 'spare_bool_4' and 'spare_bool_5'."
        }
      ]
    },
    "/suppliers/{supplierId}/purchase_posted_transactions": {
      "get": {
        "tags": [
          "Purchase Posted Transactions"
        ],
        "summary": "Purchase Posted Transactions For Supplier",
        "description": "Purchase posted transactions are created when transactions, such as purchases made, refunds or credit notes, are posted against the Purchase Ledger.<br /><br />It is not possible to use this API resource to create posted transactions. To post a transaction, the necessary API resource must be invoked.",
        "operationId": "GetPurchasePostedTransactionsForSupplier",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return transactions for a single supplier.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purchase_posted_transaction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Purchase posted transactions for supplier"
    },
    "/supplier_contacts": {
      "get": {
        "tags": [
          "Supplier Contacts"
        ],
        "summary": "Supplier Contacts",
        "description": "Information can be stored for multiple contacts against each supplier account. Each contact can have its own details such as telephone numbers, fax numbers, email address and website.",
        "operationId": "GetSupplierContact",
        "responses": {
          "200": {
            "description": "The list of supplier contacts has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_contact"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier contacts",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "Enhanced endpoint fields",
          "description": "This operation now includes the fields 'roles' and 'date_time_created'."
        }
      ]
    },
    "/supplier_contacts/{Id}": {
      "get": {
        "tags": [
          "Supplier Contacts"
        ],
        "summary": "Supplier Contact",
        "description": "Information can be stored for multiple contacts against each supplier account. Each contact can have its own details such as telephone numbers, fax numbers, email address and website.",
        "operationId": "GetSupplierContacts",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of a supplier contact have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_contact"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Contacts"
        ],
        "summary": "Supplier Contact",
        "description": "Information can be stored for multiple contacts against each supplier account. Each contact can have its own details such as telephone numbers, fax numbers, email address and website.",
        "operationId": "PutSupplierContact",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier contact to update in Sage 200 Sales Ledger.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_contact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier contact was updated. Response body will include the supplier details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_contact"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "supplier_contact"
      },
      "delete": {
        "tags": [
          "Supplier Contacts"
        ],
        "summary": "Supplier Contact",
        "description": "Information can be stored for multiple contacts against each supplier account. Each contact can have its own details such as telephone numbers, fax numbers, email address and website.",
        "operationId": "DeleteSupplierContact",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier contact was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier contact"
    },
    "/suppliers/{supplierId}/supplier_contacts": {
      "get": {
        "tags": [
          "Supplier Contacts"
        ],
        "summary": "Supplier Contacts For Supplier",
        "description": "Information can be stored for multiple contacts against each supplier account.  Each contact can have its own details such as telephone numbers, fax numbers, email address and website.",
        "operationId": "GetSupplierContactsForSupplier",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of supplier contacts has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_contact"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Supplier Contacts"
        ],
        "summary": "Supplier Contacts For Supplier",
        "description": "Information can be stored for multiple contacts against each supplier account. Each contact can have its own details such as telephone numbers, fax numbers, email address and website.",
        "operationId": "PostSupplierContactForSupplier",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier contact to add to the supplier account.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_contact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier contact was created. Response body will include the supplier contact details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_contact"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "supplier_contact"
      },
      "x-sage-pathtitle": "Supplier contacts for supplier"
    },
    "/suppliers/{supplierId}/supplier_contacts/{Id}": {
      "get": {
        "tags": [
          "Supplier Contacts"
        ],
        "summary": "Supplier Contact For Supplier",
        "description": "Information can be stored for multiple contacts against each supplier account.  Each contact can have its own details such as telephone numbers, fax numbers, email address and website.",
        "operationId": "GetSupplierContactForSupplier",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier contact has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_contact"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Contacts"
        ],
        "summary": "Supplier Contact For Supplier",
        "description": "Information can be stored for multiple contacts against each supplier account. Each contact can have its own details such as telephone numbers, fax numbers, email address and website.",
        "operationId": "PutSupplierContactForSupplier",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier contact to update in Sage 200 Sales Ledger.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_contact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier contact was updated. Response body will include the supplier details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_contact"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "supplier_contact"
      },
      "delete": {
        "tags": [
          "Supplier Contacts"
        ],
        "summary": "Supplier Contact For Supplier",
        "description": "Information can be stored for multiple contacts against each supplier account. Each contact can have its own details such as telephone numbers, fax numbers, email address and website.",
        "operationId": "DeleteSupplierContactForSupplier",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier contact was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier contact for supplier"
    },
    "/supplier_emails": {
      "get": {
        "tags": [
          "Supplier Emails"
        ],
        "summary": "Supplier Emails",
        "description": "Contact specific email addresses can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierEmails",
        "responses": {
          "200": {
            "description": "The collection of supplier emails has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_email"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier emails",
      "x-sage-changelog": [
        {
          "date": "14/12/2020",
          "title": "Enhanced endpoint field",
          "description": "This operation now includes the field 'date_time_created'."
        }
      ]
    },
    "/supplier_contacts/{supplierContactId}/supplier_emails": {
      "get": {
        "tags": [
          "Supplier Emails"
        ],
        "summary": "Supplier Emails By Contact",
        "description": "Contact specific email addresses can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierEmailsForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of supplier emails has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_email"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Supplier Emails"
        ],
        "summary": "Supplier Emails By Contact",
        "description": "Contact specific email addresses can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PostSupplierEmailForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier email to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_email"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier email was created. Response body will include the supplier email details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_email"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier email"
      },
      "x-sage-pathtitle": "Supplier emails by contact"
    },
    "/suppliers/{supplierId}/supplier_contacts/{supplierContactId}/supplier_emails": {
      "get": {
        "tags": [
          "Supplier Emails"
        ],
        "summary": "Supplier Emails For Supplier And Supplier Contact",
        "description": "Contact specific email addresses can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierEmailsForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of supplier emails has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_email"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Supplier Emails"
        ],
        "summary": "Supplier Emails For Supplier And Supplier Contact",
        "description": "Contact specific email addresses can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PostSupplierEmailForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier email to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_email"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier email was created. Response body will include the supplier email details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_email"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier email"
      },
      "x-sage-pathtitle": "Supplier emails for supplier and supplier contact"
    },
    "/supplier_emails/{Id}": {
      "get": {
        "tags": [
          "Supplier Emails"
        ],
        "summary": "Supplier Email",
        "description": "Contact specific email addresses can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierEmail",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier email.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier email successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_email"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Emails"
        ],
        "summary": "Supplier Email",
        "description": "Contact specific email addresses can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PutSupplierEmail",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier email.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier email to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_email"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier email was updated. Response body will include the supplier email details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_email"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier email"
      },
      "delete": {
        "tags": [
          "Supplier Emails"
        ],
        "summary": "Supplier Email",
        "description": "Contact specific email addresses can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "DeleteSupplierEmail",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier email.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier email was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier email"
    },
    "/supplier_contacts/{supplierContactId}/supplier_emails/{Id}": {
      "get": {
        "tags": [
          "Supplier Emails"
        ],
        "summary": "Supplier Email For Supplier Contact",
        "description": "Contact specific email addresses can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierEmailForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier email.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier email successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_email"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Emails"
        ],
        "summary": "Supplier Email For Supplier Contact",
        "description": "Contact specific email addresses can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PutSupplierEmailForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier email.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier email to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_email"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier email was updated. Response body will include the supplier email details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_email"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier email"
      },
      "delete": {
        "tags": [
          "Supplier Emails"
        ],
        "summary": "Supplier Email For Supplier Contact",
        "description": "Contact specific email addresses can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "DeleteSupplierEmailForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier email.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier email was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier email for supplier contact"
    },
    "/suppliers/{supplierId}/supplier_contacts/{supplierContactId}/supplier_emails/{Id}": {
      "get": {
        "tags": [
          "Supplier Emails"
        ],
        "summary": "Supplier Email For Supplier And Supplier Contact",
        "description": "Contact specific email addresses can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierEmailForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier email.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier email successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_email"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Emails"
        ],
        "summary": "Supplier Email For Supplier And Supplier Contact",
        "description": "Contact specific email addresses can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PutSupplierEmailForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier email.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier email to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_email"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier email was updated. Response body will include the supplier email details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_email"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier email"
      },
      "delete": {
        "tags": [
          "Supplier Emails"
        ],
        "summary": "Supplier Email For Supplier And Supplier Contact",
        "description": "Contact specific email addresses can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "DeleteSupplierEmailForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier email.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier email was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier email for supplier and supplier contact"
    },
    "/supplier_faxes": {
      "get": {
        "tags": [
          "Supplier Faxes"
        ],
        "summary": "Supplier Faxes",
        "description": "Contact specific fax numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierFaxes",
        "responses": {
          "200": {
            "description": "The collection of supplier faxes has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_fax"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier faxes",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "Enhanced endpoint field",
          "description": "This operation now includes the field 'date_time_created'."
        }
      ]
    },
    "/supplier_contacts/{supplierContactId}/supplier_faxes": {
      "get": {
        "tags": [
          "Supplier Faxes"
        ],
        "summary": "Supplier Faxes By Contact",
        "description": "Contact specific fax numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierFaxesForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of supplier faxes has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_fax"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Supplier Faxes"
        ],
        "summary": "Supplier Faxes By Contact",
        "description": "Contact specific fax numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PostSupplierFaxForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier fax to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_fax"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier fax was created. Response body will include the supplier fax details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_fax"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier fax"
      },
      "x-sage-pathtitle": "Supplier faxes by contact"
    },
    "/suppliers/{supplierId}/supplier_contacts/{supplierContactId}/supplier_faxes": {
      "get": {
        "tags": [
          "Supplier Faxes"
        ],
        "summary": "Supplier Faxes For Supplier And Supplier Contact",
        "description": "Contact specific fax numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierFaxesForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of supplier faxes has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_fax"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Supplier Faxes"
        ],
        "summary": "Supplier Faxes For Supplier And Supplier Contact",
        "description": "Contact specific fax numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PostSupplierFaxForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier fax to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_fax"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier fax was created. Response body will include the supplier fax details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_fax"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier fax"
      },
      "x-sage-pathtitle": "Supplier faxes for supplier and supplier contact"
    },
    "/supplier_faxes/{Id}": {
      "get": {
        "tags": [
          "Supplier Faxes"
        ],
        "summary": "Supplier Fax",
        "description": "Contact specific fax numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierFax",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier fax.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier fax successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_fax"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Faxes"
        ],
        "summary": "Supplier Fax",
        "description": "Contact specific fax numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PutSupplierFax",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier fax.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier fax to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_fax"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier fax was updated. Response body will include the supplier fax details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_fax"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier fax"
      },
      "delete": {
        "tags": [
          "Supplier Faxes"
        ],
        "summary": "Supplier Fax",
        "description": "Contact specific fax numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "DeleteSupplierFax",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier fax.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier fax was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier fax"
    },
    "/supplier_contacts/{supplierContactId}/supplier_faxes/{Id}": {
      "get": {
        "tags": [
          "Supplier Faxes"
        ],
        "summary": "Supplier Fax For Supplier Contact",
        "description": "Contact specific fax numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierFaxForSupplierContact",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier fax.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier fax successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_fax"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Faxes"
        ],
        "summary": "Supplier Fax For Supplier Contact",
        "description": "Contact specific fax numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PutSupplierFaxForSupplierContact",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier fax.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier fax to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_fax"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier fax was updated. Response body will include the supplier fax details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_fax"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier fax"
      },
      "delete": {
        "tags": [
          "Supplier Faxes"
        ],
        "summary": "Supplier Fax For Supplier Contact",
        "description": "Contact specific fax numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "DeleteSupplierFaxForSupplierContact",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier fax.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier fax was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier fax for supplier contact"
    },
    "/suppliers/{supplierId}/supplier_contacts/{supplierContactId}/supplier_faxes/{Id}": {
      "get": {
        "tags": [
          "Supplier Faxes"
        ],
        "summary": "Supplier Fax For Supplier And Supplier Contact",
        "description": "Contact specific fax numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierFaxForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier fax.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier fax successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_fax"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Faxes"
        ],
        "summary": "Supplier Fax For Supplier And Supplier Contact",
        "description": "Contact specific fax numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PutSupplierFaxForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier fax.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier fax to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_fax"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier fax was updated. Response body will include the supplier fax details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_fax"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier fax"
      },
      "delete": {
        "tags": [
          "Supplier Faxes"
        ],
        "summary": "Supplier Fax For Supplier And Supplier Contact",
        "description": "Contact specific fax numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "DeleteSupplierFaxForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier fax.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier fax was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier fax for supplier and supplier contact"
    },
    "/supplier_mobiles": {
      "get": {
        "tags": [
          "Supplier Mobiles"
        ],
        "summary": "Supplier Mobiles",
        "description": "Contact specific mobile numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierMobiles",
        "responses": {
          "200": {
            "description": "The collection of supplier mobiles has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_mobile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier mobiles",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "Enhanced endpoint field",
          "description": "This operation now includes the field 'date_time_created'."
        }
      ]
    },
    "/supplier_contacts/{supplierContactId}/supplier_mobiles": {
      "get": {
        "tags": [
          "Supplier Mobiles"
        ],
        "summary": "Supplier Mobiles By Contact",
        "description": "Contact specific mobile numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierMobilesForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of supplier mobiles has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_mobile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Supplier Mobiles"
        ],
        "summary": "Supplier Mobiles By Contact",
        "description": "Contact specific mobile numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PostSupplierMobileForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier mobile to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_mobile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier mobile was created. Response body will include the supplier mobile details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_mobile"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier mobile"
      },
      "x-sage-pathtitle": "Supplier mobiles by contact"
    },
    "/suppliers/{supplierId}/supplier_contacts/{supplierContactId}/supplier_mobiles": {
      "get": {
        "tags": [
          "Supplier Mobiles"
        ],
        "summary": "Supplier Mobiles For Supplier And Supplier Contact",
        "description": "Contact specific mobile numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierMobilesForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of supplier mobiles has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_mobile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Supplier Mobiles"
        ],
        "summary": "Supplier Mobiles For Supplier And Supplier Contact",
        "description": "Contact specific mobile numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PostSupplierMobileForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier mobile to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_mobile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier mobile was created. Response body will include the supplier mobile details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_mobile"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier mobile"
      },
      "x-sage-pathtitle": "Supplier mobiles for supplier and supplier contact"
    },
    "/supplier_mobiles/{Id}": {
      "get": {
        "tags": [
          "Supplier Mobiles"
        ],
        "summary": "Supplier Mobile",
        "description": "Contact specific mobile numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierMobile",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier mobile.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier mobile successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_mobile"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Mobiles"
        ],
        "summary": "Supplier Mobile",
        "description": "Contact specific mobile numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PutSupplierMobile",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier mobile.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier mobile to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_mobile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier mobile was updated. Response body will include the supplier mobile details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_mobile"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier mobile"
      },
      "delete": {
        "tags": [
          "Supplier Mobiles"
        ],
        "summary": "Supplier Mobile",
        "description": "Contact specific mobile numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "DeleteSupplierMobile",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier mobile.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier mobile was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier mobile"
    },
    "/supplier_contacts/{supplierContactId}/supplier_mobiles/{Id}": {
      "get": {
        "tags": [
          "Supplier Mobiles"
        ],
        "summary": "Supplier Mobile For Supplier Contact",
        "description": "Contact specific mobile numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierMobileForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier mobile.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier mobile successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_mobile"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Mobiles"
        ],
        "summary": "Supplier Mobile For Supplier Contact",
        "description": "Contact specific mobile numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PutSupplierMobileForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier mobile.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier mobile to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_mobile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier mobile was updated. Response body will include the supplier mobile details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_mobile"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier mobile"
      },
      "delete": {
        "tags": [
          "Supplier Mobiles"
        ],
        "summary": "Supplier Mobile For Supplier Contact",
        "description": "Contact specific mobile numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "DeleteSupplierMobileForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier mobile.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier mobile was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier mobile for supplier contact"
    },
    "/suppliers/{supplierId}/supplier_contacts/{supplierContactId}/supplier_mobiles/{Id}": {
      "get": {
        "tags": [
          "Supplier Mobiles"
        ],
        "summary": "Supplier Mobile For Supplier And Supplier Contact",
        "description": "Contact specific mobile numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierMobileForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier mobile.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier mobile successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_mobile"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Mobiles"
        ],
        "summary": "Supplier Mobile For Supplier And Supplier Contact",
        "description": "Contact specific mobile numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PutSupplierMobileForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier mobile.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier mobile to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_mobile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier mobile was updated. Response body will include the supplier mobile details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_mobile"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier mobile"
      },
      "delete": {
        "tags": [
          "Supplier Mobiles"
        ],
        "summary": "Supplier Mobile For Supplier And Supplier Contact",
        "description": "Contact specific mobile numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "DeleteSupplierMobileForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier mobile.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier mobile was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier mobile for supplier and supplier contact"
    },
    "/supplier_telephones": {
      "get": {
        "tags": [
          "Supplier Telephones"
        ],
        "summary": "Supplier Telephones",
        "description": "Contact specific telephone numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierTelephones",
        "responses": {
          "200": {
            "description": "The collection of supplier telephones has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_telephone"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier telephones",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "Enhanced endpoint field",
          "description": "This operation now includes the field 'date_time_created'."
        }
      ]
    },
    "/supplier_contacts/{supplierContactId}/supplier_telephones": {
      "get": {
        "tags": [
          "Supplier Telephones"
        ],
        "summary": "Supplier Telephones By Contact",
        "description": "Contact specific telephone numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierTelephonesForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of supplier mobiles has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_telephone"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Supplier Telephones"
        ],
        "summary": "Supplier Telephones By Contact",
        "description": "Contact specific telephone numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PostSupplierTelephoneForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier telephone to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_telephone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier telephone was created. Response body will include the supplier telephone details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_telephone"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier telephone"
      },
      "x-sage-pathtitle": "Supplier telephones by contact"
    },
    "/suppliers/{supplierId}/supplier_contacts/{supplierContactId}/supplier_telephones": {
      "get": {
        "tags": [
          "Supplier Telephones"
        ],
        "summary": "Supplier Telephones For Supplier And Supplier Contact",
        "description": "Contact specific telephone numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierTelephonesForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of supplier telephones has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_telephone"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Supplier Telephones"
        ],
        "summary": "Supplier Telephones For Supplier And Supplier Contact",
        "description": "Contact specific telephone numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PostSupplierTelephoneForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier telephone to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_telephone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier telephone was created. Response body will include the supplier telephone details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_telephone"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier telephone"
      },
      "x-sage-pathtitle": "Supplier telephones for supplier and supplier contact"
    },
    "/supplier_telephones/{Id}": {
      "get": {
        "tags": [
          "Supplier Telephones"
        ],
        "summary": "Supplier Telephone",
        "description": "Contact specific telephone numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierTelephone",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier telephone.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier telephone successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_telephone"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Telephones"
        ],
        "summary": "Supplier Telephone",
        "description": "Contact specific telephone numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PutSupplierTelephone",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier telephone.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier telephone to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_telephone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier telephone was updated. Response body will include the supplier telephone details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_telephone"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier telephone"
      },
      "delete": {
        "tags": [
          "Supplier Telephones"
        ],
        "summary": "Supplier Telephone",
        "description": "Contact specific telephone numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "DeleteSupplierTelephone",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier telephone.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier telephone was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier telephone"
    },
    "/supplier_contacts/{supplierContactId}/supplier_telephones/{Id}": {
      "get": {
        "tags": [
          "Supplier Telephones"
        ],
        "summary": "Supplier Telephone For Supplier Contact",
        "description": "Contact specific telephone numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierTelephoneForSupplierContact",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier telephone.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier mobile successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_telephone"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Telephones"
        ],
        "summary": "Supplier Telephone For Supplier Contact",
        "description": "Contact specific telephone numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PutSupplierTelephoneForSupplierContact",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier telephone.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier telephone to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_telephone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier telephone was updated. Response body will include the supplier telephone details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_telephone"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier telephone"
      },
      "delete": {
        "tags": [
          "Supplier Telephones"
        ],
        "summary": "Supplier Telephone For Supplier Contact",
        "description": "Contact specific telephone numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "DeleteSupplierTelephoneForSupplierContact",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier telephone.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier telephone was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier telephone for supplier contact"
    },
    "/suppliers/{supplierId}/supplier_contacts/{supplierContactId}/supplier_telephones/{Id}": {
      "get": {
        "tags": [
          "Supplier Telephones"
        ],
        "summary": "Supplier Telephone For Supplier And Supplier Contact",
        "description": "Contact specific telephone numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierTelephoneForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier telephone.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier telephone successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_telephone"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Telephones"
        ],
        "summary": "Supplier Telephone For Supplier And Supplier Contact",
        "description": "Contact specific telephone numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PutSupplierTelephoneForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier telephone.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier telephone to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_telephone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier telephone was updated. Response body will include the supplier telephone details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_telephone"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier telephone"
      },
      "delete": {
        "tags": [
          "Supplier Telephones"
        ],
        "summary": "Supplier Telephone For Supplier And Supplier Contact",
        "description": "Contact specific telephone numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "DeleteSupplierTelephoneForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier telephone.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier telephone was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier telephone for supplier and supplier contact"
    },
    "/supplier_websites": {
      "get": {
        "tags": [
          "Supplier Websites"
        ],
        "summary": "Supplier Websites",
        "description": "Contact specific websites can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierWebsites",
        "responses": {
          "200": {
            "description": "The collection of supplier websites has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_website"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier websites",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "Enhanced endpoint field",
          "description": "This operation now includes the field 'date_time_created'."
        }
      ]
    },
    "/supplier_contacts/{supplierContactId}/supplier_websites": {
      "get": {
        "tags": [
          "Supplier Websites"
        ],
        "summary": "Supplier Websites By Contact",
        "description": "Contact specific websites can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierWebsitesForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of supplier websites has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_website"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Supplier Websites"
        ],
        "summary": "Supplier Websites By Contact",
        "description": "Contact specific websites can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PostSupplierWebsiteForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier website to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_website"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier website was created. Response body will include the supplier website details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_website"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier website"
      },
      "x-sage-pathtitle": "Supplier websites by contact"
    },
    "/suppliers/{supplierId}/supplier_contacts/{supplierContactId}/supplier_websites": {
      "get": {
        "tags": [
          "Supplier Websites"
        ],
        "summary": "Supplier Websites For Supplier And Supplier Contact",
        "description": "Contact specific websites can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierWebsitesForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of supplier websites has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_website"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Supplier Websites"
        ],
        "summary": "Supplier Websites For Supplier And Supplier Contact",
        "description": "Contact specific websites can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PostSupplierWebsiteForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier website to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_website"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier website was created. Response body will include the supplier website details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_website"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier website"
      },
      "x-sage-pathtitle": "Supplier websites for supplier and supplier contact"
    },
    "/supplier_websites/{Id}": {
      "get": {
        "tags": [
          "Supplier Websites"
        ],
        "summary": "Supplier Website",
        "description": "Contact specific websites can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierWebsite",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier website.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier website successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_website"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Websites"
        ],
        "summary": "Supplier Website",
        "description": "Contact specific websites can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PutSupplierWebsite",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier website.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier website to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_website"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier website was updated. Response body will include the supplier website details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_website"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier website"
      },
      "delete": {
        "tags": [
          "Supplier Websites"
        ],
        "summary": "Supplier Website",
        "description": "Contact specific websites can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "DeleteSupplierWebsite",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier website.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier website was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier website"
    },
    "/supplier_contacts/{supplierContactId}/supplier_websites/{Id}": {
      "get": {
        "tags": [
          "Supplier Websites"
        ],
        "summary": "Supplier Website For Supplier Contact",
        "description": "Contact specific websites can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierWebsiteForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier website.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier website successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_website"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Websites"
        ],
        "summary": "Supplier Website For Supplier Contact",
        "description": "Contact specific websites can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PutSupplierWebsiteForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier website.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier website to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_website"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier website was updated. Response body will include the supplier website details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_website"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier website"
      },
      "delete": {
        "tags": [
          "Supplier Websites"
        ],
        "summary": "Supplier Website For Supplier Contact",
        "description": "Contact specific websites can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "DeleteSupplierWebsiteForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier website.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier website was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier website for supplier contact"
    },
    "/suppliers/{supplierId}/supplier_contacts/{supplierContactId}/supplier_websites/{Id}": {
      "get": {
        "tags": [
          "Supplier Websites"
        ],
        "summary": "Supplier Website For Supplier And Supplier Contact",
        "description": "Contact specific websites can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "GetSupplierWebsiteForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier website.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier website successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_website"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Websites"
        ],
        "summary": "Supplier Website For Supplier And Supplier Contact",
        "description": "Contact specific websites can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "PutSupplierWebsiteForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier website.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier website to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_website"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier website was updated. Response body will include the supplier website details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_website"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "Supplier website"
      },
      "delete": {
        "tags": [
          "Supplier Websites"
        ],
        "summary": "Supplier Website For Supplier And Supplier Contact",
        "description": "Contact specific websites can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields.",
        "operationId": "DeleteSupplierWebsiteForSupplierAndSupplierContact",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier website.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier website was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier website for supplier and supplier contact"
    },
    "/supplier_contact_roles": {
      "get": {
        "tags": [
          "Supplier Contact Roles"
        ],
        "summary": "Supplier Contact Roles",
        "description": "Supplier contacts can be assigned job roles. Supplier contact roles describe roles assigned to a supplier contact, including whether the contact is the preferred contact for the supplier for a role.",
        "operationId": "GetSupplierContactRoles",
        "responses": {
          "200": {
            "description": "The collection of supplier contact roles has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_contact_role"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier contact roles",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/supplier_contacts/{supplierContactId}/supplier_contact_roles": {
      "get": {
        "tags": [
          "Supplier Contact Roles"
        ],
        "summary": "Supplier Contact Roles By Contact",
        "description": "Supplier contacts can be assigned job roles. Supplier contact roles describe roles assigned to a supplier contact, including whether the contact is the preferred contact for the supplier for a role.",
        "operationId": "GetSupplierContactRolesForSupplierContact",
        "parameters": [
          {
            "name": "supplierContactId",
            "in": "path",
            "description": "Unique Id of the supplier contact.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of supplier contact roles has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_contact_role"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier contact roles by contact"
    },
    "/supplier_contact_roles/{Id}": {
      "get": {
        "tags": [
          "Supplier Contact Roles"
        ],
        "summary": "Supplier Contact Role",
        "description": "Supplier contacts can be assigned job roles. Supplier contact roles describe roles assigned to a supplier contact, including whether the contact is the preferred contact for the supplier for a role.",
        "operationId": "GetSupplierContactRole",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier contact role.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier contact role successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_contact_role"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier contact role"
    },
    "/supplier_views": {
      "get": {
        "tags": [
          "Supplier Views"
        ],
        "summary": "Supplier Views",
        "description": "When making larger requests for supplier information, the Supplier Views resource can be a faster alternative to the 'Supplier' resource. The Supplier Views resource also returns a wider breadth of information than the Supplier resource. Using Supplier Views could therefore reduce the quantity of API requests needed to return the same information from multiple API resources. The default sort (orderby) fields is by 'Id' ascending.",
        "operationId": "GetSupplierViews",
        "responses": {
          "200": {
            "description": "Get a collection of Suppliers using views.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_view"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier views",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/lookup_suppliers": {
      "get": {
        "tags": [
          "Lookup Suppliers"
        ],
        "summary": "Lookup Suppliers",
        "description": "Gets a subset of supplier information for populating a lookup.",
        "operationId": "GetLookupSuppliers",
        "responses": {
          "200": {
            "description": "Get a collection of Suppliers for populating a lookup.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/lookup_supplier"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Lookup Suppliers",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/supplier_memos": {
      "get": {
        "tags": [
          "Supplier Memos"
        ],
        "summary": "Supplier Memos",
        "description": "Memos are sections of text that can be used to make comments about a supplier account such as reminders, or notes (e.g. if there is currently a dispute over an order). These can be used to note information about previous communications, or anything that should be taken into consideration when contacting the supplier (e.g. there is currently a dispute over order).<br/><br/>Multiple memos can be added to each account. The user that created the memo, the date it was created and last updated date and time are also recorded.<br/><br/>A user can also specify if a memo is currently 'Active' or 'Inactive'. This allows a user to keep a record of previous memos without deleting them.",
        "operationId": "GetSupplierMemos",
        "responses": {
          "200": {
            "description": "The list of supplier memos has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_memo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Supplier Memos"
        ],
        "summary": "Supplier Memos",
        "description": "Memos are sections of text that can be used to make comments about a supplier account such as reminders, or notes (e.g. if there is currently a dispute over an order). These can be used to note information about previous communications, or anything that should be taken into consideration when contacting the supplier (e.g. there is currently a dispute over order).<br/><br/>Multiple memos can be added to each account. The user that created the memo, the date it was created and last updated date and time are also recorded.<br/><br/>A user can also specify if a memo is currently 'Active' or 'Inactive'. This allows a user to keep a record of previous memos without deleting them.",
        "operationId": "PostSupplierMemo",
        "requestBody": {
          "description": "Supplier memo to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_memo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier memo was created. Response body will include the supplier memo details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_memo"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "SupplierMemo"
      },
      "x-sage-pathtitle": "Supplier memos",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "Extended operation",
          "description": "This endpoint was enhanced with POST and DELETE operations."
        },
        {
          "date": "16/09/2020",
          "title": "Enhanced endpoint field",
          "description": "This operation now includes the field 'date_time_created'."
        },
        {
          "date": "15/03/2021",
          "title": "Enhanced endpoint field",
          "description": "This operation now includes the field 'is_to_delete'."
        }
      ]
    },
    "/supplier_memos/{Id}": {
      "get": {
        "tags": [
          "Supplier Memos"
        ],
        "summary": "Supplier Memo",
        "description": "Memos are sections of text that can be used to make comments about a supplier account such as reminders, or notes (e.g. if there is currently a dispute over an order). These can be used to note information about previous communications, or anything that should be taken into consideration when contacting the supplier (e.g. there is currently a dispute over order).<br/><br/>Multiple memos can be added to each account. The user that created the memo, the date it was created and last updated date and time are also recorded.<br/><br/>A user can also specify if a memo is currently 'Active' or 'Inactive'. This allows a user to keep a record of previous memos without deleting them.",
        "operationId": "GetSupplierMemo",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier memo.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of supplier memo successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_memo"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Supplier Memos"
        ],
        "summary": "Supplier Memo",
        "description": "Memos are sections of text that can be used to make comments about a supplier account such as reminders, or notes (e.g. if there is currently a dispute over an order). These can be used to note information about previous communications, or anything that should be taken into consideration when contacting the supplier (e.g. there is currently a dispute over order).<br/><br/>Multiple memos can be added to each account. The user that created the memo, the date it was created and last updated date and time are also recorded.<br/><br/>A user can also specify if a memo is currently 'Active' or 'Inactive'. This allows a user to keep a record of previous memos without deleting them.",
        "operationId": "PutSupplierMemo",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier memo.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Supplier memo to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/supplier_memo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The supplier memo was updated. Response body will include the supplier memo details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/supplier_memo"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "SupplierMemo"
      },
      "delete": {
        "tags": [
          "Supplier Memos"
        ],
        "summary": "Supplier Memo",
        "description": "Memos are sections of text that can be used to make comments about a supplier account such as reminders, or notes (e.g. if there is currently a dispute over an order). These can be used to note information about previous communications, or anything that should be taken into consideration when contacting the supplier (e.g. there is currently a dispute over order).<br/><br/>Multiple memos can be added to each account. The user that created the memo, the date it was created and last updated date and time are also recorded.<br/><br/>A user can also specify if a memo is currently 'Active' or 'Inactive'. This allows a user to keep a record of previous memos without deleting them.",
        "operationId": "DeleteSupplierMemo",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the supplier memo.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier memo was deleted.",
            "content": {}
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier memo"
    },
    "/suppliers/{supplierId}/supplier_memos": {
      "get": {
        "tags": [
          "Supplier Memos"
        ],
        "summary": "Supplier Memos For A Supplier",
        "description": "Memos are sections of text that can be used to make comments about a supplier account such as reminders, or notes (e.g. if there is currently a dispute over an order). These can be used to note information about previous communications, or anything that should be taken into consideration when contacting the supplier (e.g. there is currently a dispute over order).<br/><br/>Multiple memos can be added to each account. The user that created the memo, the date it was created and last updated date and time are also recorded.<br/><br/>A user can also specify if a memo is currently 'Active' or 'Inactive'. This allows a user to keep a record of previous memos without deleting them.",
        "operationId": "GetSupplierMemosForSupplier",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Unique Id of the supplier.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The details of the supplier memos have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_memo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier memos for a supplier"
    },
    "/purchase_ledger_settings": {
      "get": {
        "tags": [
          "Purchase Ledger Settings"
        ],
        "summary": "Purchase Ledger Settings",
        "description": "The Purchase Ledger settings are used to configure application behaviour with respect to the Purchase Ledger module.<br/><br/>Settings include the maximum payment amount to be genarated, the supplier default tax code, etc.",
        "operationId": "GetPurchaseLedgerSettings",
        "responses": {
          "200": {
            "description": "Purchase Ledger settings successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purchase_ledger_settings"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Purchase Ledger settings",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        },
        {
          "date": "26/07/2021",
          "title": "Enhanced endpoint fields",
          "description": "This operation now includes the fields 'use_account_periods_as_trading_periods', 'date_time_created' and 'date_time_updated'."
        },
        {
          "date": "20/02/2023",
          "title": "Enhanced endpoint field",
          "description": "This operation now includes the field 'use_transaction_date_for_allocation'."
        }
      ]
    },
    "/purchase_ledger_settings/{Id}": {
      "get": {
        "tags": [
          "Purchase Ledger Settings"
        ],
        "summary": "Purchase Ledger Setting",
        "description": "The Purchase Ledger settings are used to configure application behaviour with respect to the Purchase Ledger module.<br/><br/>Settings include the maximum payment amount to be genarated, the supplier default tax code, etc.",
        "operationId": "GetPurchaseLedgerSetting",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the Purchase Ledger settings.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase Ledger settings successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/purchase_ledger_settings"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Purchase Ledger Settings"
        ],
        "summary": "Purchase Ledger Setting",
        "description": "Update the Purchase Ledger settings.",
        "operationId": "PutPurchaseLedgerSetting",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the Purchase Ledger settings.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Purchase Ledger settings to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/purchase_ledger_settings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Purchase Ledger settings were updated. Response body will include the Purchase Ledger settings.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/purchase_ledger_settings"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "PurchaseLedgerSettings"
      },
      "x-sage-pathtitle": "Purchase Ledger setting"
    },
    "/payment_groups": {
      "get": {
        "tags": [
          "Payment Groups"
        ],
        "summary": "Payment Groups",
        "description": "Use payment groups to automatically process supplier payments.",
        "operationId": "GetPaymentGroups",
        "responses": {
          "200": {
            "description": "Payment groups successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/payment_group"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Payment groups",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        },
        {
          "date": "26/07/2021",
          "title": "Enhanced endpoint fields",
          "description": "This operation now includes the field 'is_supplier_payments_group'."
        }
      ]
    },
    "/payment_groups/{Id}": {
      "get": {
        "tags": [
          "Payment Groups"
        ],
        "summary": "Payment Group",
        "description": "Use payment groups to automatically process supplier payments.",
        "operationId": "GetPaymentGroup",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the Payment group.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment group successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment_group"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Payment Groups"
        ],
        "summary": "Payment Group",
        "description": "Update the Payment group.",
        "operationId": "PutPaymentGroup",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the Payment group.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "Payment group to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/payment_group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Payment group was updated. Response body will include the Payment group.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment_group"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "PaymentGroup"
      },
      "x-sage-pathtitle": "Payment group"
    },
    "/factor_houses": {
      "get": {
        "tags": [
          "Factor Houses"
        ],
        "summary": "Factor Houses",
        "description": "Factor houses are third party companies employed by suppliers to collect payments from customers.",
        "operationId": "GetFactorHouses",
        "responses": {
          "200": {
            "description": "The list of factor houses has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/factor_house"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Factor houses",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/factor_houses/{Id}": {
      "get": {
        "tags": [
          "Factor Houses"
        ],
        "summary": "Factor House",
        "description": "Factor houses are third party companies employed by suppliers to collect payments from customers.",
        "operationId": "GetFactorHouse",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Unique Id of the factor house.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of factor house successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/factor_house"
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Factor house"
    },
    "/payment_types": {
      "get": {
        "tags": [
          "Payment Types"
        ],
        "summary": "Payment Group Payment Types",
        "description": "Gets the list of Payment group payment types which can be used. For example, \"Remittance & cheque\", or \"Remittance only (Email)\".",
        "operationId": "GetPaymentGroupPaymentTypes",
        "responses": {
          "200": {
            "description": "The list of payment group payment types has been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/payment_type"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Payment group payment types",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/supplier_period_value_views": {
      "get": {
        "tags": [
          "Supplier Period Value Views"
        ],
        "summary": "Supplier Period Value Views",
        "description": "This resource returns supplier values (total invoices, total credit notes, total cash, etc.) for all periods for all financial years held for the company. A company always has five future financial years and can have unlimited previous years, depending on how long the company has been operating. The default sort (orderby) field are by 'supplier_reference', 'supplier_analysis_period_id', 'supplier_period_value_id' ascending.",
        "operationId": "GetSupplierPeriodValueViews",
        "responses": {
          "200": {
            "description": "The details of the supplier period values have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_period_value_view"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier period value views",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    },
    "/supplier_year_value_views": {
      "get": {
        "tags": [
          "Supplier Year Value Views"
        ],
        "summary": "Supplier Year Value Views",
        "description": "This resource returns supplier values (total invoices, total credit notes, total cash, etc.) for all financial years held for the company. A company always has five future financial years and can have unlimited previous years, depending on how long the company has been operating. The default sort (orderby) field are by 'financial_year_end_date', 'supplier_year_value_id' asccending.",
        "operationId": "GetSupplierYearValueViews",
        "responses": {
          "200": {
            "description": "The details of the supplier year values have been successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/supplier_year_value_view"
                  }
                }
              }
            }
          },
          "400": {
            "description": "There was a problem with the request. Request body will include details.",
            "content": {}
          }
        }
      },
      "x-sage-pathtitle": "Supplier year value views",
      "x-sage-changelog": [
        {
          "date": "16/09/2020",
          "title": "New endpoint",
          "description": "This endpoint was added."
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "purchase_trading_period": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "An unique Id specific to each purchase trading period.",
            "format": "int64",
            "readOnly": true
          },
          "period_number": {
            "maxLength": 20,
            "type": "string",
            "description": "The period number.",
            "readOnly": true
          },
          "start_date": {
            "type": "string",
            "description": "Date the trading period starts. The returned string includes the time but this will always be 00:00:00.",
            "format": "date-time",
            "readOnly": true
          },
          "end_date": {
            "type": "string",
            "description": "Date the trading period ends. The returned string includes the time but this will always be 00:00:00.",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "This resource returns the details of all purchase trading periods for all financial years held for the company. A company can have the trading periods set to be the same as the accounting periods or as different periods. (Sage 200 Professional only, Sage 200 Standard defaults to financial year periods).",
        "x-sage-professional-only": true
      },
      "purchase_invoice": {
        "required": [
          "supplier_id"
        ],
        "type": "object",
        "properties": {
          "supplier_id": {
            "type": "integer",
            "description": "Supplier record Id.",
            "format": "int64"
          },
          "transaction_date": {
            "type": "string",
            "description": "Transaction date. This defaults to the current system date.",
            "format": "date-time"
          },
          "due_date": {
            "type": "string",
            "description": "Date the invoice is due to be paid.",
            "format": "date-time"
          },
          "exchange_rate": {
            "type": "number",
            "description": "Exchange rate for the invoice. This defaults to the supplier exchange rate.",
            "format": "decimal 6dp"
          },
          "reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Invoice reference."
          },
          "second_reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Invoice second reference."
          },
          "settled_immediately": {
            "type": "boolean",
            "description": "When set to True this indicates that the invoice has been paid and any settlement discount has been applied.",
            "default": false
          },
          "vat_adjustment_doc_expected": {
            "type": "boolean",
            "description": "Whether a further VAT adjustment document is expected.",
            "default": false
          },
          "document_goods_value": {
            "type": "number",
            "description": "Value of goods.",
            "format": "decimal 2dp"
          },
          "document_tax_value": {
            "type": "number",
            "description": "Tax value.",
            "format": "decimal 2dp"
          },
          "document_discount_value": {
            "type": "number",
            "description": "Discount value.",
            "format": "decimal 2dp"
          },
          "document_tax_discount_value": {
            "type": "number",
            "description": "Amount VAT is discounted when a settlement discount is applied.",
            "format": "decimal 2dp"
          },
          "discount_percent": {
            "type": "number",
            "description": "Percentage discount. This defaults to the settlement discount from the supplier record.",
            "format": "decimal 2dp"
          },
          "discount_days": {
            "type": "integer",
            "description": "Number of days to pay to qualify for the settlement discount. This defaults to the settlement days from the supplier record.",
            "format": "int16"
          },
          "authorisation_type": {
            "maxLength": 50,
            "type": "string",
            "description": "Authorisation type.",
            "readOnly": true
          },
          "is_authorised": {
            "type": "boolean",
            "description": "Determines whether the transaction is to be authorised or not. Note: used only if Purchase Ledger authorisation is on.",
            "default": false
          },
          "tax_analysis_items": {
            "type": "array",
            "description": "Tax analysis lines.",
            "items": {
              "required": [
                "id"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Tax code record Id. This defaults to the tax code Id from the supplier record",
                  "format": "int64"
                },
                "goods_amount": {
                  "type": "number",
                  "description": "Goods amount. Must add up to the headline value set on the invoice. This defaults to the document_goods_value from the purchase invoice.",
                  "format": "decimal 2dp"
                },
                "discount_amount": {
                  "type": "number",
                  "description": "Discount amount. Must add up to the headline value set on the invoice. This defaults to the document_discount_value from the purchase invoice.",
                  "format": "decimal 2dp"
                },
                "tax_amount": {
                  "type": "number",
                  "description": "Tax amount. Must add up to the headline value set on the invoice. This defaults to the document_tax_value from the purchase invoice.",
                  "format": "decimal 2dp"
                },
                "tax_discount_amount": {
                  "type": "number",
                  "description": "Tax discount amount. Must add up to the headline value set on the invoice. This defaults to the document_tax_discount_value from the purchase invoice.",
                  "format": "decimal 2dp"
                },
                "details": {
                  "maxLength": 6000,
                  "type": "string",
                  "description": "Tax analysis details. Note: this is only used for Sage 200 Standard for Education."
                }
              }
            }
          },
          "nominal_analysis_items": {
            "type": "array",
            "description": "Nominal analysis lines.",
            "items": {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "maxLength": 8,
                  "type": "string",
                  "description": "Nominal account code. This defaults to the nominal code from the supplier record."
                },
                "cost_centre": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Cost centre. If specified must correspond to the code. This defaults to the nominal cost centre from the supplier record."
                },
                "department": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Department. If specified must correspond to the code. This defaults to the nominal department from the supplier record."
                },
                "narrative": {
                  "maxLength": 6000,
                  "type": "string",
                  "description": "Narrative."
                },
                "value": {
                  "type": "number",
                  "description": "Value. Must add up to the headline value of goods. This defaults to the document_goods_value from the purchase invoice.",
                  "format": "decimal 2dp"
                },
                "transaction_analysis_code": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "Specify a transaction analysis code to be used on the nominal analysis item. This requires that the ledger settings allow additional analysis and that the code is valid"
                }
              }
            }
          }
        },
        "description": "Invoices are used to record a purchase against a particular supplier's account.<br /><br />Posting a purchase invoice does not actually create a 'purchase invoice' entity, but a Posted Transaction of type 'TradingAccountEntryTypeInvoice', therefore it is not possible to 'get' a purchase invoice using the same API endpoint after it has been posted. Posting a purchase invoice returns a URN (Unique Reference Number) that can be used to find the corresponding posted transaction."
      },
      "purchase_invoice_new_request": {
        "required": [
          "supplier_id"
        ],
        "type": "object",
        "properties": {
          "supplier_id": {
            "type": "integer",
            "description": "Supplier record Id.",
            "format": "int64"
          }
        },
        "description": "Returns a purchase invoice with all the default values for a supplier. The API endpoint does not persist the purchase invoice."
      },
      "purchase_credit_note": {
        "required": [
          "supplier_id"
        ],
        "type": "object",
        "properties": {
          "supplier_id": {
            "type": "integer",
            "description": "Supplier record Id.",
            "format": "int64"
          },
          "transaction_date": {
            "type": "string",
            "description": "Transaction date. This defaults to the current system date.",
            "format": "date-time"
          },
          "exchange_rate": {
            "type": "number",
            "description": "Exchange rate for the credit note. This defaults to the supplier exchange rate.",
            "format": "decimal 6dp"
          },
          "reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Credit note reference."
          },
          "second_reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Credit note second reference."
          },
          "settled_immediately": {
            "type": "boolean",
            "description": "When set to True this indicates that the credit note has been paid and any settlement discount has been applied.",
            "default": false
          },
          "vat_adjustment_doc_expected": {
            "type": "boolean",
            "description": "Whether a further VAT adjustment document is expected.",
            "default": false
          },
          "document_goods_value": {
            "type": "number",
            "description": "Value of goods.",
            "format": "decimal 2dp"
          },
          "document_tax_value": {
            "type": "number",
            "description": "Tax value.",
            "format": "decimal 2dp"
          },
          "document_discount_value": {
            "type": "number",
            "description": "Discount value.",
            "format": "decimal 2dp"
          },
          "document_tax_discount_value": {
            "type": "number",
            "description": "Amount VAT is discounted when a settlement discount is applied.",
            "format": "decimal 2dp"
          },
          "discount_percent": {
            "type": "number",
            "description": "Percentage discount. This defaults to the settlement discount from the supplier record.",
            "format": "decimal 2dp"
          },
          "discount_days": {
            "type": "integer",
            "description": "Number of days to pay to qualify for the settlement discount. This defaults to the settlement days from the supplier record.",
            "format": "int16"
          },
          "authorisation_type": {
            "maxLength": 50,
            "type": "string",
            "description": "Authorisation type.",
            "readOnly": true
          },
          "is_authorised": {
            "type": "boolean",
            "description": "Determines whether the transaction is to be authorised or not. Note: used only if Purchase Ledger authorisation is on.",
            "default": false
          },
          "tax_analysis_items": {
            "type": "array",
            "description": "Tax analysis lines.",
            "items": {
              "required": [
                "id"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Tax code record Id. This defaults to the tax code Id from the supplier record",
                  "format": "int64"
                },
                "goods_amount": {
                  "type": "number",
                  "description": "Goods amount. Must add up to the headline value set on the credit note. This defaults to the document_goods_value from the purchase credit note.",
                  "format": "decimal 2dp"
                },
                "discount_amount": {
                  "type": "number",
                  "description": "Discount amount. Must add up to the headline value set on the credit note. This defaults to the document_discount_value from the purchase credit note.",
                  "format": "decimal 2dp"
                },
                "tax_amount": {
                  "type": "number",
                  "description": "Tax amount. Must add up to the headline value set on the credit note. This defaults to the document_tax_value from the purchase credit note.",
                  "format": "decimal 2dp"
                },
                "tax_discount_amount": {
                  "type": "number",
                  "description": "Tax discount amount. Must add up to the headline value set on the credit note. This defaults to the document_tax_discount_value from the purchase credit note.",
                  "format": "decimal 2dp"
                },
                "details": {
                  "maxLength": 6000,
                  "type": "string",
                  "description": "Tax analysis details. Note: this is only used for Sage 200 Standard for Education."
                }
              }
            }
          },
          "nominal_analysis_items": {
            "type": "array",
            "description": "Nominal analysis lines.",
            "items": {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "maxLength": 8,
                  "type": "string",
                  "description": "Nominal account code. This defaults to the nominal code from the supplier record."
                },
                "cost_centre": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Cost centre. If specified must correspond to the code. This defaults to the nominal cost centre from the supplier record."
                },
                "department": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Department. If specified must correspond to the code. This defaults to the nominal department from the supplier record."
                },
                "narrative": {
                  "maxLength": 6000,
                  "type": "string",
                  "description": "Narrative."
                },
                "value": {
                  "type": "number",
                  "description": "Value. Must add up to the headline value of goods. This defaults to the document_goods_value from the purchase credit note.",
                  "format": "decimal 2dp"
                },
                "transaction_analysis_code": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "Specify a transaction analysis code to be used on the nominal analysis item. This requires that the ledger settings allow additional analysis and that the code is valid"
                }
              }
            }
          }
        },
        "description": "Use this resource to enter credit notes directly onto a particular supplier's account. Credit notes are typically used when receiving refunds, returns, etc. and reduce the turnover for the relevant supplier's account.<br /><br />Posting a credit note does not actually create a 'credit note' entity, but a Posted Transaction of type 'TradingAccountEntryTypeCreditNote', therefore it is not possible to 'get' a credit note using the same API endpoint after it has been posted. Posting a purchase credit note returns a URN (Unique Reference Number) that can be used to find the corresponding posted transaction."
      },
      "purchase_credit_note_new_request": {
        "required": [
          "supplier_id"
        ],
        "type": "object",
        "properties": {
          "supplier_id": {
            "type": "integer",
            "description": "Supplier record Id.",
            "format": "int64"
          }
        },
        "description": "Returns a purchase credit note with all the default values for a supplier. The API endpoint does not persist the purchase credit note."
      },
      "authorisation_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Enum record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum description.",
            "readOnly": true
          },
          "value": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum value.",
            "readOnly": true
          }
        },
        "description": "The authorisation type for a purchase transaction."
      },
      "sage_payments_supplier_status_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Enum record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 50,
            "type": "string",
            "description": "Enum description.",
            "readOnly": true
          },
          "value": {
            "maxLength": 50,
            "type": "string",
            "description": "Enum value.",
            "readOnly": true
          }
        },
        "description": "Sage Payments Supplier Status Types indicate the status of the supplier with Supplier Payments. The status types are 'Not submitted to Supplier Payments', 'Queried', 'Rejected', 'Requires Approval', 'Approved' and 'Requires Submission'.<P>The API endpoint returns details of the status of the supplier with Supplier Payments.</P>"
      },
      "purchase_posted_transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id.",
            "format": "int64",
            "readOnly": true
          },
          "supplier_id": {
            "type": "integer",
            "description": "Supplier Id.",
            "format": "int64",
            "readOnly": true
          },
          "trader_transaction_type": {
            "maxLength": 30,
            "type": "string",
            "description": "Transaction type.",
            "readOnly": true
          },
          "reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Transaction reference.",
            "readOnly": true
          },
          "second_reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Second reference.",
            "readOnly": true
          },
          "queried": {
            "maxLength": 1,
            "type": "string",
            "description": "Query flag."
          },
          "transaction_date": {
            "type": "string",
            "description": "Transaction date.",
            "format": "date-time",
            "readOnly": true
          },
          "posted_date": {
            "type": "string",
            "description": "Posted date.",
            "format": "date-time",
            "readOnly": true
          },
          "due_date": {
            "type": "string",
            "description": "Due date.",
            "format": "date-time",
            "readOnly": true
          },
          "document_goods_value": {
            "type": "number",
            "description": "Value of the goods.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "document_gross_value": {
            "type": "number",
            "description": "Gross value.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "document_tax_value": {
            "type": "number",
            "description": "Tax value.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "document_discount_value": {
            "type": "number",
            "description": "Tax discount value.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "discount_percent": {
            "type": "number",
            "description": "Percentage discount.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "document_tax_discount_value": {
            "type": "number",
            "description": "Tax discount value.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "document_allocated_value": {
            "type": "number",
            "description": "Allocated value.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "document_outstanding_value": {
            "type": "number",
            "description": "Outstanding value.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_goods_value": {
            "type": "number",
            "description": "Value of the goods in base currency.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_gross_value": {
            "type": "number",
            "description": "Gross value in base currency.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_tax_value": {
            "type": "number",
            "description": "Tax value in base currency.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_discount_value": {
            "type": "number",
            "description": "Discount value in base currency.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_tax_discount_value": {
            "type": "number",
            "description": "Tax discount value in base currency.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_allocated_value": {
            "type": "number",
            "description": "Allocated value in base currency.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "control_value_in_base_currency": {
            "type": "number",
            "description": "Control value in base currency.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "exchange_rate": {
            "type": "number",
            "description": "Exchange rate used for transaction.",
            "format": "decimal 6dp",
            "readOnly": true
          },
          "settled_immediately": {
            "type": "boolean",
            "description": "Immediately settled.",
            "readOnly": true
          },
          "vat_adjustment_doc_expected": {
            "type": "boolean",
            "description": "Whether a further VAT adjustment document is expected.",
            "readOnly": true
          },
          "discount_days": {
            "type": "integer",
            "description": "Number of days discount valid.",
            "format": "int16",
            "readOnly": true
          },
          "urn": {
            "type": "integer",
            "description": "Unique reference number.",
            "format": "int64",
            "readOnly": true
          },
          "user_name": {
            "maxLength": 20,
            "type": "string",
            "description": "User who entered the transaction.",
            "readOnly": true
          },
          "tax_analysis_items": {
            "type": "array",
            "description": "Tax analysis items.",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Tax code Id",
                  "format": "int64",
                  "readOnly": true
                },
                "code": {
                  "type": "integer",
                  "description": "Tax code.",
                  "format": "int16",
                  "readOnly": true
                },
                "name": {
                  "maxLength": 60,
                  "type": "string",
                  "description": "Tax code name.",
                  "readOnly": true
                },
                "entry_type": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "The type of the tax code entry.",
                  "readOnly": true
                },
                "goods_amount": {
                  "type": "number",
                  "description": "Goods amount.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "tax_amount": {
                  "type": "number",
                  "description": "Tax amount.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "tax_discount_amount": {
                  "type": "number",
                  "description": "Tax discount amount.",
                  "format": "decimal 2dp",
                  "readOnly": true
                }
              }
            }
          },
          "nominal_analysis_items": {
            "type": "array",
            "description": "Nominal analysis items.",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "maxLength": 8,
                  "type": "string",
                  "description": "Nominal account code.",
                  "readOnly": true
                },
                "cost_centre": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Cost centre.",
                  "readOnly": true
                },
                "department": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Department.",
                  "readOnly": true
                },
                "name": {
                  "maxLength": 60,
                  "type": "string",
                  "description": "Nominal name.",
                  "readOnly": true
                },
                "location": {
                  "maxLength": 30,
                  "type": "string",
                  "description": "Location of the associated nominal transaction.",
                  "readOnly": true
                },
                "reference": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "Reference.",
                  "readOnly": true
                },
                "narrative": {
                  "maxLength": 6000,
                  "type": "string",
                  "description": "Narrative.",
                  "readOnly": true
                },
                "value": {
                  "type": "number",
                  "description": "Goods value.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "base_value": {
                  "type": "number",
                  "description": "Value in base currency.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "transaction_analysis_code": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "The transaction analysis code used on the nominal analysis item. This requires that the ledger settings allow additional analysis and that the code is valid",
                  "readOnly": true
                },
                "source": {
                  "maxLength": 30,
                  "type": "string",
                  "description": "Source ledger",
                  "readOnly": true
                }
              }
            }
          },
          "bank_items": {
            "type": "array",
            "description": "Bank items.",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "bank_code": {
                  "type": "string",
                  "description": "Bank account code.",
                  "readOnly": true
                },
                "name": {
                  "maxLength": 60,
                  "type": "string",
                  "description": "Account name.",
                  "readOnly": true
                },
                "bank_entry_type": {
                  "maxLength": 30,
                  "type": "string",
                  "description": "Bank entry type.",
                  "readOnly": true
                },
                "reference": {
                  "maxLength": 30,
                  "type": "string",
                  "description": "Reference.",
                  "readOnly": true
                },
                "cheque_value": {
                  "type": "number",
                  "description": "Value of item.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "statement_date": {
                  "type": "string",
                  "description": "Statement Date.",
                  "format": "date-time",
                  "readOnly": true
                },
                "statement_page_number": {
                  "type": "integer",
                  "description": "Page of statement item appears on.",
                  "format": "int32",
                  "readOnly": true
                },
                "urn": {
                  "type": "integer",
                  "description": "Unique reference number.",
                  "format": "int64",
                  "readOnly": true
                }
              }
            }
          },
          "allocation_session_items": {
            "type": "array",
            "description": "Allocation session items.",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "user_name": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "Name of user that entered item.",
                  "readOnly": true
                },
                "ledger_type": {
                  "maxLength": 30,
                  "type": "string",
                  "description": "Ledger type",
                  "readOnly": true
                },
                "urn": {
                  "type": "integer",
                  "description": "Unique reference number.",
                  "format": "int64",
                  "readOnly": true
                },
                "allocation_date": {
                  "type": "string",
                  "description": "Date of allocation.",
                  "format": "date-time",
                  "readOnly": true
                },
                "trader_transaction_type": {
                  "maxLength": 30,
                  "type": "string",
                  "description": "Transaction type",
                  "readOnly": true
                },
                "reference": {
                  "maxLength": 30,
                  "type": "string",
                  "description": "Reference.",
                  "readOnly": true
                },
                "value": {
                  "type": "number",
                  "description": "Value of allocation item.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "allocation_value": {
                  "type": "number",
                  "description": "Value of allocation.",
                  "format": "decimal 2dp",
                  "readOnly": true
                }
              }
            }
          },
          "allocation_history_items": {
            "type": "array",
            "description": "Allocation history items.",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Allocation history record Id.",
                  "format": "int64",
                  "readOnly": true
                },
                "trading_revaluation_allocation_entry_type": {
                  "type": "string",
                  "description": "Revaluation allocation entry type.",
                  "readOnly": true
                },
                "entry_date": {
                  "type": "string",
                  "description": "Date of entry.",
                  "format": "date-time",
                  "readOnly": true
                },
                "allocation_value": {
                  "type": "number",
                  "description": "Value of allocation.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "nominal_updated": {
                  "type": "boolean",
                  "description": "If nominal has been updated.",
                  "readOnly": true
                },
                "exchange_rate": {
                  "type": "number",
                  "description": "Exchange rate.",
                  "format": "decimal 6dp",
                  "readOnly": true
                },
                "exchange_gain_loss": {
                  "type": "number",
                  "description": "Amount gained or lost since allocation.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "date_time_created": {
                  "type": "string",
                  "description": "The date and time this entity was created (UTC).",
                  "format": "date-time",
                  "readOnly": true
                },
                "date_time_updated": {
                  "type": "string",
                  "description": "The date and time this entity was last updated (UTC).",
                  "format": "date-time",
                  "readOnly": true
                }
              }
            }
          },
          "supplier": {
            "type": "object",
            "properties": {},
            "description": "Supplier the transaction relates to.",
            "readOnly": true
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Purchase posted transactions are created when transactions, such as purchases made, refunds or credit notes, are posted against the Purchase Ledger.<br /><br />It is not possible to use this API resource to create posted transactions. To post a transaction, the necessary API resource must be invoked."
      },
      "purchase_transaction_view": {
        "type": "object",
        "properties": {
          "posted_supplier_transaction_id": {
            "type": "integer",
            "description": "Id of the transaction.",
            "format": "int64",
            "readOnly": true
          },
          "transaction_type": {
            "maxLength": 30,
            "type": "string",
            "description": "Transaction type."
          },
          "transaction_date": {
            "type": "string",
            "description": "The date of the transaction.",
            "format": "date-time"
          },
          "posted_date": {
            "type": "string",
            "description": "The date the transaction was posted.",
            "format": "date-time"
          },
          "due_date": {
            "type": "string",
            "description": "The due date of the transaction.",
            "format": "date-time"
          },
          "discount_days": {
            "type": "integer",
            "description": "Days discount valid.",
            "format": "int16"
          },
          "reference": {
            "maxLength": 20,
            "type": "string",
            "description": "The reference of the transaction."
          },
          "second_reference": {
            "maxLength": 20,
            "type": "string",
            "description": "The second reference of the transaction."
          },
          "query": {
            "maxLength": 1,
            "type": "string",
            "description": "Query."
          },
          "status": {
            "maxLength": 20,
            "type": "string",
            "description": "Status."
          },
          "user_name": {
            "maxLength": 20,
            "type": "string",
            "description": "User that posted the transaction."
          },
          "ledger_type": {
            "maxLength": 30,
            "type": "string",
            "description": "Ledger type."
          },
          "urn": {
            "type": "integer",
            "description": "Unique reference number.",
            "format": "int64"
          },
          "exchange_rate": {
            "type": "number",
            "description": "Exchange Rate.",
            "format": "decimal 6dp"
          },
          "settled_immediately": {
            "type": "boolean",
            "description": "Immediately settled."
          },
          "vat_adjustment_doc_expected": {
            "type": "boolean",
            "description": "Whether a further VAT adjustment document is expected."
          },
          "base_goods_value": {
            "type": "number",
            "description": "Goods value in base currency.",
            "format": "decimal 2dp"
          },
          "base_gross_value": {
            "type": "number",
            "description": "Gross value in base currency.",
            "format": "decimal 2dp"
          },
          "base_discount_value": {
            "type": "number",
            "description": "Discount value in base currency.",
            "format": "decimal 2dp"
          },
          "base_tax_value": {
            "type": "number",
            "description": "Tax value in base currency.",
            "format": "decimal 2dp"
          },
          "base_tax_discount_value": {
            "type": "number",
            "description": "Tax discount value in base currency.",
            "format": "decimal 2dp"
          },
          "base_allocated_value": {
            "type": "number",
            "description": "Allocated value in base currency.",
            "format": "decimal 2dp"
          },
          "base_outstanding_value": {
            "type": "number",
            "description": "Outstanding value in base currency.",
            "format": "decimal 2dp"
          },
          "document_goods_value": {
            "type": "number",
            "description": "Goods value.",
            "format": "decimal 2dp"
          },
          "document_gross_value": {
            "type": "number",
            "description": "Gross value.",
            "format": "decimal 2dp"
          },
          "document_discount_value": {
            "type": "number",
            "description": "Discount value.",
            "format": "decimal 2dp"
          },
          "document_tax_value": {
            "type": "number",
            "description": "Tax value.",
            "format": "decimal 2dp"
          },
          "document_tax_discount_value": {
            "type": "number",
            "description": "Tax discount value.",
            "format": "decimal 2dp"
          },
          "document_allocated_value": {
            "type": "number",
            "description": "Allocated value.",
            "format": "decimal 2dp"
          },
          "document_outstanding_value": {
            "type": "number",
            "description": "Outstanding value.",
            "format": "decimal 2dp"
          },
          "supplier_id": {
            "type": "integer",
            "description": "Supplier Id.",
            "format": "int64"
          },
          "supplier_reference": {
            "maxLength": 8,
            "type": "string",
            "description": "Supplier account code."
          },
          "supplier_name": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier account name."
          },
          "currency_name": {
            "maxLength": 30,
            "type": "string",
            "description": "Currency."
          },
          "currency_symbol": {
            "maxLength": 4,
            "type": "string",
            "description": "Currency symbol."
          },
          "transaction_date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "When making larger API requests for transaction information from the Purchase ledger, the Purchase Transaction Views resource can be a faster alternative to the 'Purchase Posted Transactions' resource.<br /><br />The Purchase Transaction Views resource also returns a wider breadth of information than the Purchase Posted Transactions. By using the Purchase Transaction Views resource, the quantity of API requests can be reduced, when returning the same information from multiple API resources. The default sort (orderby) field is by 'posted_supplier_transaction_id' ascending."
      },
      "purchase_transaction_enquiry_view": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id.",
            "format": "int64",
            "readOnly": true
          },
          "supplier_id": {
            "type": "integer",
            "description": "Supplier Id.",
            "format": "int64",
            "readOnly": true
          },
          "trader_transaction_type": {
            "maxLength": 30,
            "type": "string",
            "description": "Transaction type.",
            "readOnly": true
          },
          "reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Transaction reference.",
            "readOnly": true
          },
          "second_reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Second reference.",
            "readOnly": true
          },
          "queried": {
            "maxLength": 1,
            "type": "string",
            "description": "Query flag.",
            "readOnly": true
          },
          "transaction_date": {
            "type": "string",
            "description": "Transaction date.",
            "format": "date-time",
            "readOnly": true
          },
          "posted_date": {
            "type": "string",
            "description": "Posted date.",
            "format": "date-time",
            "readOnly": true
          },
          "due_date": {
            "type": "string",
            "description": "Due date.",
            "format": "date-time",
            "readOnly": true
          },
          "discount_days": {
            "type": "string",
            "description": "Discount days.",
            "format": "int16",
            "readOnly": true
          },
          "discount_due_date": {
            "type": "string",
            "description": "Due date.",
            "format": "date-time",
            "readOnly": true
          },
          "document_gross_value": {
            "type": "number",
            "description": "Gross value.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "document_discount_value": {
            "type": "number",
            "description": "Document discount value.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "document_discounted_value": {
            "type": "number",
            "description": "Document value after discounts.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "document_tax_discount_value": {
            "type": "number",
            "description": "Tax discount value.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "document_allocated_value": {
            "type": "number",
            "description": "Allocated value.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "document_outstanding_value": {
            "type": "number",
            "description": "Outstanding value.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "allocation_status": {
            "maxLength": 50,
            "type": "string",
            "description": "Document's allocation status type.",
            "readOnly": true
          },
          "memo_note_status": {
            "maxLength": 1,
            "type": "string",
            "description": "Memo status.",
            "readOnly": true
          },
          "exchange_rate": {
            "type": "number",
            "description": "Exchange rate used for transaction.",
            "format": "decimal 6dp",
            "readOnly": true
          },
          "settled_immediately": {
            "type": "boolean",
            "description": "Immediately settled.",
            "readOnly": true
          },
          "vat_adjustment_doc_expected": {
            "type": "boolean",
            "description": "Whether a further VAT adjustment document is expected.",
            "readOnly": true
          },
          "source": {
            "maxLength": 30,
            "type": "string",
            "description": "Ledger type.",
            "readOnly": true
          },
          "urn": {
            "type": "integer",
            "description": "Unique reference number.",
            "format": "int64",
            "readOnly": true
          },
          "user_name": {
            "maxLength": 20,
            "type": "string",
            "description": "User who entered the transaction.",
            "readOnly": true
          },
          "has_documents": {
            "type": "boolean",
            "description": "Indicates if there are any documents attached to the transaction.",
            "readOnly": true
          },
          "allocation_history_items": {
            "type": "array",
            "description": "Allocation history items.",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Allocation history record Id.",
                  "format": "int64",
                  "readOnly": true
                },
                "trading_revaluation_allocation_entry_type": {
                  "type": "string",
                  "description": "Revaluation allocation entry type.",
                  "readOnly": true
                },
                "entry_date": {
                  "type": "string",
                  "description": "Date of entry.",
                  "format": "date-time",
                  "readOnly": true
                },
                "allocation_value": {
                  "type": "number",
                  "description": "Value of allocation.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "nominal_updated": {
                  "type": "boolean",
                  "description": "If nominal has been updated.",
                  "readOnly": true
                },
                "exchange_rate": {
                  "type": "number",
                  "description": "Exchange rate.",
                  "format": "decimal 6dp",
                  "readOnly": true
                },
                "exchange_gain_loss": {
                  "type": "number",
                  "description": "Amount gained or lost since allocation.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "date_time_created": {
                  "type": "string",
                  "description": "The date and time this entity was created (UTC).",
                  "format": "date-time",
                  "readOnly": true
                },
                "date_time_updated": {
                  "type": "string",
                  "description": "The date and time this entity was last updated (UTC).",
                  "format": "date-time",
                  "readOnly": true
                }
              }
            }
          },
          "allocation_session_items": {
            "type": "array",
            "description": "Allocation session items.",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "user_name": {
                  "type": "string",
                  "description": "Name of user that entered item.",
                  "readOnly": true
                },
                "ledger_type": {
                  "maxLength": 30,
                  "type": "string",
                  "description": "Ledger type",
                  "readOnly": true
                },
                "urn": {
                  "type": "integer",
                  "description": "Unique reference number.",
                  "format": "int64",
                  "readOnly": true
                },
                "allocation_date": {
                  "type": "string",
                  "description": "Date of allocation.",
                  "format": "date-time",
                  "readOnly": true
                },
                "trader_transaction_type": {
                  "maxLength": 30,
                  "type": "string",
                  "description": "Transaction type",
                  "readOnly": true
                },
                "reference": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "Reference.",
                  "readOnly": true
                },
                "value": {
                  "type": "number",
                  "description": "Value of allocation item.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "allocation_value": {
                  "type": "number",
                  "description": "Value of allocation.",
                  "format": "decimal 2dp",
                  "readOnly": true
                }
              }
            }
          },
          "bank_items": {
            "type": "array",
            "description": "Bank items.",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "bank_code": {
                  "type": "string",
                  "description": "Bank account code.",
                  "readOnly": true
                },
                "name": {
                  "maxLength": 60,
                  "type": "string",
                  "description": "Account name.",
                  "readOnly": true
                },
                "bank_entry_type": {
                  "maxLength": 30,
                  "type": "string",
                  "description": "Bank entry type.",
                  "readOnly": true
                },
                "reference": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "Reference.",
                  "readOnly": true
                },
                "cheque_value": {
                  "type": "number",
                  "description": "Value of item.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "statement_date": {
                  "type": "string",
                  "description": "Statement Date.",
                  "format": "date-time",
                  "readOnly": true
                },
                "statement_page_number": {
                  "type": "integer",
                  "description": "Page of statement item appears on.",
                  "format": "int32",
                  "readOnly": true
                },
                "urn": {
                  "type": "integer",
                  "description": "Unique reference number.",
                  "format": "int32",
                  "readOnly": true
                }
              }
            }
          },
          "memos": {
            "type": "array",
            "description": "Memos.",
            "items": {
              "$ref": "#/components/schemas/purchase_posted_transaction_memo"
            }
          },
          "nominal_analysis_items": {
            "type": "array",
            "description": "Nominal analysis items.",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "maxLength": 8,
                  "type": "string",
                  "description": "Nominal account code.",
                  "readOnly": true
                },
                "cost_centre": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Cost centre.",
                  "readOnly": true
                },
                "department": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Department.",
                  "readOnly": true
                },
                "name": {
                  "maxLength": 60,
                  "type": "string",
                  "description": "Nominal name.",
                  "readOnly": true
                },
                "location": {
                  "maxLength": 30,
                  "type": "string",
                  "description": "Location of the associated nominal transaction.",
                  "readOnly": true
                },
                "reference": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "Reference.",
                  "readOnly": true
                },
                "narrative": {
                  "maxLength": 6000,
                  "type": "string",
                  "description": "Narrative.",
                  "readOnly": true
                },
                "value": {
                  "type": "number",
                  "description": "Goods value.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "base_value": {
                  "type": "number",
                  "description": "Value in base currency.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "transaction_analysis_code": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "The transaction analysis code used on the nominal analysis item. This requires that the ledger settings allow additional analysis and that the code is valid",
                  "readOnly": true
                },
                "source": {
                  "maxLength": 30,
                  "type": "string",
                  "description": "Source ledger",
                  "readOnly": true
                }
              }
            }
          },
          "tax_analysis_items": {
            "type": "array",
            "description": "Tax analysis items.",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Tax code Id",
                  "format": "int64",
                  "readOnly": true
                },
                "code": {
                  "type": "integer",
                  "description": "Tax code.",
                  "format": "int16",
                  "readOnly": true
                },
                "name": {
                  "maxLength": 60,
                  "type": "string",
                  "description": "Tax code name.",
                  "readOnly": true
                },
                "entry_type": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "The type of the tax code entry.",
                  "readOnly": true
                },
                "goods_amount": {
                  "type": "number",
                  "description": "Goods amount.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "tax_amount": {
                  "type": "number",
                  "description": "Tax amount.",
                  "format": "decimal 2dp",
                  "readOnly": true
                },
                "tax_discount_amount": {
                  "type": "number",
                  "description": "Tax discount amount.",
                  "format": "decimal 2dp",
                  "readOnly": true
                }
              }
            }
          },
          "supplier": {
            "type": "object",
            "properties": {},
            "description": "Supplier.",
            "readOnly": true
          }
        },
        "description": "Purchase transaction enquiry views represent transactions posted against the Purchase Ledger, such as purchases made, and any refunds or credit notes received. The $count includes memos and documents associated with the transaction."
      },
      "purchase_posted_transaction_memo": {
        "required": [
          "note",
          "posted_supplier_transaction_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Purchase posted transaction memo record Id.",
            "format": "int64",
            "readOnly": true
          },
          "posted_supplier_transaction_id": {
            "type": "integer",
            "description": "Purchase posted transaction record Id.",
            "format": "int64"
          },
          "note": {
            "maxLength": 1000,
            "type": "string",
            "description": "The memo text."
          },
          "is_active": {
            "type": "boolean",
            "description": "True if memo status is active, false if it is inactive."
          },
          "created_by": {
            "maxLength": 20,
            "type": "string",
            "description": "The user that created the memo.",
            "readOnly": true
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Memos are comments that are made about a purchase posted transaction.<br/><br/>Multiple memos can be added to each purchase posted transaction. The user that created the memo, the date it was created and last updated date and time are also recorded.<br/><br/>A user can also specify if a memo is currently 'Active' or 'Inactive'. This allows a user to keep a record of previous memos without deleting them."
      },
      "purchase_aged_creditor_view": {
        "type": "object",
        "properties": {
          "supplier_id": {
            "type": "integer",
            "description": "Supplier Id.",
            "format": "int64",
            "readOnly": true
          },
          "posted_supplier_transaction_id": {
            "type": "integer",
            "description": "Posted supplier transaction record Id.",
            "format": "int64",
            "readOnly": true
          },
          "doc_past": {
            "type": "number",
            "description": "Value in document currency for past periods.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "doc_future": {
            "type": "number",
            "description": "Value in document currency for future periods.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "doc_current": {
            "type": "number",
            "description": "Value in document currency for the current period.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "doc_period_1": {
            "type": "number",
            "description": "Value in document currency for ageing period 1.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "doc_period_2": {
            "type": "number",
            "description": "Value in document currency for ageing period 2.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "doc_period_3": {
            "type": "number",
            "description": "Value in document currency for ageing period 3.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "doc_period_4": {
            "type": "number",
            "description": "Value in document currency for ageing period 4.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "doc_period_5": {
            "type": "number",
            "description": "Value in document currency for ageing period 5.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "doc_period_6": {
            "type": "number",
            "description": "Value in document currency for ageing period 6.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "doc_period_7": {
            "type": "number",
            "description": "Value in document currency for ageing period 7.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "doc_period_8": {
            "type": "number",
            "description": "Value in document currency for ageing period 8.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_past": {
            "type": "number",
            "description": "Value in base currency for past periods.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_future": {
            "type": "number",
            "description": "Value in base currency for furure periods.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_current": {
            "type": "number",
            "description": "Value in base currency for the current period.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_period_1": {
            "type": "number",
            "description": "Value in base currency for ageing period 1.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_period_2": {
            "type": "number",
            "description": "Value in base currency for ageing period 2.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_period_3": {
            "type": "number",
            "description": "Value in base currency for ageing period 3.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_period_4": {
            "type": "number",
            "description": "Value in base currency for ageing period 4.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_period_5": {
            "type": "number",
            "description": "Value in base currency for ageing period 5.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_period_6": {
            "type": "number",
            "description": "Value in base currency for ageing period 6.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_period_7": {
            "type": "number",
            "description": "Value in base currency for ageing period 7.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "base_period_8": {
            "type": "number",
            "description": "Value in base currency for ageing period 8.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "aged_period_1": {
            "type": "string",
            "description": "The name of ageing period 1.",
            "readOnly": true
          },
          "aged_period_2": {
            "type": "string",
            "description": "The name of ageing period 2.",
            "readOnly": true
          },
          "aged_period_3": {
            "type": "string",
            "description": "The name of ageing period 3.",
            "readOnly": true
          },
          "aged_period_4": {
            "type": "string",
            "description": "The name of ageing period 4.",
            "readOnly": true
          },
          "aged_period_5": {
            "type": "string",
            "description": "The name of ageing period 5.",
            "readOnly": true
          },
          "aged_period_6": {
            "type": "string",
            "description": "The name of ageing period 6.",
            "readOnly": true
          },
          "aged_period_7": {
            "type": "string",
            "description": "The name of ageing period 7.",
            "readOnly": true
          },
          "aged_period_8": {
            "type": "string",
            "description": "The name of ageing period 8.",
            "readOnly": true
          }
        },
        "description": "Gets Purchase aged creditor views. Specifying a query parameter of '$ageingdatetype' will produce values for the specified ageing type. Acceptable values are 'transactiondate', 'duedate', and 'calendarmonth', to calculate aged debt by Transaction Date, Due Date, or by calendar months."
      },
      "supplier": {
        "required": [
          "name",
          "reference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Supplier unique Id.",
            "format": "int64",
            "readOnly": true
          },
          "reference": {
            "maxLength": 8,
            "type": "string",
            "description": "Supplier account reference. Note: Not required if supplier reference is set to &quot;generate automatically&quot; inside the Sage 200 application settings."
          },
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier name."
          },
          "short_name": {
            "maxLength": 8,
            "type": "string",
            "description": "Supplier short name."
          },
          "balance": {
            "type": "number",
            "description": "Supplier account balance.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "on_hold": {
            "type": "boolean",
            "description": "True if supplier account is on hold, else False.",
            "default": false
          },
          "status_reason": {
            "maxLength": 256,
            "type": "string",
            "description": "Reason for change in account status."
          },
          "account_status_type": {
            "maxLength": 20,
            "type": "string",
            "description": "The status of the supplier account (Sage 200 Standard and versions of Professional released after July 2017). For example, this can either be 'Active' or 'Hidden'.",
            "default": "AccountStatusActive"
          },
          "currency_id": {
            "type": "integer",
            "description": "Currency record Id. This defaults to the base currency Id.",
            "format": "int64"
          },
          "exchange_rate_type": {
            "maxLength": 20,
            "type": "string",
            "description": "The type of exchange rate used on the supplier account.",
            "default": "ExchangeRateSingle"
          },
          "telephone_country_code": {
            "maxLength": 5,
            "type": "string",
            "description": "Telephone country code."
          },
          "telephone_area_code": {
            "maxLength": 20,
            "type": "string",
            "description": "Telephone area code."
          },
          "telephone_subscriber_number": {
            "maxLength": 200,
            "type": "string",
            "description": "Telephone subscriber number."
          },
          "fax_country_code": {
            "maxLength": 5,
            "type": "string",
            "description": "Fax country code."
          },
          "fax_area_code": {
            "maxLength": 20,
            "type": "string",
            "description": "Fax area code."
          },
          "fax_subscriber_number": {
            "maxLength": 200,
            "type": "string",
            "description": "Fax subscriber number."
          },
          "website": {
            "maxLength": 200,
            "type": "string",
            "description": "Website address."
          },
          "credit_limit": {
            "type": "number",
            "description": "Credit limit for the supplier.",
            "format": "decimal 2dp"
          },
          "country_code_id": {
            "type": "integer",
            "description": "Country code record Id.",
            "format": "int64"
          },
          "default_tax_code_id": {
            "type": "integer",
            "description": "Default tax code record Id. This defaults to the configured tax code for the supplier.",
            "format": "int64"
          },
          "vat_number": {
            "maxLength": 30,
            "type": "string",
            "description": "VAT registration number."
          },
          "account_type": {
            "maxLength": 20,
            "type": "string",
            "description": "The account type is used to decide how transactions are stored on individual accounts.",
            "default": "TradingAccountTypeOpenItem"
          },
          "early_settlement_discount_percent": {
            "type": "number",
            "description": "The discount percentage offered by suppliers.",
            "format": "decimal 2dp"
          },
          "early_settlement_discount_days": {
            "type": "integer",
            "description": "The number of days an invoice must be paid within to qualify for the discount.",
            "format": "int16"
          },
          "payment_terms_days": {
            "type": "integer",
            "description": "The number of days which, together with the payment terms basis, determines the due date for invoices.",
            "format": "int16"
          },
          "payment_terms_basis": {
            "maxLength": 20,
            "type": "string",
            "description": "The payment terms which, together with the payment terms (days), determines the due date of invoices."
          },
          "payment_group_id": {
            "type": "integer",
            "description": "Payment group record Id.",
            "format": "int64"
          },
          "factor_house_id": {
            "type": "integer",
            "description": "Factor house record Id.",
            "format": "int64"
          },
          "credit_bureau_id": {
            "type": "integer",
            "description": "Credit bureau record Id.",
            "format": "int64"
          },
          "credit_position_id": {
            "type": "integer",
            "description": "Credit position record Id.",
            "format": "int64"
          },
          "trading_terms": {
            "maxLength": 30,
            "type": "string",
            "description": "Trading terms."
          },
          "credit_reference": {
            "maxLength": 60,
            "type": "string",
            "description": "Credit reference."
          },
          "account_opened": {
            "type": "string",
            "description": "The date the account was opened.",
            "format": "date-time"
          },
          "last_credit_review": {
            "type": "string",
            "description": "The date of the last credit review.",
            "format": "date-time"
          },
          "next_credit_review": {
            "type": "string",
            "description": "The date of the next credit review.",
            "format": "date-time"
          },
          "application_date": {
            "type": "string",
            "description": "The application date.",
            "format": "date-time"
          },
          "date_received": {
            "type": "string",
            "description": "The date received.",
            "format": "date-time"
          },
          "terms_agreed": {
            "type": "boolean",
            "description": "True if supplier terms have been agreed else False."
          },
          "value_of_current_orders_in_pop": {
            "type": "number",
            "description": "Value of current purchase orders for this supplier.",
            "format": "decimal 2dp",
            "readOnly": true
          },
          "order_priority": {
            "maxLength": 1,
            "type": "string",
            "description": "Order priority."
          },
          "months_to_keep_transactions": {
            "type": "integer",
            "description": "The number of months to keep transactions.",
            "format": "int16"
          },
          "default_nominal_code_id": {
            "type": "integer",
            "description": "Default nominal code record Id.",
            "format": "int64",
            "readOnly": true
          },
          "default_nominal_code_reference": {
            "maxLength": 8,
            "type": "string",
            "description": "Default nominal code reference."
          },
          "default_nominal_code_cost_centre": {
            "maxLength": 3,
            "type": "string",
            "description": "Default nominal code cost centre."
          },
          "default_nominal_code_department": {
            "maxLength": 3,
            "type": "string",
            "description": "Default nominal code department."
          },
          "is_supplier_payments_enabled": {
            "type": "boolean",
            "description": "Whether supplier payments is enabled for this account.",
            "readOnly": true,
            "default": false
          },
          "analysis_code_1": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 1."
          },
          "analysis_code_2": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 2."
          },
          "analysis_code_3": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 3."
          },
          "analysis_code_4": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 4."
          },
          "analysis_code_5": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 5."
          },
          "analysis_code_6": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 6."
          },
          "analysis_code_7": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 7."
          },
          "analysis_code_8": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 8."
          },
          "analysis_code_9": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 9."
          },
          "analysis_code_10": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 10."
          },
          "analysis_code_11": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 11."
          },
          "analysis_code_12": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 12."
          },
          "analysis_code_13": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 13."
          },
          "analysis_code_14": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 14."
          },
          "analysis_code_15": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 15."
          },
          "analysis_code_16": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 16."
          },
          "analysis_code_17": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 17."
          },
          "analysis_code_18": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 18."
          },
          "analysis_code_19": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 19."
          },
          "analysis_code_20": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 20."
          },
          "spare_text_1": {
            "maxLength": 100,
            "type": "string",
            "description": "Spare text 1."
          },
          "spare_text_2": {
            "maxLength": 100,
            "type": "string",
            "description": "Spare text 2."
          },
          "spare_text_3": {
            "maxLength": 100,
            "type": "string",
            "description": "Spare text 3."
          },
          "spare_text_4": {
            "maxLength": 100,
            "type": "string",
            "description": "Spare text 4."
          },
          "spare_text_5": {
            "maxLength": 100,
            "type": "string",
            "description": "Spare text 5."
          },
          "spare_text_6": {
            "maxLength": 100,
            "type": "string",
            "description": "Spare text 6."
          },
          "spare_text_7": {
            "maxLength": 100,
            "type": "string",
            "description": "Spare text 7."
          },
          "spare_text_8": {
            "maxLength": 100,
            "type": "string",
            "description": "Spare text 8."
          },
          "spare_text_9": {
            "maxLength": 100,
            "type": "string",
            "description": "Spare text 9."
          },
          "spare_text_10": {
            "maxLength": 100,
            "type": "string",
            "description": "Spare text 10."
          },
          "spare_number_1": {
            "type": "number",
            "description": "Spare number 1.",
            "format": "decimal 5dp"
          },
          "spare_number_2": {
            "type": "number",
            "description": "Spare number 2.",
            "format": "decimal 5dp"
          },
          "spare_number_3": {
            "type": "number",
            "description": "Spare number 3.",
            "format": "decimal 5dp"
          },
          "spare_number_4": {
            "type": "number",
            "description": "Spare number 4.",
            "format": "decimal 5dp"
          },
          "spare_number_5": {
            "type": "number",
            "description": "Spare number 5.",
            "format": "decimal 5dp"
          },
          "spare_number_6": {
            "type": "number",
            "description": "Spare number 6.",
            "format": "decimal 5dp"
          },
          "spare_number_7": {
            "type": "number",
            "description": "Spare number 7.",
            "format": "decimal 5dp"
          },
          "spare_number_8": {
            "type": "number",
            "description": "Spare number 8.",
            "format": "decimal 5dp"
          },
          "spare_number_9": {
            "type": "number",
            "description": "Spare number 9.",
            "format": "decimal 5dp"
          },
          "spare_number_10": {
            "type": "number",
            "description": "Spare number 10.",
            "format": "decimal 5dp"
          },
          "spare_date_1": {
            "type": "string",
            "description": "Spare date 1 (UTC).",
            "format": "date-time"
          },
          "spare_date_2": {
            "type": "string",
            "description": "Spare date 2 (UTC).",
            "format": "date-time"
          },
          "spare_date_3": {
            "type": "string",
            "description": "Spare date 3 (UTC).",
            "format": "date-time"
          },
          "spare_date_4": {
            "type": "string",
            "description": "Spare date 4 (UTC).",
            "format": "date-time"
          },
          "spare_date_5": {
            "type": "string",
            "description": "Spare date 5 (UTC).",
            "format": "date-time"
          },
          "spare_bool_1": {
            "type": "boolean",
            "description": "Spare bool 1.",
            "default": false
          },
          "spare_bool_2": {
            "type": "boolean",
            "description": "Spare bool 2.",
            "default": false
          },
          "spare_bool_3": {
            "type": "boolean",
            "description": "Spare bool 3.",
            "default": false
          },
          "spare_bool_4": {
            "type": "boolean",
            "description": "Spare bool 4.",
            "default": false
          },
          "spare_bool_5": {
            "type": "boolean",
            "description": "Spare bool 5.",
            "default": false
          },
          "bank": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Supplier bank Id.",
                "format": "int64",
                "readOnly": true
              },
              "supplier_id": {
                "type": "integer",
                "description": "Supplier Id.",
                "format": "int64",
                "readOnly": true
              },
              "sort_code": {
                "maxLength": 6,
                "type": "string",
                "description": "Bank sort code."
              },
              "account_number": {
                "maxLength": 20,
                "type": "string",
                "description": "Bank account number."
              },
              "account_name": {
                "maxLength": 60,
                "type": "string",
                "description": "Bank account name."
              },
              "bank_payment_reference": {
                "maxLength": 60,
                "type": "string",
                "description": "Bank payment reference."
              },
              "iban_number": {
                "maxLength": 40,
                "type": "string",
                "description": "Bank IBAN number."
              },
              "bic_number": {
                "maxLength": 11,
                "type": "string",
                "description": "Bank BIC number."
              },
              "roll_number": {
                "maxLength": 30,
                "type": "string",
                "description": "Bank roll number."
              },
              "bacs_reference": {
                "maxLength": 60,
                "type": "string",
                "description": "Bank BACS reference."
              },
              "additional_reference": {
                "maxLength": 255,
                "type": "string",
                "description": "Additional reference."
              },
              "non_uk_sort_code": {
                "maxLength": 20,
                "type": "string",
                "description": "Bank non UK sort code."
              },
              "national_bank_identifier": {
                "maxLength": 50,
                "type": "string",
                "description": "National bank identifier."
              },
              "date_time_created": {
                "type": "string",
                "description": "The date and time this entity was created (UTC).",
                "format": "date-time",
                "readOnly": true
              },
              "date_time_updated": {
                "type": "string",
                "description": "The date and time this entity was last updated (UTC).",
                "format": "date-time",
                "readOnly": true
              }
            },
            "description": "Supplier bank account."
          },
          "country_code": {
            "type": "object",
            "properties": {},
            "description": "The suppliers country code.",
            "readOnly": true
          },
          "credit_bureau": {
            "type": "object",
            "properties": {},
            "description": "The suppliers credit bureau.",
            "readOnly": true
          },
          "credit_memo_note": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Memo note Id.",
                "format": "int64",
                "readOnly": true
              },
              "note": {
                "maxLength": 1000,
                "type": "string",
                "description": "Note."
              },
              "created_by": {
                "maxLength": 50,
                "type": "string",
                "description": "Which user created the note.",
                "readOnly": true
              },
              "date_time_created": {
                "type": "string",
                "description": "The date and time this entity was created (UTC).",
                "format": "date-time",
                "readOnly": true
              },
              "date_time_updated": {
                "type": "string",
                "description": "The date and time this entity was last updated (UTC).",
                "format": "date-time",
                "readOnly": true
              }
            },
            "description": "The suppliers credit memo note."
          },
          "credit_position": {
            "type": "object",
            "properties": {},
            "description": "The suppliers credit position.",
            "readOnly": true
          },
          "currency": {
            "type": "object",
            "properties": {},
            "description": "The suppliers currency.",
            "readOnly": true
          },
          "default_nominal_code": {
            "type": "object",
            "properties": {},
            "description": "The default nominal code to be used in transactions for the supplier.",
            "readOnly": true
          },
          "default_tax_code": {
            "type": "object",
            "properties": {},
            "description": "The default tax code to be used in transactions for the supplier.",
            "readOnly": true
          },
          "factor_house": {
            "type": "object",
            "properties": {},
            "description": "The suppliers factor house.",
            "readOnly": true
          },
          "main_address": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Supplier main address Id.",
                "format": "int64",
                "readOnly": true
              },
              "supplier_id": {
                "type": "integer",
                "description": "Supplier Id.",
                "format": "int64",
                "readOnly": true
              },
              "address_1": {
                "maxLength": 60,
                "type": "string",
                "description": "Address line 1."
              },
              "address_2": {
                "maxLength": 60,
                "type": "string",
                "description": "Address line 2."
              },
              "address_3": {
                "maxLength": 60,
                "type": "string",
                "description": "Address line 3."
              },
              "address_4": {
                "maxLength": 60,
                "type": "string",
                "description": "Address line 4."
              },
              "city": {
                "maxLength": 60,
                "type": "string",
                "description": "City."
              },
              "county": {
                "maxLength": 60,
                "type": "string",
                "description": "County."
              },
              "postcode": {
                "maxLength": 10,
                "type": "string",
                "description": "Postcode."
              },
              "country": {
                "maxLength": 60,
                "type": "string",
                "description": "Country.",
                "readOnly": true
              },
              "contact_name": {
                "maxLength": 235,
                "type": "string",
                "description": "Contact Name.",
                "readOnly": true
              },
              "address_country_code_id": {
                "type": "integer",
                "description": "Country code Id",
                "format": "int64"
              },
              "address_country_code": {
                "type": "object",
                "properties": {},
                "description": "Country code",
                "readOnly": true
              },
              "date_time_created": {
                "type": "string",
                "description": "The date and time this entity was created (UTC).",
                "format": "date-time",
                "readOnly": true
              },
              "date_time_updated": {
                "type": "string",
                "description": "The date and time this entity was last updated (UTC).",
                "format": "date-time",
                "readOnly": true
              }
            },
            "description": "The suppliers main address which also expands address_country_code."
          },
          "payment_group": {
            "type": "object",
            "properties": {},
            "description": "The suppliers payment group.",
            "readOnly": true
          },
          "status": {
            "type": "object",
            "properties": {
              "is_live": {
                "type": "boolean",
                "description": "True if supplier account is live, else False.",
                "readOnly": true
              },
              "date_time_created": {
                "type": "string",
                "description": "The date and time this entity was created (UTC).",
                "format": "date-time",
                "readOnly": true
              },
              "date_time_updated": {
                "type": "string",
                "description": "The date and time this entity was last updated (UTC).",
                "format": "date-time",
                "readOnly": true
              }
            },
            "description": "The suppliers status. Note: This could take a long time to complete the request.",
            "readOnly": true
          },
          "contacts": {
            "type": "array",
            "description": "The suppliers contacts.",
            "items": {
              "$ref": "#/components/schemas/supplier_contact"
            }
          },
          "memos": {
            "type": "array",
            "description": "The suppliers memos.",
            "items": {
              "$ref": "#/components/schemas/supplier_memo"
            }
          },
          "alerts": {
            "type": "array",
            "description": "The suppliers alerts.",
            "items": {
              "$ref": "#/components/schemas/supplier_alert"
            }
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Suppliers are one of the most important entities within Sage 200 as they are associated with many important resources within the application and underpin most of the main features (e.g. purchase orders, purchase receipts, etc)."
      },
      "supplier_contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Supplier contact record Id.",
            "format": "int64",
            "readOnly": true
          },
          "supplier_id": {
            "type": "integer",
            "description": "Supplier record Id.",
            "format": "int64",
            "readOnly": true
          },
          "salutation_id": {
            "type": "integer",
            "description": "Salutation record Id.",
            "format": "int64"
          },
          "name": {
            "maxLength": 180,
            "type": "string",
            "description": "Contact Name - Concatenated first_name, middle_name and last_name.",
            "readOnly": true
          },
          "first_name": {
            "maxLength": 60,
            "type": "string",
            "description": "Contact first name."
          },
          "middle_name": {
            "maxLength": 60,
            "type": "string",
            "description": "Contact middle name."
          },
          "last_name": {
            "maxLength": 60,
            "type": "string",
            "description": "Contact surname."
          },
          "default_telephone": {
            "maxLength": 227,
            "type": "string",
            "description": "Default telephone number.",
            "readOnly": true
          },
          "default_email": {
            "maxLength": 227,
            "type": "string",
            "description": "Default email address.",
            "readOnly": true
          },
          "is_default": {
            "type": "boolean",
            "description": "Is this the default contact for the parent supplier.",
            "readOnly": true
          },
          "is_to_delete": {
            "type": "boolean",
            "description": "When updating an existing supplier, whether to delete this contact from the collection of supplier contacts."
          },
          "salutation": {
            "type": "object",
            "properties": {},
            "description": "Contact salutation.",
            "readOnly": true
          },
          "emails": {
            "type": "array",
            "description": "Supplier emails.",
            "items": {
              "$ref": "#/components/schemas/supplier_email"
            }
          },
          "telephones": {
            "type": "array",
            "description": "Supplier telephones.",
            "items": {
              "$ref": "#/components/schemas/supplier_telephone"
            }
          },
          "mobiles": {
            "type": "array",
            "description": "Supplier mobiles.",
            "items": {
              "$ref": "#/components/schemas/supplier_mobile"
            }
          },
          "faxes": {
            "type": "array",
            "description": "Supplier faxes.",
            "items": {
              "$ref": "#/components/schemas/supplier_fax"
            }
          },
          "websites": {
            "type": "array",
            "description": "Supplier websites.",
            "items": {
              "$ref": "#/components/schemas/supplier_website"
            }
          },
          "roles": {
            "type": "array",
            "description": "Supplier contact roles.",
            "items": {
              "$ref": "#/components/schemas/supplier_contact_role"
            }
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Information can be stored for multiple contacts against each supplier account.  Each contact can have its own details such as telephone numbers, fax numbers, email address and website."
      },
      "supplier_email": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Email address record Id.",
            "format": "int64",
            "readOnly": true
          },
          "email": {
            "maxLength": 227,
            "type": "string",
            "description": "Email address."
          },
          "supplier_contact_id": {
            "type": "integer",
            "description": "Supplier contact record Id.",
            "format": "int64",
            "readOnly": true
          },
          "is_default": {
            "type": "boolean",
            "description": "Flag to indicate if this is the default email address of the supplier contact."
          },
          "is_to_delete": {
            "type": "boolean",
            "description": "When updating an existing supplier contact, whether to delete this email from the collection of supplier contact emails."
          },
          "supplier_contact": {
            "type": "object",
            "properties": {},
            "description": "Supplier contact."
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Contact specific email addresses can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields."
      },
      "supplier_fax": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Fax record Id.",
            "format": "int64",
            "readOnly": true
          },
          "full_number": {
            "maxLength": 227,
            "type": "string",
            "description": "Fax number.",
            "readOnly": true
          },
          "country_code": {
            "maxLength": 5,
            "type": "string",
            "description": "Fax number country code."
          },
          "area_code": {
            "maxLength": 20,
            "type": "string",
            "description": "Fax number area code."
          },
          "subscriber_number": {
            "maxLength": 200,
            "type": "string",
            "description": "Fax subscriber number."
          },
          "supplier_contact_id": {
            "type": "integer",
            "description": "Supplier contact record Id.",
            "format": "int64",
            "readOnly": true
          },
          "is_default": {
            "type": "boolean",
            "description": "Flag to indicate if this is the default fax number of the supplier contact."
          },
          "is_to_delete": {
            "type": "boolean",
            "description": "When updating an existing supplier contact, whether to delete this fax from the collection of supplier contact faxes."
          },
          "supplier_contact": {
            "type": "object",
            "properties": {},
            "description": "Supplier contact."
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Contact specific fax numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields."
      },
      "supplier_mobile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Mobile record Id.",
            "format": "int64",
            "readOnly": true
          },
          "full_number": {
            "maxLength": 227,
            "type": "string",
            "description": "Mobile number.",
            "readOnly": true
          },
          "country_code": {
            "maxLength": 5,
            "type": "string",
            "description": "Mobile number country code."
          },
          "area_code": {
            "maxLength": 20,
            "type": "string",
            "description": "Mobile number area code."
          },
          "subscriber_number": {
            "maxLength": 200,
            "type": "string",
            "description": "Mobile subscriber number."
          },
          "supplier_contact_id": {
            "type": "integer",
            "description": "Supplier contact record Id.",
            "format": "int64",
            "readOnly": true
          },
          "is_default": {
            "type": "boolean",
            "description": "Flag to indicate if this is the default mobile number of the supplier contact."
          },
          "is_to_delete": {
            "type": "boolean",
            "description": "When updating an existing supplier contact, whether to delete this mobile number from the collection of supplier contact mobile numbers."
          },
          "supplier_contact": {
            "type": "object",
            "properties": {},
            "description": "Supplier contact."
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Contact specific mobile numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields."
      },
      "supplier_telephone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Telephone record Id.",
            "format": "int64",
            "readOnly": true
          },
          "full_number": {
            "maxLength": 227,
            "type": "string",
            "description": "Telephone number.",
            "readOnly": true
          },
          "country_code": {
            "maxLength": 5,
            "type": "string",
            "description": "Telephone number country code."
          },
          "area_code": {
            "maxLength": 20,
            "type": "string",
            "description": "Telephone number area code."
          },
          "subscriber_number": {
            "maxLength": 200,
            "type": "string",
            "description": "Telephone subscriber number."
          },
          "supplier_contact_id": {
            "type": "integer",
            "description": "Supplier contact record Id.",
            "format": "int64",
            "readOnly": true
          },
          "is_default": {
            "type": "boolean",
            "description": "Flag to indicate if this is the default telephone number of the supplier contact."
          },
          "is_to_delete": {
            "type": "boolean",
            "description": "When updating an existing supplier contact, whether to delete this telephone number from the collection of supplier contact telephone numbers."
          },
          "supplier_contact": {
            "type": "object",
            "properties": {},
            "description": "Supplier contact."
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Contact specific telephone numbers can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields."
      },
      "supplier_website": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Website address record Id.",
            "format": "int64",
            "readOnly": true
          },
          "website": {
            "maxLength": 227,
            "type": "string",
            "description": "The web address."
          },
          "supplier_contact_id": {
            "type": "integer",
            "description": "Supplier contact record Id.",
            "format": "int64",
            "readOnly": true
          },
          "is_default": {
            "type": "boolean",
            "description": "Flag to indicate if this is the default website for the supplier contact."
          },
          "is_to_delete": {
            "type": "boolean",
            "description": "When updating an existing supplier contact, whether to delete this website from the collection of supplier contact websites."
          },
          "supplier_contact": {
            "type": "object",
            "properties": {},
            "description": "Supplier contact."
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Contact specific websites can be queried, or updated in isolation, separate to the rest of the supplier contact details. Calling this resource doesn't return, or update any other supplier contact fields."
      },
      "supplier_contact_role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Supplier contact role record Id.",
            "format": "int64",
            "readOnly": true
          },
          "supplier_contact_id": {
            "type": "integer",
            "description": "Supplier contact record Id.",
            "format": "int64",
            "readOnly": true
          },
          "trader_contact_role_id": {
            "type": "integer",
            "description": "Trader contact role record Id.",
            "format": "int64",
            "readOnly": true
          },
          "is_preferred_contact_for_role": {
            "type": "boolean",
            "description": "Flag to indicate if this is the preferred supplier contact for the role.",
            "readOnly": true
          },
          "is_to_delete": {
            "type": "boolean",
            "description": "When updating an existing supplier contact, whether to delete this role from the collection of supplier contact roles."
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Supplier contacts can be assigned job roles. Supplier contact roles describe roles assigned to a supplier contact, including whether the contact is the preferred contact for the supplier for a role."
      },
      "supplier_view": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Supplier record Id.",
            "format": "int64"
          },
          "reference": {
            "maxLength": 20,
            "type": "string",
            "description": "The reference for the account."
          },
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier name."
          },
          "short_name": {
            "maxLength": 8,
            "type": "string",
            "description": "Supplier short name."
          },
          "country_code_id": {
            "type": "integer",
            "description": "Country code record Id.",
            "format": "int64"
          },
          "country_code": {
            "maxLength": 2,
            "type": "string",
            "description": "The supplier's country code."
          },
          "currency_id": {
            "type": "integer",
            "description": "Currency record Id.",
            "format": "int64"
          },
          "currency_name": {
            "maxLength": 30,
            "type": "string",
            "description": "The supplier currency name."
          },
          "currency_symbol": {
            "maxLength": 4,
            "type": "string",
            "description": "Currency symbol."
          },
          "currency_iso_code_id": {
            "type": "integer",
            "description": "Currency ISO code record Id.",
            "format": "int64"
          },
          "currency_iso_code": {
            "maxLength": 3,
            "type": "string",
            "description": "ISO currency code."
          },
          "currency_iso_code_name": {
            "maxLength": 100,
            "type": "string",
            "description": "ISO currency name."
          },
          "balance": {
            "type": "number",
            "description": "Supplier account balance in the supplier's currency.",
            "format": "decimal 2dp"
          },
          "base_balance": {
            "type": "number",
            "description": "Supplier account balance in the base currency.",
            "format": "decimal 2dp"
          },
          "credit_limit": {
            "type": "number",
            "description": "Credit limit of the supplier.",
            "format": "decimal 2dp"
          },
          "vat_number": {
            "maxLength": 30,
            "type": "string",
            "description": "VAT registration number."
          },
          "default_tax_rate_id": {
            "type": "integer",
            "description": "Tax rate record Id.",
            "format": "int64"
          },
          "default_tax_rate_code": {
            "type": "integer",
            "description": "Default tax code.",
            "format": "int16"
          },
          "default_tax_rate_name": {
            "maxLength": 60,
            "type": "string",
            "description": "Name of tax code."
          },
          "default_tax_rate": {
            "type": "integer",
            "description": "Tax rate.",
            "format": "decimal 2dp"
          },
          "default_order_priority": {
            "maxLength": 1,
            "type": "string",
            "description": "Default order priority."
          },
          "default_nominal_account_number": {
            "maxLength": 8,
            "type": "string",
            "description": "Default nominal account number."
          },
          "default_nominal_cost_centre": {
            "maxLength": 3,
            "type": "string",
            "description": "Default nominal cost centre."
          },
          "default_nominal_department": {
            "maxLength": 3,
            "type": "string",
            "description": "Default nominal department."
          },
          "early_settlement_discount_percent": {
            "type": "number",
            "description": "Early settlement discount percent.",
            "format": "decimal 2dp"
          },
          "days_early_settlement_disc_applies": {
            "type": "integer",
            "description": "Number of days early settlement discount applies.",
            "format": "int16"
          },
          "payment_terms_in_days": {
            "type": "integer",
            "description": "Payment terms in days.",
            "format": "int16"
          },
          "payment_terms_id": {
            "type": "integer",
            "description": "Payment terms Id.",
            "format": "int64"
          },
          "payment_terms": {
            "maxLength": 30,
            "type": "string",
            "description": "The payment terms."
          },
          "account_is_on_hold": {
            "type": "boolean",
            "description": "True if supplier account is on hold, else False."
          },
          "account_status_type_id": {
            "type": "integer",
            "description": "The status of the supplier account (Sage 200 Standard and versions of Professional released after July 2017). For example, this can either be 'Active' or 'Hidden'.",
            "format": "int64"
          },
          "account_status_type": {
            "maxLength": 20,
            "type": "string",
            "description": "The status of the supplier account (Sage 200 Standard and versions of Professional released after July 2017). For example, this can either be 'Active' or 'Hidden'."
          },
          "account_type_id": {
            "type": "integer",
            "description": "The account type is used to decide how transactions are stored on individual accounts.",
            "format": "int64"
          },
          "account_type": {
            "maxLength": 20,
            "type": "string",
            "description": "The account type is used to decide how transactions are stored on individual accounts."
          },
          "value_of_current_orders_in_pop": {
            "type": "number",
            "description": "Value of current purchase orders for this supplier.",
            "format": "decimal 2dp"
          },
          "date_account_details_last_changed": {
            "type": "string",
            "description": "Date account details last changed.",
            "format": "date-time"
          },
          "date_of_last_transaction": {
            "type": "string",
            "description": "Date of last transaction.",
            "format": "date-time"
          },
          "trading_terms": {
            "maxLength": 30,
            "type": "string",
            "description": "Trading terms for this supplier."
          },
          "credit_reference": {
            "maxLength": 60,
            "type": "string",
            "description": "Credit reference for this supplier."
          },
          "credit_bureau_id": {
            "type": "integer",
            "description": "Credit bureau Id for this supplier.",
            "format": "int64"
          },
          "credit_bureau_name": {
            "maxLength": 50,
            "type": "string",
            "description": "Credit bureau name."
          },
          "credit_position_id": {
            "type": "integer",
            "description": "Credit position Id.",
            "format": "int64"
          },
          "credit_position_name": {
            "maxLength": 50,
            "type": "string",
            "description": "Credit position name."
          },
          "account_opened": {
            "type": "string",
            "description": "The date the account was opened.",
            "format": "date-time"
          },
          "last_credit_review": {
            "type": "string",
            "description": "Date the suppliers credit details were last reviewed.",
            "format": "date-time"
          },
          "next_credit_review": {
            "type": "string",
            "description": "Date the suppliers credit details should next be reviewed.",
            "format": "date-time"
          },
          "application_date": {
            "type": "string",
            "description": "Date the supplier applied for credit.",
            "format": "date-time"
          },
          "date_received": {
            "type": "string",
            "description": "Date the credit application was received.",
            "format": "date-time"
          },
          "terms_agreed": {
            "type": "boolean",
            "description": "True if supplier terms have been agreed else False."
          },
          "is_over_credit_limit": {
            "type": "boolean",
            "description": "If the credit limit is not zero, then True is the balance is greater than the credit limit; otherwise False."
          },
          "months_to_keep_transactions_for": {
            "type": "integer",
            "description": "The number of months to keep transactions.",
            "format": "int16"
          },
          "telephone_area_code": {
            "maxLength": 20,
            "type": "string",
            "description": "Telephone area code."
          },
          "telephone_country_code": {
            "maxLength": 5,
            "type": "string",
            "description": "Telephone country code."
          },
          "telephone_subscriber_number": {
            "maxLength": 200,
            "type": "string",
            "description": "Telephone subscriber number."
          },
          "fax_area_code": {
            "maxLength": 20,
            "type": "string",
            "description": "Fax area code."
          },
          "fax_country_code": {
            "maxLength": 5,
            "type": "string",
            "description": "Fax country code."
          },
          "fax_subscriber_number": {
            "maxLength": 200,
            "type": "string",
            "description": "Fax subscriber number."
          },
          "website": {
            "maxLength": 200,
            "type": "string",
            "description": "Website address."
          },
          "contact_name": {
            "maxLength": 235,
            "type": "string",
            "description": "The default contact's name."
          },
          "contact_first_name": {
            "maxLength": 60,
            "type": "string",
            "description": "The default contact's first name."
          },
          "contact_middle_name": {
            "maxLength": 60,
            "type": "string",
            "description": "The default contact's middle name."
          },
          "contact_last_name": {
            "maxLength": 60,
            "type": "string",
            "description": "The default contact's last name."
          },
          "contact_default_telephone_number": {
            "maxLength": 227,
            "type": "string",
            "description": "The default contact's default telephone number."
          },
          "contact_default_email_address": {
            "maxLength": 227,
            "type": "string",
            "description": "The default contact's default email address."
          },
          "factor_house_name": {
            "maxLength": 60,
            "type": "string",
            "description": "The factor house name."
          },
          "payment_group_description": {
            "maxLength": 32,
            "type": "string",
            "description": "The payment group description."
          },
          "sage_payments_supplier_status_type_id": {
            "type": "integer",
            "description": "Supplier Payments status type.",
            "format": "int64"
          },
          "analysis_code_1": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 1."
          },
          "analysis_code_2": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 2."
          },
          "analysis_code_3": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 3."
          },
          "analysis_code_4": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 4."
          },
          "analysis_code_5": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 5."
          },
          "analysis_code_6": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 6."
          },
          "analysis_code_7": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 7."
          },
          "analysis_code_8": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 8."
          },
          "analysis_code_9": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 9."
          },
          "analysis_code_10": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 10."
          },
          "analysis_code_11": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 11."
          },
          "analysis_code_12": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 12."
          },
          "analysis_code_13": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 13."
          },
          "analysis_code_14": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 14."
          },
          "analysis_code_15": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 15."
          },
          "analysis_code_16": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 16."
          },
          "analysis_code_17": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 17."
          },
          "analysis_code_18": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 18."
          },
          "analysis_code_19": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 19."
          },
          "analysis_code_20": {
            "maxLength": 60,
            "type": "string",
            "description": "Analysis code 20."
          },
          "supplier_location_id": {
            "type": "integer",
            "description": "Supplier location Id.",
            "format": "int64"
          },
          "supplier_location_address_line_1": {
            "maxLength": 60,
            "type": "string",
            "description": "Address line 1."
          },
          "supplier_location_address_line_2": {
            "maxLength": 60,
            "type": "string",
            "description": "Address line 2."
          },
          "supplier_location_address_line_3": {
            "maxLength": 60,
            "type": "string",
            "description": "Address line 3."
          },
          "supplier_location_address_line_4": {
            "maxLength": 60,
            "type": "string",
            "description": "Address line 4."
          },
          "supplier_location_post_code": {
            "maxLength": 10,
            "type": "string",
            "description": "Post code."
          },
          "supplier_location_city": {
            "maxLength": 60,
            "type": "string",
            "description": "City."
          },
          "supplier_location_county": {
            "maxLength": 60,
            "type": "string",
            "description": "County."
          },
          "supplier_location_country": {
            "maxLength": 60,
            "type": "string",
            "description": "Country."
          },
          "supplier_location_full_address": {
            "maxLength": 444,
            "type": "string",
            "description": "This returns a concatenation of the address fields separated by a comma."
          },
          "supplier_location_date_time_created": {
            "type": "string",
            "description": "Date time the location record was created (UTC).",
            "format": "date-time"
          },
          "supplier_location_date_time_updated": {
            "type": "string",
            "description": "Date time the location record was updated (UTC).",
            "format": "date-time"
          },
          "supplier_location_country_code_id": {
            "type": "integer",
            "description": "Supplier location country code record Id.",
            "format": "int64"
          },
          "supplier_location_country_code": {
            "maxLength": 2,
            "type": "string",
            "description": "Supplier location country code."
          },
          "supplier_location_country_code_name": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier location country name."
          },
          "supplier_location_address_country_code_id": {
            "type": "integer",
            "description": "Supplier location address country code record Id.",
            "format": "int64"
          },
          "supplier_location_address_country_code": {
            "maxLength": 2,
            "type": "string",
            "description": "Supplier location address country code."
          },
          "supplier_location_address_country_code_name": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier location address country name."
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time the supplier was created (UTC).",
            "format": "date-time"
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time the supplier was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "When making larger requests for supplier information, the Supplier Views resource can be a faster alternative to the 'supplier' resource. The Supplier Views resource also returns a wider breadth of information than the Supplier resource. Using Supplier Views could therefore reduce the quantity of API requests needed to return the same information from multiple API resources."
      },
      "lookup_supplier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Supplier record Id.",
            "format": "int64"
          },
          "reference": {
            "maxLength": 20,
            "type": "string",
            "description": "The reference for the account."
          },
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier name."
          },
          "short_name": {
            "maxLength": 8,
            "type": "string",
            "description": "Supplier short name."
          },
          "account_status_type_id": {
            "type": "integer",
            "description": "The status of the supplier account. For example, this can either be 'Active' or 'Hidden'.",
            "format": "int64"
          },
          "post_code": {
            "maxLength": 10,
            "type": "string",
            "description": "Post code."
          }
        },
        "description": "A subset of supplier information for populating a lookup."
      },
      "supplier_alert": {
        "required": [
          "supplier_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Supplier alert record Id.",
            "format": "int64",
            "readOnly": true
          },
          "supplier_id": {
            "type": "integer",
            "description": "Supplier record Id.",
            "format": "int64"
          },
          "alert_text": {
            "maxLength": 255,
            "type": "string",
            "description": "The alert text."
          },
          "is_active": {
            "type": "boolean",
            "description": "True if alert status is active, false if it is inactive.",
            "default": true
          },
          "show_alert_for_orders": {
            "type": "boolean",
            "description": "True if this alert shows for orders, false if not.",
            "default": false
          },
          "show_alert_for_returns": {
            "type": "boolean",
            "description": "True if this alert shows for returns, false if not.",
            "default": false
          },
          "show_alert_for_generate_purchase_orders": {
            "type": "boolean",
            "description": "True if this alert shows for generate purchase orders, false if not.",
            "default": false
          },
          "show_alert_for_generate_purchase_order_from_requisition_lines": {
            "type": "boolean",
            "description": "True if this alert shows for purchase order from requisition lines, false if not.",
            "default": false
          },
          "show_alert_for_generate_purchase_orders_from_trial_kitting": {
            "type": "boolean",
            "description": "True if this alert shows for generate purchase orders from trial kitting, false if not.",
            "default": false
          },
          "is_to_delete": {
            "type": "boolean",
            "description": "When updating an existing supplier, whether to delete this alert from the collection of supplier alerts."
          },
          "updated_by": {
            "maxLength": 30,
            "type": "string",
            "description": "The user that updated the alert.",
            "readOnly": true
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Alerts are messages that can be displayed when a user performs a particular task. You can show alerts when entering purchase orders, returns, generating purchase orders, purchase order from requisition lines and generating purchase orders from trial kitting."
      },
      "supplier_memo": {
        "required": [
          "note",
          "supplier_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Supplier memo record Id.",
            "format": "int64",
            "readOnly": true
          },
          "supplier_id": {
            "type": "integer",
            "description": "Supplier record Id.",
            "format": "int64"
          },
          "note": {
            "maxLength": 1000,
            "type": "string",
            "description": "The memo text."
          },
          "is_active": {
            "type": "boolean",
            "description": "True if memo status is active, false if it is inactive."
          },
          "is_to_delete": {
            "type": "boolean",
            "description": "When updating an existing supplier, whether to delete this memo from the collection of supplier memos."
          },
          "created_by": {
            "maxLength": 20,
            "type": "string",
            "description": "The user that created the memo.",
            "readOnly": true
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Memos are sections of text that can be used to make comments about a supplier account such as reminders, or notes (e.g. if there is currently a dispute over an order). These can be used to note information about previous communications, or anything that should be taken into consideration when contacting the supplier (e.g. there is currently a dispute over order).<br/><br/>Multiple memos can be added to each account. The user that created the memo, the date it was created and last updated date and time are also recorded.<br/><br/>A user can also specify if a memo is currently 'Active' or 'Inactive'. This allows a user to keep a record of previous memos without deleting them."
      },
      "suppliers_new_request": {
        "type": "object",
        "description": "Returns a supplier with all the defaults that have been specified within the application. The API endpoint does not persist the supplier."
      },
      "urn": {
        "type": "object",
        "properties": {
          "urn": {
            "maxLength": 20,
            "type": "string",
            "description": "Unique reference number."
          }
        },
        "description": "This is the description of the urn."
      },
      "purchase_payment": {
        "required": [
          "bank_id",
          "cheque_value",
          "supplier_id"
        ],
        "type": "object",
        "properties": {
          "supplier_id": {
            "type": "integer",
            "description": "Supplier record Id.",
            "format": "int64"
          },
          "bank_id": {
            "type": "integer",
            "description": "Bank record Id.",
            "format": "int64"
          },
          "cheque_currency_id": {
            "type": "integer",
            "description": "Receipt currency record Id. This defaults to the supplier account currency.",
            "format": "int64"
          },
          "cheque_value": {
            "type": "number",
            "description": "Value of the receipt.",
            "format": "decimal 2dp"
          },
          "supplier_cheque_value": {
            "type": "number",
            "description": "Value to post to the supplier account.",
            "format": "decimal 2dp"
          },
          "transaction_date": {
            "type": "string",
            "description": "Transaction date. This defaults to the current system date.",
            "format": "date-time"
          },
          "exchange_rate": {
            "type": "number",
            "description": "Exchange rate for the payment. This defaults to the supplier exchange rate.",
            "format": "decimal 6dp"
          },
          "bank_exchange_rate": {
            "type": "number",
            "description": "Exchange rate for the supplier to the bank currency.",
            "format": "decimal 6dp"
          },
          "cheque_exchange_rate": {
            "type": "number",
            "description": "Exchange rate for the supplier to the cheque currency.",
            "format": "decimal 6dp"
          },
          "settlement_discount_value": {
            "type": "number",
            "description": "Settlement discount value.",
            "format": "decimal 2dp"
          },
          "reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Receipt reference."
          },
          "second_reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Receipt second reference."
          },
          "nominal_analysis_items": {
            "type": "array",
            "description": "Nominal analysis lines.",
            "items": {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "maxLength": 8,
                  "type": "string",
                  "description": "Nominal account code."
                },
                "cost_centre": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Cost centre. If specified must correspond to the code."
                },
                "department": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Department. If specified must correspond to the code."
                },
                "narrative": {
                  "maxLength": 6000,
                  "type": "string",
                  "description": "Narrative."
                },
                "value": {
                  "type": "number",
                  "description": "Value to post to the nominal account.",
                  "format": "decimal 2dp"
                },
                "transaction_analysis_code": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "Specify a transaction analysis code to be used on the nominal analysis item. This requires that the ledger settings allow additional analysis and that the code is valid"
                }
              }
            }
          }
        },
        "description": "Payments are used to record a supplier payment against a particular supplier's account.<br /><br />Posting a purchase payment does not actually create a 'purchase payment' entity, but a Posted Transaction of type 'TradingAccountEntryTypePurchasePaymentSalesReceipt', therefore it is not possible to 'get' a purchase payment using the same API endpoint after it has been posted. Posting a purchase payment returns a URN (Unique Reference Number) that can be used to find the corresponding posted transaction.<br /><br />Note: Before posting purchase payments via the API, at least one bank account must exist within Sage 200."
      },
      "purchase_receipt": {
        "required": [
          "bank_id",
          "cheque_value",
          "supplier_id"
        ],
        "type": "object",
        "properties": {
          "supplier_id": {
            "type": "integer",
            "description": "Supplier record Id.",
            "format": "int64"
          },
          "bank_id": {
            "type": "integer",
            "description": "Bank record Id.",
            "format": "int64"
          },
          "cheque_currency_id": {
            "type": "integer",
            "description": "Receipt currency record Id. This defaults to the supplier account currency.",
            "format": "int64"
          },
          "cheque_value": {
            "type": "number",
            "description": "Value of the receipt.",
            "format": "decimal 2dp"
          },
          "supplier_cheque_value": {
            "type": "number",
            "description": "Value to post to the supplier account.",
            "format": "decimal 2dp"
          },
          "transaction_date": {
            "type": "string",
            "description": "Transaction date. This defaults to the current system date.",
            "format": "date-time"
          },
          "exchange_rate": {
            "type": "number",
            "description": "Exchange rate for the receipt. This defaults to the supplier exchange rate.",
            "format": "decimal 6dp"
          },
          "bank_exchange_rate": {
            "type": "number",
            "description": "Exchange rate for the supplier to the bank currency.",
            "format": "decimal 6dp"
          },
          "cheque_exchange_rate": {
            "type": "number",
            "description": "Exchange rate for the supplier to the cheque currency.",
            "format": "decimal 6dp"
          },
          "settlement_discount_value": {
            "type": "number",
            "description": "Settlement discount value.",
            "format": "decimal 2dp"
          },
          "reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Receipt reference."
          },
          "second_reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Receipt second reference."
          },
          "nominal_analysis_items": {
            "type": "array",
            "description": "Nominal analysis lines.",
            "items": {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "maxLength": 8,
                  "type": "string",
                  "description": "Nominal account code."
                },
                "cost_centre": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Cost centre. If specified must correspond to the code."
                },
                "department": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Department. If specified must correspond to the code."
                },
                "narrative": {
                  "maxLength": 6000,
                  "type": "string",
                  "description": "Narrative."
                },
                "value": {
                  "type": "number",
                  "description": "Value to post to the nominal account.",
                  "format": "decimal 2dp"
                },
                "transaction_analysis_code": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "Specify a transaction analysis code to be used on the nominal analysis item. This requires that the ledger settings allow additional analysis and that the code is valid"
                }
              }
            }
          }
        },
        "description": "Receipts are used to record a supplier receipt against a particular supplier's account.<br /><br />Posting a purchase receipt does not actually create a 'purchase receipt' entity, but a Posted Transaction of type 'TradingAccountEntryTypePurchaseReceiptSalesPayment', therefore it is not possible to 'get' a purchase receipt using the same API endpoint after it has been posted. Posting a purchase receipt returns a URN (Unique Reference Number) that can be used to find the corresponding posted transaction.<br /><br />Note: Before posting purchase receipts via the API, at least one bank account must exist within Sage 200."
      },
      "purchase_authorisation": {
        "type": "object",
        "properties": {
          "reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Transaction reference.",
            "readOnly": true
          },
          "second_reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Transaction second reference.",
            "readOnly": true
          },
          "transaction_date": {
            "type": "string",
            "description": "Transaction date.",
            "format": "date-time",
            "readOnly": true
          },
          "supplier_id": {
            "type": "integer",
            "description": "Supplier record Id.",
            "format": "int64",
            "readOnly": true
          },
          "oplock": {
            "maxLength": 20,
            "type": "string",
            "description": "OpLock value.",
            "readOnly": true
          },
          "supplier": {
            "type": "object",
            "properties": {},
            "description": "The supplier.",
            "readOnly": true
          },
          "nominal_analysis_items": {
            "type": "array",
            "description": "Nominal analysis items.",
            "items": {
              "required": [
                "code",
                "value"
              ],
              "type": "object",
              "properties": {
                "nominal_code_id": {
                  "type": "integer",
                  "description": "Nominal code record Id",
                  "format": "int64"
                },
                "code": {
                  "maxLength": 8,
                  "type": "string",
                  "description": "Nominal account code."
                },
                "cost_centre": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Cost centre. If specified must correspond to the code."
                },
                "department": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Department. If specified must correspond to the code."
                },
                "name": {
                  "maxLength": 8,
                  "type": "string",
                  "description": "Nominal code name.",
                  "readOnly": true
                },
                "narrative": {
                  "maxLength": 6000,
                  "type": "string",
                  "description": "Narrative."
                },
                "value": {
                  "type": "number",
                  "description": "Value to post to the nominal account.",
                  "format": "decimal 2dp"
                },
                "type": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "The type of the nominal code",
                  "readOnly": true
                },
                "transaction_analysis_code": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "Specify a transaction analysis code to be used on the nominal analysis item. This requires that the ledger settings allow additional analysis and that the code is valid"
                }
              }
            }
          }
        },
        "description": "Invoices and Credit Notes which are above a threshold value are unauthorised. The value of unauthorised transactions is posted to the default nominal account for Unauthorised Purchases. Use authorisation to reverse the posting from the Unauthorised Purchases nominal account and post to the intended account."
      },
      "purchase_ledger_settings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Purchase Ledger Settings record Id.",
            "format": "int64",
            "readOnly": true
          },
          "electronic_bank_payments": {
            "type": "boolean",
            "description": "Whether to use the Sage e-Banking facility to make electronic bank payments to your suppliers.",
            "default": false
          },
          "allow_batch_processing": {
            "type": "boolean",
            "description": "Whether multiple supplier transactions can be entered at once.",
            "default": false
          },
          "auto_generate_account_numbers": {
            "type": "boolean",
            "description": "Whether supplier account numbers (reference) are generated automatically.",
            "default": false
          },
          "next_account_number": {
            "type": "integer",
            "description": "The next supplier account number (reference) which will be assigned.",
            "format": "int32"
          },
          "allow_additional_trans_analysis": {
            "type": "boolean",
            "description": "Whether to include additional nominal transaction information for each transaction that is entered.",
            "default": false
          },
          "use_transaction_date_for_allocation": {
            "type": "boolean",
            "description": "Whether or not to use the receipt/payment date as the default allocation date.",
            "default": false
          },
          "capture_additional_transaction_details": {
            "type": "boolean",
            "description": "Indicates whether to allow additional tax details for purchase invoices. NOTE: this applies only to Standard for Education datasets.",
            "readOnly": true
          },
          "early_settlement_discount_days": {
            "type": "integer",
            "description": "The default number of days an invoice must be paid within to qualify for the discount.",
            "format": "int16"
          },
          "early_settlement_discount_percent": {
            "type": "number",
            "description": "The default discount percentage offered by suppliers.",
            "format": "decimal 2dp"
          },
          "keep_transactions_for": {
            "type": "integer",
            "description": "The default length of time (in months) to keep transactions for supplier accounts.",
            "format": "int16"
          },
          "archive_transaction_after_keeping": {
            "type": "boolean",
            "description": "Whether to archive (or delete) supplier transactions after the period to keep transactions.",
            "default": false
          },
          "maximum_enquiry_transactions_to_display": {
            "type": "integer",
            "description": "The default number of transactions to display on the Supplier Transaction Enquiry screen.",
            "format": "int64"
          },
          "show_outstanding_transactions": {
            "type": "boolean",
            "description": "Whether to show only outstanding transactions (by default) on the Supplier Transaction Enquiry screen.",
            "default": false
          },
          "max_cheque_value": {
            "type": "number",
            "description": "The maximum payment cheque value to be generated.",
            "format": "decimal 2dp"
          },
          "default_tax_code_id": {
            "type": "integer",
            "description": "The supplier default tax code record Id.",
            "format": "int64"
          },
          "default_terms_agreed": {
            "type": "boolean",
            "description": "Whether (by default) terms have been agreed with new supplier accounts.",
            "default": false
          },
          "no_of_reporting_periods": {
            "type": "integer",
            "description": "The number of ageing and overdue periods.",
            "format": "int16"
          },
          "default_payment_terms_basis": {
            "maxLength": 20,
            "type": "string",
            "description": "The default terms which, together with the default payment terms (days), determines the due date of invoices. For example, \"From document date\", or \"From end of month\"",
            "default": "PaymentDueFromCalendarMonth"
          },
          "default_payment_terms_days": {
            "type": "integer",
            "description": "The number of days which, together with the default payment terms basis, determines the due date for invoices.",
            "format": "int16"
          },
          "use_account_periods_as_trading_periods": {
            "type": "boolean",
            "description": "Whether or not the accounting periods are used as the trading periods. (Sage 200 Standard value is true and cannot be changed).",
            "default": true
          },
          "ageing_periods": {
            "type": "array",
            "description": "Ageing periods.",
            "items": {
              "$ref": "#/components/schemas/ageing_period"
            }
          },
          "overdue_periods": {
            "type": "array",
            "description": "Overdue periods.",
            "items": {
              "$ref": "#/components/schemas/overdue_period"
            }
          },
          "revalue_foreign_entries": {
            "type": "boolean",
            "description": "Whether to revalue invoices paid in foreign currency to their value in base currency.",
            "default": false
          },
          "use_invoice_authorisation": {
            "type": "boolean",
            "description": "Whether to require invoices or credit notes above a certain value to be authorised.",
            "default": false
          },
          "authorisation_threshold_value": {
            "type": "number",
            "description": "The amount at which invoices are required to be authorised.",
            "format": "decimal 2dp"
          },
          "all_accounts_use_same_payment_method": {
            "type": "boolean",
            "description": "Whether to use only one payment method for all your supplier accounts.",
            "default": false
          },
          "default_tax_code": {
            "type": "object",
            "properties": {},
            "description": "The supplier default tax code."
          },
          "payment_groups": {
            "type": "array",
            "description": "Payment groups.",
            "items": {
              "$ref": "#/components/schemas/payment_group"
            }
          },
          "organisation_supplier_payment_group": {
            "type": "object",
            "properties": {},
            "description": "The organisation-wide Supplier payment group, used when 'all_accounts_use_same_payment_method' is true."
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "The Purchase Ledger settings are used to configure application behaviour with respect to the Purchase Ledger module.<br/><br/>Settings include the maximum payment amount to be genarated, the supplier default tax code, etc."
      },
      "payment_group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Payment group Id.",
            "format": "int64",
            "readOnly": true
          },
          "payment_group_number": {
            "type": "integer",
            "description": "The payment group number.",
            "format": "int16"
          },
          "post_to_ledger_on_payment_run": {
            "type": "boolean",
            "description": "Whether to post payments to the supplier account when payments are generated.",
            "default": false
          },
          "summarise_payments": {
            "type": "boolean",
            "description": "Whether to post a batch of payments to the Cash Book as a single entry.",
            "default": false
          },
          "is_supplier_payments_group": {
            "type": "boolean",
            "description": "Whether this payment group is used for supplier payments.",
            "readOnly": true,
            "default": false
          },
          "payment_type": {
            "maxLength": 20,
            "type": "string",
            "description": "The payment method for the payment group.",
            "default": "PaymentTypeRemittanceCheque"
          },
          "description": {
            "maxLength": 32,
            "type": "string",
            "description": "The description for the payment method."
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Use payment groups to automatically process supplier payments."
      },
      "factor_house": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Factor house Id.",
            "format": "int64",
            "readOnly": true
          },
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "The factor house name."
          },
          "reference": {
            "maxLength": 20,
            "type": "string",
            "description": "The factor house reference."
          },
          "main_address": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Factor house addresss record Id.",
                "format": "int64",
                "readOnly": true
              },
              "contact": {
                "maxLength": 60,
                "type": "string",
                "description": "Address contact name."
              },
              "country": {
                "maxLength": 60,
                "type": "string",
                "description": "Address country."
              },
              "telephone": {
                "maxLength": 200,
                "type": "string",
                "description": "Factor house contact telephone."
              },
              "mobile": {
                "maxLength": 200,
                "type": "string",
                "description": "Factor house contact mobile."
              },
              "fax": {
                "maxLength": 200,
                "type": "string",
                "description": "Factor house contact fax."
              },
              "email": {
                "maxLength": 200,
                "type": "string",
                "description": "Factor house contact email."
              },
              "website": {
                "maxLength": 200,
                "type": "string",
                "description": "Factor house contact website."
              },
              "address_1": {
                "maxLength": 60,
                "type": "string",
                "description": "Address line 1."
              },
              "address_2": {
                "maxLength": 60,
                "type": "string",
                "description": "Address line 2."
              },
              "address_3": {
                "maxLength": 60,
                "type": "string",
                "description": "Address line 3."
              },
              "address_4": {
                "maxLength": 60,
                "type": "string",
                "description": "Address line 4."
              },
              "city": {
                "maxLength": 60,
                "type": "string",
                "description": "City."
              },
              "county": {
                "maxLength": 60,
                "type": "string",
                "description": "County."
              },
              "postcode": {
                "maxLength": 10,
                "type": "string",
                "description": "Postcode."
              },
              "date_time_created": {
                "type": "string",
                "description": "The date and time this entity was created (UTC).",
                "format": "date-time",
                "readOnly": true
              },
              "date_time_updated": {
                "type": "string",
                "description": "The date and time this entity was last updated (UTC).",
                "format": "date-time",
                "readOnly": true
              }
            },
            "description": "The factor house main address."
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Factor houses are third party companies employed by suppliers to collect payments from customers."
      },
      "ageing_period": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Ageing period Id.",
            "format": "int64",
            "readOnly": true
          },
          "days_period_starts_after": {
            "type": "integer",
            "description": "The number of days after which the ageing period starts.",
            "format": "int16"
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Ageing periods help to manage outstanding customer and supplier debt. They determine how transactions appear on statements, letters, and Aged Debtor reports."
      },
      "overdue_period": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Overdue period Id.",
            "format": "int64",
            "readOnly": true
          },
          "days_period_starts_after": {
            "type": "integer",
            "description": "The number of days after which the overdue period starts.",
            "format": "int16"
          },
          "date_time_created": {
            "type": "string",
            "description": "The date and time this entity was created (UTC).",
            "format": "date-time",
            "readOnly": true
          },
          "date_time_updated": {
            "type": "string",
            "description": "The date and time this entity was last updated (UTC).",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Overdue periods help to manage outstanding customer and supplier debt. They determine how transactions appear on the Due Date report."
      },
      "payment_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Payment type record Id.",
            "format": "int64",
            "readOnly": true
          },
          "description": {
            "maxLength": 50,
            "type": "string",
            "description": "Description of the payment type.",
            "readOnly": true
          },
          "value": {
            "maxLength": 20,
            "type": "string",
            "description": "Enum value.",
            "readOnly": true
          }
        },
        "description": "Gets the list of Payment group payment types which can be used. For example, \"Remittance & cheque\", or \"Remittance only (Email)\"."
      },
      "supplier_period_value_view": {
        "type": "object",
        "properties": {
          "supplier_id": {
            "type": "integer",
            "description": "Supplier record Id.",
            "format": "int64"
          },
          "supplier_reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Supplier account reference."
          },
          "supplier_name": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier name."
          },
          "supplier_analysis_code_1": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier analysis code 1."
          },
          "supplier_analysis_code_2": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier analysis code 2."
          },
          "supplier_analysis_code_3": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier analysis code 3."
          },
          "supplier_analysis_code_4": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier analysis code 4."
          },
          "supplier_analysis_code_5": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier analysis code 5."
          },
          "supplier_period_value_id": {
            "type": "integer",
            "description": "Supplier period value record Id.",
            "format": "int64"
          },
          "period_value_total_invoice_value_to_date": {
            "type": "number",
            "description": "Total invoice value to date for the period.",
            "format": "decimal 2dp"
          },
          "period_value_total_credit_note_value_to_date": {
            "type": "number",
            "description": "Total credit note value to date for the period.",
            "format": "decimal 2dp"
          },
          "period_value_total_cash_value_to_date": {
            "type": "number",
            "description": "Total cash value to date for the period.",
            "format": "decimal 2dp"
          },
          "period_value_total_profit_value_to_date": {
            "type": "number",
            "description": "Total profit value to date for the period.",
            "format": "decimal 2dp"
          },
          "period_value_total_invoice_value_to_date_in_base": {
            "type": "number",
            "description": "Total invoice value to date for the period in base currency.",
            "format": "decimal 2dp"
          },
          "period_value_total_cred_note_value_to_date_in_base": {
            "type": "number",
            "description": "Total credit note value to date for the period in base currency.",
            "format": "decimal 2dp"
          },
          "period_value_total_cash_value_to_date_in_base": {
            "type": "number",
            "description": "Total cash value to date for the period in base currency.",
            "format": "decimal 2dp"
          },
          "period_value_total_profit_value_to_date_in_base": {
            "type": "number",
            "description": "Total profit value to date for the period in base currency.",
            "format": "decimal 2dp"
          },
          "period_value_exchange_rate_gain_or_loss": {
            "type": "integer",
            "description": "Exchange rate gain or loss for the period.",
            "format": "int64",
            "readOnly": true
          },
          "period_value_total_finance_charges_applied": {
            "type": "number",
            "description": "Total finance charges applied for the period.",
            "format": "decimal 2dp"
          },
          "supplier_analysis_period_id": {
            "type": "integer",
            "description": "Supplier analysis period record Id.",
            "format": "int64"
          },
          "analysis_period_reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Analysis period reference."
          },
          "analysis_period_start_date": {
            "type": "string",
            "description": "Analysis period start date.",
            "format": "date-time"
          },
          "analysis_period_end_date": {
            "type": "string",
            "description": "Analysis period end date.",
            "format": "date-time"
          },
          "period_value_date_time_updated": {
            "type": "string",
            "description": "The date and time the supplier analysis period entity was last updated (UTC).",
            "format": "date-time"
          }
        },
        "description": "Includes supplier values (total invoices, total credit notes, total cash, etc.) for a period of a financial year held for the company. A company always has five future financial years and can have unlimited previous years, depending on how long the company has been operating."
      },
      "supplier_year_value_view": {
        "type": "object",
        "properties": {
          "supplier_id": {
            "type": "integer",
            "description": "Supplier record Id.",
            "format": "int64"
          },
          "supplier_reference": {
            "maxLength": 20,
            "type": "string",
            "description": "Supplier account reference."
          },
          "supplier_name": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier name."
          },
          "supplier_analysis_code_1": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier analysis code 1."
          },
          "supplier_analysis_code_2": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier analysis code 2."
          },
          "supplier_analysis_code_3": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier analysis code 3."
          },
          "supplier_analysis_code_4": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier analysis code 4."
          },
          "supplier_analysis_code_5": {
            "maxLength": 60,
            "type": "string",
            "description": "Supplier analysis code 5."
          },
          "supplier_year_value_id": {
            "type": "integer",
            "description": "Supplier year value record Id.",
            "format": "int64"
          },
          "year_value_total_invoice_value_to_date": {
            "type": "number",
            "description": "Total invoice value to date for the year.",
            "format": "decimal 2dp"
          },
          "year_value_total_credit_note_value_to_date": {
            "type": "number",
            "description": "Total credit note value to date for the year.",
            "format": "decimal 2dp"
          },
          "year_value_total_cash_value_to_date": {
            "type": "number",
            "description": "Total cash value to date for the year.",
            "format": "decimal 2dp"
          },
          "year_value_total_profit_value_to_date": {
            "type": "number",
            "description": "Total profit value to date for the year.",
            "format": "decimal 2dp"
          },
          "year_value_total_invoice_value_to_date_in_base": {
            "type": "number",
            "description": "Total invoice value to date for the year in base currency.",
            "format": "decimal 2dp"
          },
          "year_value_total_cred_note_value_to_date_in_base": {
            "type": "number",
            "description": "Total credit note value to date for the year in base currency.",
            "format": "decimal 2dp"
          },
          "year_value_total_cash_value_to_date_in_base": {
            "type": "number",
            "description": "Total cash value to date for the year in base currency.",
            "format": "decimal 2dp"
          },
          "year_value_total_profit_value_to_date_in_base": {
            "type": "number",
            "description": "Total profit value to date for the year in base currency.",
            "format": "decimal 2dp"
          },
          "year_value_exchange_rate_gain_or_loss": {
            "type": "integer",
            "description": "Exchange rate gain or loss for the year.",
            "format": "int64"
          },
          "year_value_total_finance_charges_applied": {
            "type": "number",
            "description": "Total finance charges applied for the year.",
            "format": "decimal 2dp"
          },
          "financial_year_id": {
            "type": "integer",
            "description": "Financial year record Id.",
            "format": "int64"
          },
          "financial_year_start_date": {
            "type": "string",
            "description": "Financial year start date.",
            "format": "date-time"
          },
          "financial_year_end_date": {
            "type": "string",
            "description": "Financial year end date.",
            "format": "date-time"
          },
          "year_relative_to_current_year": {
            "type": "integer",
            "description": "Financial year relative to current year.",
            "format": "int32"
          },
          "number_of_periods_in_year": {
            "type": "integer",
            "description": "Number of accounting periods in the financial year.",
            "format": "int16"
          },
          "year_value_date_time_updated": {
            "type": "string",
            "description": "The date and time the supplier year value entity was last updated (UTC).",
            "format": "date-time"
          }
        },
        "description": "Includes supplier values (total invoices, total credit notes, total cash, etc.) for a financial year held for the company. A company always has five future financial years and can have unlimited previous years, depending on how long the company has been operating."
      }
    }
  },
  "x-original-swagger-version": "2.0"
}